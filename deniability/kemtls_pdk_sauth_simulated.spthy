rule KEMTLS_PDK_SAUTH_simulated:
  let
    SERVER_CERTIFICATE = <'ServerCertificate', pk_S>
    pk_e = KEM_e_PK(~sk_e)
    ct_S = KEM_s_Encaps_ct(pk_S, ~coins_S)
    ss_S = KEM_s_Encaps_ss(pk_S, ~coins_S)
    CLIENT_HELLO = <'ClientHello', pk_e, ~r_c, ct_S, 'pdk_mode', H(pk_S)>
    ES = HKDFExtract('0', ss_S)
ifdef(<!FULL!>, <!
    ETS = HKDFExpand(ES, 'early_data', <CLIENT_HELLO>)
    dES = HKDFExpand(ES, 'derived', '0')
    ct_e = KEM_e_Encaps_ct(pk_e, ~coins_e)
    ss_e = KEM_e_Encaps_ss(pk_e, ~coins_e)
    SERVER_HELLO = <'ServerHello', ct_e, ~r_s>
    HS = HKDFExtract(dES, ss_e)
    CHTS = HKDFExpand(HS, 'c_hs_traffic', <CLIENT_HELLO, SERVER_HELLO>)
    SHTS = HKDFExpand(HS, 's_hs_traffic', <CLIENT_HELLO, SERVER_HELLO>)
    dHS = HKDFExpand(HS, 'derived', '0')
    MS = HKDFExtract(dHS, '0')
    fk_c = HKDFExpand(MS, 'c_finished', '0')
    fk_s = HKDFExpand(MS, 's_finished', '0')
    SF = HMAC(fk_s, <CLIENT_HELLO, SERVER_HELLO>)
    SERVER_FINISHED = <'ServerFinished', SF>
    SATS = HKDFExpand(MS, 's_ap_traffic', <CLIENT_HELLO, SERVER_HELLO, SERVER_FINISHED>)
    CF = HMAC(fk_c, <CLIENT_HELLO, SERVER_HELLO, SERVER_FINISHED>)
    CLIENT_FINISHED = <'ClientFinished', CF>
    CATS = HKDFExpand(MS, 'c_ap_traffic', <CLIENT_HELLO, SERVER_HELLO, SERVER_FINISHED, CLIENT_FINISHED>)
!>)
  in
  [
    !Pk($S, pk_S, 'KEM_s'),
    Fr(~sk_e),
    Fr(~r_c),
ifdef(<!FULL!>, <!
    Fr(~r_s),
    Fr(~coins_e),
!>)
    Fr(~coins_S)
  ]
  --[]->
  [ 
    FakeTranscript(
      <SERVER_CERTIFICATE, CLIENT_HELLO
        ifdef(<!FULL!>, <!, SERVER_HELLO, SERVER_FINISHED, CLIENT_FINISHED!>)
      >,
      <ES
        ifdef(<!FULL!>, <!, ETS, CHTS, SHTS, SATS, CATS!>)
      >,
      <pk_S>
    )
  ]
