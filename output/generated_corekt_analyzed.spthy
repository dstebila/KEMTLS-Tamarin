theory corekt begin

// Function signature and definition of the equational theory E

functions: HKDFExpand/3, HKDFExtract/2, HMAC/2, KEM_c_Decaps/2,
           KEM_c_Encaps_ct/2, KEM_c_Encaps_ss/2, KEM_c_PK/1, KEM_e_Decaps/2,
           KEM_e_Encaps_ct/2, KEM_e_Encaps_ss/2, KEM_e_PK/1, KEM_s_Decaps/2,
           KEM_s_Encaps_ct/2, KEM_s_Encaps_ss/2, KEM_s_PK/1, fst/1, pair/2, snd/1
equations:
    KEM_c_Decaps(KEM_c_Encaps_ct(KEM_c_PK(sk), coins), sk)
  = KEM_c_Encaps_ss(KEM_c_PK(sk), coins),
    KEM_e_Decaps(KEM_e_Encaps_ct(KEM_e_PK(sk), coins), sk)
  = KEM_e_Encaps_ss(KEM_e_PK(sk), coins),
    KEM_s_Decaps(KEM_s_Encaps_ct(KEM_s_PK(sk), coins), sk)
  = KEM_s_Encaps_ss(KEM_s_PK(sk), coins),
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2



/* looping facts with injective instances: State/5 */

rule (modulo E) KEMTLS_KEM_s_KeyGen:
   [ Fr( ~sk_P ) ]
  --[ RegisteredLTK( $P, KEM_s_PK(~sk_P), 'KEM_s' ) ]->
   [
   !Ltk( $P, KEM_s_PK(~sk_P), ~sk_P, 'KEM_s' ),
   !Pk( $P, KEM_s_PK(~sk_P), 'KEM_s' ), Out( KEM_s_PK(~sk_P) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KEMTLS_KEM_c_KeyGen:
   [ Fr( ~sk_P ) ]
  --[ RegisteredLTK( $P, KEM_c_PK(~sk_P), 'KEM_c' ) ]->
   [
   !Ltk( $P, KEM_c_PK(~sk_P), ~sk_P, 'KEM_c' ),
   !Pk( $P, KEM_c_PK(~sk_P), 'KEM_c' ), Out( KEM_c_PK(~sk_P) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Action_Fact_API_declarations:
   [ ] --[ Replayable( 'tid', 'stage' ) ]-> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) KEMTLS_PDK_SAUTH_ClientAction1:
   [
   !Pk( $S, pk_S, 'KEM_s' ), Fr( ~tid ), Fr( ~sk_e ), Fr( ~coins_S ),
   Fr( ~r_c )
   ]
  --[
  Role( ~tid, 'client' ),
  ProtocolMode( ~tid, '1', '1', 'KEMTLS_PDK_SAUTH' ),
  CID( ~tid, '1',
       <'ETS', pk_S, KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(pk_S, ~coins_S)>
  ),
  SID( ~tid, '1',
       <'ETS', pk_S, KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(pk_S, ~coins_S)>
  ),
  Accept( ~tid, '1' ), Owner( ~tid, 'anonymous' ), Peer( ~tid, $S ),
  SK( ~tid, '1',
      HKDFExpand(HKDFExtract('0', KEM_s_Encaps_ss(pk_S, ~coins_S)),
                 'early_data', <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(pk_S, ~coins_S)>)
  ),
  FS( ~tid, '1', '1', 'nofs' ), Replayable( ~tid, '1' )
  ]->
   [
   Out( ~tid ),
   Out( <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(pk_S, ~coins_S)> ),
   State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
          <~sk_e, 
           HKDFExpand(HKDFExtract('0', KEM_s_Encaps_ss(pk_S, ~coins_S)), 'derived',
                      '0')
          >,
          <pk_S, KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(pk_S, ~coins_S)>
   ),
   !SessionKey( ~tid, '1',
                HKDFExpand(HKDFExtract('0', KEM_s_Encaps_ss(pk_S, ~coins_S)),
                           'early_data', <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(pk_S, ~coins_S)>)
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KEMTLS_PDK_SAUTH_ClientAction2_part1:
   [
   !Pk( $S, pk_S, 'KEM_s' ),
   State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
          <pk_S, pk_e, r_c, ct_S>
   ),
   In( <ct_e, r_s> )
   ]
  --[
  ProtocolMode( tid, '1', '2', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '1', '3', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '2', '2', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '2', '3', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '3', '3', 'KEMTLS_PDK_SAUTH' ),
  CID( tid, '2', <'CHTS', pk_S, <pk_e, r_c, ct_S>, ct_e, r_s> ),
  SID( tid, '2', <'CHTS', pk_S, <pk_e, r_c, ct_S>, ct_e, r_s> ),
  CID( tid, '3', <'SHTS', pk_S, <pk_e, r_c, ct_S>, ct_e, r_s> ),
  SID( tid, '3', <'SHTS', pk_S, <pk_e, r_c, ct_S>, ct_e, r_s> ),
  Accept( tid, '2' ), Accept( tid, '3' ), FS( tid, '1', '2', 'nofs' ),
  FS( tid, '1', '3', 'nofs' ),
  SK( tid, '2',
      HKDFExpand(HKDFExtract(dES, KEM_e_Decaps(ct_e, sk_e)), 'c_hs_traffic',
                 <<pk_e, r_c, ct_S>, ct_e, r_s>)
  ),
  FS( tid, '2', '2', 'wfs2' ), FS( tid, '2', '3', 'wfs2' ),
  SK( tid, '3',
      HKDFExpand(HKDFExtract(dES, KEM_e_Decaps(ct_e, sk_e)), 's_hs_traffic',
                 <<pk_e, r_c, ct_S>, ct_e, r_s>)
  ),
  FS( tid, '3', '3', 'wfs2' )
  ]->
   [
   State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
          HKDFExtract(dES, KEM_e_Decaps(ct_e, sk_e)),
          <pk_S, <pk_e, r_c, ct_S>, ct_e, r_s>
   ),
   !SessionKey( tid, '2',
                HKDFExpand(HKDFExtract(dES, KEM_e_Decaps(ct_e, sk_e)), 'c_hs_traffic',
                           <<pk_e, r_c, ct_S>, ct_e, r_s>)
   ),
   !SessionKey( tid, '3',
                HKDFExpand(HKDFExtract(dES, KEM_e_Decaps(ct_e, sk_e)), 's_hs_traffic',
                           <<pk_e, r_c, ct_S>, ct_e, r_s>)
   )
   ]

  /*
  rule (modulo AC) KEMTLS_PDK_SAUTH_ClientAction2_part1:
     [
     !Pk( $S, pk_S, 'KEM_s' ),
     State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
            <pk_S, pk_e, r_c, ct_S>
     ),
     In( <ct_e, r_s> )
     ]
    --[
    ProtocolMode( tid, '1', '2', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( tid, '1', '3', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( tid, '2', '2', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( tid, '2', '3', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( tid, '3', '3', 'KEMTLS_PDK_SAUTH' ),
    CID( tid, '2', <'CHTS', pk_S, <pk_e, r_c, ct_S>, ct_e, r_s> ),
    SID( tid, '2', <'CHTS', pk_S, <pk_e, r_c, ct_S>, ct_e, r_s> ),
    CID( tid, '3', <'SHTS', pk_S, <pk_e, r_c, ct_S>, ct_e, r_s> ),
    SID( tid, '3', <'SHTS', pk_S, <pk_e, r_c, ct_S>, ct_e, r_s> ),
    Accept( tid, '2' ), Accept( tid, '3' ), FS( tid, '1', '2', 'nofs' ),
    FS( tid, '1', '3', 'nofs' ),
    SK( tid, '2',
        HKDFExpand(HKDFExtract(dES, z), 'c_hs_traffic',
                   <<pk_e, r_c, ct_S>, ct_e, r_s>)
    ),
    FS( tid, '2', '2', 'wfs2' ), FS( tid, '2', '3', 'wfs2' ),
    SK( tid, '3',
        HKDFExpand(HKDFExtract(dES, z), 's_hs_traffic',
                   <<pk_e, r_c, ct_S>, ct_e, r_s>)
    ),
    FS( tid, '3', '3', 'wfs2' )
    ]->
     [
     State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
            HKDFExtract(dES, z), <pk_S, <pk_e, r_c, ct_S>, ct_e, r_s>
     ),
     !SessionKey( tid, '2',
                  HKDFExpand(HKDFExtract(dES, z), 'c_hs_traffic',
                             <<pk_e, r_c, ct_S>, ct_e, r_s>)
     ),
     !SessionKey( tid, '3',
                  HKDFExpand(HKDFExtract(dES, z), 's_hs_traffic',
                             <<pk_e, r_c, ct_S>, ct_e, r_s>)
     )
     ]
    variants (modulo AC)
    1. ct_e  = ct_e.23
       sk_e  = sk_e.29
       z     = KEM_e_Decaps(ct_e.23, sk_e.29)
    
    2. ct_e  = KEM_e_Encaps_ct(KEM_e_PK(sk_e.210), x.410)
       sk_e  = sk_e.210
       z     = KEM_e_Encaps_ss(KEM_e_PK(sk_e.210), x.410)
  */

rule (modulo E) KEMTLS_PDK_SAUTH_ClientAction2_part2:
   [
   !Pk( $S, pk_S, 'KEM_s' ),
   State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
          <pk_S, <pk_e, r_c, ct_S>, ct_e, r_s>
   ),
   In( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                       's_finished', '0'),
            <<pk_e, r_c, ct_S>, ct_e, r_s>)
   )
   ]
  --[
  ProtocolMode( tid, '1', '4', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '1', '5', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '2', '4', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '2', '5', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '3', '4', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '3', '5', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '4', '4', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '4', '5', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '5', '5', 'KEMTLS_PDK_SAUTH' ),
  CID( tid, '4',
       <'SATS', pk_S, <pk_e, r_c, ct_S>, <ct_e, r_s>, 
        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                        's_finished', '0'),
             <<pk_e, r_c, ct_S>, ct_e, r_s>)
       >
  ),
  SID( tid, '4',
       <'SATS', pk_S, <pk_e, r_c, ct_S>, <ct_e, r_s>, 
        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                        's_finished', '0'),
             <<pk_e, r_c, ct_S>, ct_e, r_s>)
       >
  ),
  CID( tid, '5',
       <'CATS', pk_S, <pk_e, r_c, ct_S>, <ct_e, r_s>, 
        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                        's_finished', '0'),
             <<pk_e, r_c, ct_S>, ct_e, r_s>), 
        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                        'c_finished', '0'),
             <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                              's_finished', '0'),
                   <<pk_e, r_c, ct_S>, ct_e, r_s>)
             >)
       >
  ),
  SID( tid, '5',
       <'CATS', pk_S, <pk_e, r_c, ct_S>, <ct_e, r_s>, 
        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                        's_finished', '0'),
             <<pk_e, r_c, ct_S>, ct_e, r_s>), 
        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                        'c_finished', '0'),
             <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                              's_finished', '0'),
                   <<pk_e, r_c, ct_S>, ct_e, r_s>)
             >)
       >
  ),
  Accept( tid, '4' ), Accept( tid, '5' ), FS( tid, '1', '4', 'nofs' ),
  FS( tid, '1', '5', 'nofs' ), FS( tid, '2', '4', 'fs' ),
  FS( tid, '2', '5', 'fs' ), FS( tid, '3', '4', 'fs' ),
  FS( tid, '3', '5', 'fs' ), FS( tid, '4', '4', 'fs' ),
  FS( tid, '4', '5', 'fs' ), FS( tid, '5', '5', 'fs' ),
  SK( tid, '4',
      HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                 's_ap_traffic',
                 <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
                  HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                                  's_finished', '0'),
                       <<pk_e, r_c, ct_S>, ct_e, r_s>)
                 >)
  ),
  SK( tid, '5',
      HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                 'c_ap_traffic',
                 <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
                  HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                                  's_finished', '0'),
                       <<pk_e, r_c, ct_S>, ct_e, r_s>), 
                  HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                                  'c_finished', '0'),
                       <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                                        's_finished', '0'),
                             <<pk_e, r_c, ct_S>, ct_e, r_s>)
                       >)
                 >)
  ),
  Peer( tid, $S ), Auth( tid, '1', '4' ), Auth( tid, '2', '4' ),
  Auth( tid, '3', '4' ), Auth( tid, '4', '4' )
  ]->
   [
   Out( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                        'c_finished', '0'),
             <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                              's_finished', '0'),
                   <<pk_e, r_c, ct_S>, ct_e, r_s>)
             >)
   ),
   !SessionKey( tid, '4',
                HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                           's_ap_traffic',
                           <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
                            HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                                            's_finished', '0'),
                                 <<pk_e, r_c, ct_S>, ct_e, r_s>)
                           >)
   ),
   !SessionKey( tid, '5',
                HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                           'c_ap_traffic',
                           <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
                            HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                                            's_finished', '0'),
                                 <<pk_e, r_c, ct_S>, ct_e, r_s>), 
                            HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                                            'c_finished', '0'),
                                 <<pk_e, r_c, ct_S>, <ct_e, r_s>, 
                                  HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HS, 'derived', '0'), '0'),
                                                  's_finished', '0'),
                                       <<pk_e, r_c, ct_S>, ct_e, r_s>)
                                 >)
                           >)
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) KEMTLS_PDK_SAUTH_ServerAction1:
   [
   Fr( ~tid ), !Ltk( $S, pk_S, sk_S, 'KEM_s' ), In( <pk_e, r_c, ct_S> ),
   Fr( ~coins_e ), Fr( ~r_s )
   ]
  --[
  ProtocolMode( ~tid, '1', '1', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '1', '2', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '1', '3', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '1', '4', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '2', '2', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '2', '3', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '2', '4', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '3', '3', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '3', '4', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( ~tid, '4', '4', 'KEMTLS_PDK_SAUTH' ), Owner( ~tid, $S ),
  Peer( ~tid, 'anonymous' ), Role( ~tid, 'server' ),
  CID( ~tid, '1', <'ETS', pk_S, pk_e, r_c, ct_S> ),
  SID( ~tid, '1', <'ETS', pk_S, pk_e, r_c, ct_S> ),
  CID( ~tid, '2',
       <'CHTS', pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
  ),
  SID( ~tid, '2',
       <'CHTS', pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
  ),
  CID( ~tid, '3',
       <'SHTS', pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
  ),
  SID( ~tid, '3',
       <'SHTS', pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
  ),
  CID( ~tid, '4',
       <'SATS', pk_S, <pk_e, r_c, ct_S>, 
        <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                  KEM_s_Decaps(ct_S, sk_S)),
                                                                      'derived', '0'),
                                                           KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                               'derived', '0'),
                                    '0'),
                        's_finished', '0'),
             <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
       >
  ),
  SID( ~tid, '4',
       <'SATS', pk_S, <pk_e, r_c, ct_S>, 
        <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                  KEM_s_Decaps(ct_S, sk_S)),
                                                                      'derived', '0'),
                                                           KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                               'derived', '0'),
                                    '0'),
                        's_finished', '0'),
             <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
       >
  ),
  Accept( ~tid, '1' ), Accept( ~tid, '2' ), Accept( ~tid, '3' ),
  Accept( ~tid, '4' ),
  SK( ~tid, '1',
      HKDFExpand(HKDFExtract('0', KEM_s_Decaps(ct_S, sk_S)), 'early_data',
                 <pk_e, r_c, ct_S>)
  ),
  FS( ~tid, '1', '1', 'nofs' ), FS( ~tid, '1', '2', 'nofs' ),
  FS( ~tid, '1', '3', 'nofs' ), FS( ~tid, '1', '4', 'nofs' ),
  SK( ~tid, '2',
      HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                    KEM_s_Decaps(ct_S, sk_S)),
                                        'derived', '0'),
                             KEM_e_Encaps_ss(pk_e, ~coins_e)),
                 'c_hs_traffic',
                 <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
  ),
  FS( ~tid, '2', '2', 'wfs1' ), FS( ~tid, '2', '3', 'wfs1' ),
  FS( ~tid, '2', '4', 'wfs1' ),
  SK( ~tid, '3',
      HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                    KEM_s_Decaps(ct_S, sk_S)),
                                        'derived', '0'),
                             KEM_e_Encaps_ss(pk_e, ~coins_e)),
                 's_hs_traffic',
                 <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
  ),
  FS( ~tid, '3', '3', 'wfs1' ), FS( ~tid, '3', '4', 'wfs1' ),
  SK( ~tid, '4',
      HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Decaps(ct_S, sk_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                        'derived', '0'),
                             '0'),
                 's_ap_traffic',
                 <<pk_e, r_c, ct_S>, <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                  HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                            KEM_s_Decaps(ct_S,
                                                                                                         sk_S)),
                                                                                'derived', '0'),
                                                                     KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                         'derived', '0'),
                                              '0'),
                                  's_finished', '0'),
                       <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                 >)
  ),
  FS( ~tid, '4', '4', 'wfs1' ), Replayable( ~tid, '1' )
  ]->
   [
   Out( ~tid ),
   Out( <<KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Decaps(ct_S, sk_S)),
                                                                       'derived', '0'),
                                                            KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                'derived', '0'),
                                     '0'),
                         's_finished', '0'),
              <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
        >
   ),
   State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
          <
           HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                     KEM_s_Decaps(ct_S, sk_S)),
                                                         'derived', '0'),
                                              KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                  'derived', '0'),
                       '0'), 
           HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                KEM_s_Decaps(ct_S, sk_S)),
                                                                    'derived', '0'),
                                                         KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                             'derived', '0'),
                                  '0'),
                      'c_finished', '0')
          >,
          <pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
   ),
   !SessionKey( ~tid, '1',
                HKDFExpand(HKDFExtract('0', KEM_s_Decaps(ct_S, sk_S)), 'early_data',
                           <pk_e, r_c, ct_S>)
   ),
   !SessionKey( ~tid, '2',
                HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                              KEM_s_Decaps(ct_S, sk_S)),
                                                  'derived', '0'),
                                       KEM_e_Encaps_ss(pk_e, ~coins_e)),
                           'c_hs_traffic',
                           <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
   ),
   !SessionKey( ~tid, '3',
                HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                              KEM_s_Decaps(ct_S, sk_S)),
                                                  'derived', '0'),
                                       KEM_e_Encaps_ss(pk_e, ~coins_e)),
                           's_hs_traffic',
                           <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
   ),
   !SessionKey( ~tid, '4',
                HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Decaps(ct_S,
                                                                                                  sk_S)),
                                                                         'derived', '0'),
                                                              KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                  'derived', '0'),
                                       '0'),
                           's_ap_traffic',
                           <<pk_e, r_c, ct_S>, <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                            HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Decaps(ct_S,
                                                                                                                   sk_S)),
                                                                                          'derived', '0'),
                                                                               KEM_e_Encaps_ss(pk_e,
                                                                                               ~coins_e)),
                                                                   'derived', '0'),
                                                        '0'),
                                            's_finished', '0'),
                                 <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                           >)
   )
   ]

  /*
  rule (modulo AC) KEMTLS_PDK_SAUTH_ServerAction1:
     [
     Fr( ~tid ), !Ltk( $S, pk_S, sk_S, 'KEM_s' ), In( <pk_e, r_c, ct_S> ),
     Fr( ~coins_e ), Fr( ~r_s )
     ]
    --[
    ProtocolMode( ~tid, '1', '1', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '1', '2', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '1', '3', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '1', '4', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '2', '2', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '2', '3', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '2', '4', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '3', '3', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '3', '4', 'KEMTLS_PDK_SAUTH' ),
    ProtocolMode( ~tid, '4', '4', 'KEMTLS_PDK_SAUTH' ), Owner( ~tid, $S ),
    Peer( ~tid, 'anonymous' ), Role( ~tid, 'server' ),
    CID( ~tid, '1', <'ETS', pk_S, pk_e, r_c, ct_S> ),
    SID( ~tid, '1', <'ETS', pk_S, pk_e, r_c, ct_S> ),
    CID( ~tid, '2',
         <'CHTS', pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
    ),
    SID( ~tid, '2',
         <'CHTS', pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
    ),
    CID( ~tid, '3',
         <'SHTS', pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
    ),
    SID( ~tid, '3',
         <'SHTS', pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
    ),
    CID( ~tid, '4',
         <'SATS', pk_S, <pk_e, r_c, ct_S>, 
          <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
          HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    z),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                 'derived', '0'),
                                      '0'),
                          's_finished', '0'),
               <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
         >
    ),
    SID( ~tid, '4',
         <'SATS', pk_S, <pk_e, r_c, ct_S>, 
          <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
          HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    z),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                 'derived', '0'),
                                      '0'),
                          's_finished', '0'),
               <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
         >
    ),
    Accept( ~tid, '1' ), Accept( ~tid, '2' ), Accept( ~tid, '3' ),
    Accept( ~tid, '4' ),
    SK( ~tid, '1',
        HKDFExpand(HKDFExtract('0', z), 'early_data', <pk_e, r_c, ct_S>)
    ),
    FS( ~tid, '1', '1', 'nofs' ), FS( ~tid, '1', '2', 'nofs' ),
    FS( ~tid, '1', '3', 'nofs' ), FS( ~tid, '1', '4', 'nofs' ),
    SK( ~tid, '2',
        HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0', z), 'derived', '0'),
                               KEM_e_Encaps_ss(pk_e, ~coins_e)),
                   'c_hs_traffic',
                   <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
    ),
    FS( ~tid, '2', '2', 'wfs1' ), FS( ~tid, '2', '3', 'wfs1' ),
    FS( ~tid, '2', '4', 'wfs1' ),
    SK( ~tid, '3',
        HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0', z), 'derived', '0'),
                               KEM_e_Encaps_ss(pk_e, ~coins_e)),
                   's_hs_traffic',
                   <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
    ),
    FS( ~tid, '3', '3', 'wfs1' ), FS( ~tid, '3', '4', 'wfs1' ),
    SK( ~tid, '4',
        HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                             z),
                                                                 'derived', '0'),
                                                      KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                          'derived', '0'),
                               '0'),
                   's_ap_traffic',
                   <<pk_e, r_c, ct_S>, <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                              z),
                                                                                  'derived', '0'),
                                                                       KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                           'derived', '0'),
                                                '0'),
                                    's_finished', '0'),
                         <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                   >)
    ),
    FS( ~tid, '4', '4', 'wfs1' ), Replayable( ~tid, '1' )
    ]->
     [
     Out( ~tid ),
     Out( <<KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                     z),
                                                                         'derived', '0'),
                                                              KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                  'derived', '0'),
                                       '0'),
                           's_finished', '0'),
                <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
          >
     ),
     State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
            <
             HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0', z),
                                                           'derived', '0'),
                                                KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                    'derived', '0'),
                         '0'), 
             HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                  z),
                                                                      'derived', '0'),
                                                           KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                               'derived', '0'),
                                    '0'),
                        'c_finished', '0')
            >,
            <pk_S, <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
     ),
     !SessionKey( ~tid, '1',
                  HKDFExpand(HKDFExtract('0', z), 'early_data', <pk_e, r_c, ct_S>)
     ),
     !SessionKey( ~tid, '2',
                  HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0', z), 'derived', '0'),
                                         KEM_e_Encaps_ss(pk_e, ~coins_e)),
                             'c_hs_traffic',
                             <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
     ),
     !SessionKey( ~tid, '3',
                  HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0', z), 'derived', '0'),
                                         KEM_e_Encaps_ss(pk_e, ~coins_e)),
                             's_hs_traffic',
                             <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
     ),
     !SessionKey( ~tid, '4',
                  HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                       z),
                                                                           'derived', '0'),
                                                                KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                    'derived', '0'),
                                         '0'),
                             's_ap_traffic',
                             <<pk_e, r_c, ct_S>, <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                        z),
                                                                                            'derived', '0'),
                                                                                 KEM_e_Encaps_ss(pk_e,
                                                                                                 ~coins_e)),
                                                                     'derived', '0'),
                                                          '0'),
                                              's_finished', '0'),
                                   <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                             >)
     )
     ]
    variants (modulo AC)
    1. ct_S  = ct_S.18
       sk_S  = sk_S.22
       z     = KEM_s_Decaps(ct_S.18, sk_S.22)
    
    2. ct_S  = KEM_s_Encaps_ct(KEM_s_PK(sk_S.565), x.1120)
       sk_S  = sk_S.565
       z     = KEM_s_Encaps_ss(KEM_s_PK(sk_S.565), x.1120)
  */

rule (modulo E) KEMTLS_PDK_SAUTH_ServerAction2:
   [
   !Ltk( $S, pk_S, sk_S, 'KEM_s' ),
   State( tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
          <pk_S, <pk_e, r_c, ct_S>, ct_e, r_s>
   ),
   In( HMAC(fk_c, <<pk_e, r_c, ct_S>, <ct_e, r_s>, SF>) )
   ]
  --[
  ProtocolMode( tid, '1', '5', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '2', '5', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '3', '5', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '4', '5', 'KEMTLS_PDK_SAUTH' ),
  ProtocolMode( tid, '5', '5', 'KEMTLS_PDK_SAUTH' ),
  CID( tid, '5',
       <'CATS', pk_S, <pk_e, r_c, ct_S>, <ct_e, r_s>, SF, 
        HMAC(fk_c, <<pk_e, r_c, ct_S>, <ct_e, r_s>, SF>)>
  ),
  SID( tid, '5',
       <'CATS', pk_S, <pk_e, r_c, ct_S>, <ct_e, r_s>, SF, 
        HMAC(fk_c, <<pk_e, r_c, ct_S>, <ct_e, r_s>, SF>)>
  ),
  Accept( tid, '5' ), FS( tid, '1', '5', 'nofs' ),
  FS( tid, '2', '5', 'wfs1' ), FS( tid, '3', '5', 'wfs1' ),
  FS( tid, '4', '5', 'wfs1' ), FS( tid, '5', '5', 'wfs1' ),
  SK( tid, '5',
      HKDFExpand(MS, 'c_ap_traffic',
                 <<pk_e, r_c, ct_S>, <ct_e, r_s>, SF, 
                  HMAC(fk_c, <<pk_e, r_c, ct_S>, <ct_e, r_s>, SF>)>)
  )
  ]->
   [
   !SessionKey( tid, '5',
                HKDFExpand(MS, 'c_ap_traffic',
                           <<pk_e, r_c, ct_S>, <ct_e, r_s>, SF, 
                            HMAC(fk_c, <<pk_e, r_c, ct_S>, <ct_e, r_s>, SF>)>)
   )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) ORevealSessionKey:
   [ !SessionKey( tid, stage, key ) ]
  --[ RevealedSessionKey( tid, stage ) ]->
   [ Out( key ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) OCorruptLTK:
   [ !Ltk( $P, pk, sk, type ) ]
  --[ CorruptedLTK( $P, type ) ]->
   [ Out( sk ) ]

  /* has exactly the trivial AC variant */

lemma reachable_KEMTLS_PDK_SAUTH_stage1_accepted1_cnofs_snofs:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '1' ) @ #t9)) ∧
                   (Accept( tid_s, '1' ) @ #t10)) ∧
                  (Accept( tid_c, '1' ) @ #t11)) ∧
                 (Accept( tid_s, '1' ) @ #t12)) ∧
                (CID( tid_c, '1', sid_target ) @ #t13)) ∧
               (CID( tid_s, '1', sid_target ) @ #t14)) ∧
              (SID( tid_c, '1', sid_target ) @ #t15)) ∧
             (SID( tid_s, '1', sid_target ) @ #t16)) ∧
            (CID( tid_c, '1', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '1', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '1', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '1', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '1', '1' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '1', '1' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '1', '1', 'nofs' ) @ #t21)) ∧
     (FS( tid_s, '1', '1', 'nofs' ) @ #t22)) ∧
    ((((⊤) ∧ (∃ #ttc. Replayable( tid_c, '1' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '1' ) @ #tts)) ∨
     (((¬(⊤)) ∧ (¬(∃ #ttc. Replayable( tid_c, '1' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '1' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '1' ) @ #t9) ∧
  (Accept( tid_s, '1' ) @ #t10) ∧
  (Accept( tid_c, '1' ) @ #t11) ∧
  (Accept( tid_s, '1' ) @ #t12) ∧
  (CID( tid_c, '1', sid_target ) @ #t13) ∧
  (CID( tid_s, '1', sid_target ) @ #t14) ∧
  (SID( tid_c, '1', sid_target ) @ #t15) ∧
  (SID( tid_s, '1', sid_target ) @ #t16) ∧
  (CID( tid_c, '1', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '1', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '1', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '1', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '1', '1', 'nofs' ) @ #t21) ∧
  (FS( tid_s, '1', '1', 'nofs' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∃ #ttc. (Replayable( tid_c, '1' ) @ #ttc)) ∧
  (∃ #tts. (Replayable( tid_s, '1' ) @ #tts))"
*/
simplify
solve( ProtocolMode( tid_c, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( ProtocolMode( tid_s, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
        case KEMTLS_KEM_s_KeyGen
        solve( Owner( ~tid, 'anonymous' ) @ #t3 )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Peer( ~tid, 'anonymous' ) @ #t5 )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Role( ~tid, 'client' ) @ #t7 )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( Role( ~tid.1, 'server' ) @ #t8 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( Accept( ~tid, '1' ) @ #t9 )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( Accept( ~tid.1, '1' ) @ #t10 )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        solve( Accept( ~tid, '1' ) @ #t11 )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( Accept( ~tid.1, '1' ) @ #t12 )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( CID( ~tid, '1', sid_target ) @ #t13 )
                              case KEMTLS_PDK_SAUTH_ClientAction1
                              solve( CID( ~tid.1, '1',
                                          <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                     ) @ #t14 )
                                case KEMTLS_PDK_SAUTH_ServerAction1
                                solve( SID( ~tid, '1',
                                            <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                       ) @ #t15 )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( SID( ~tid.1, '1',
                                              <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                         ) @ #t16 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    solve( CID( ~tid, '1', sid_accepted ) @ #t17 )
                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                      solve( CID( ~tid.1, '1',
                                                  <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                             ) @ #t18 )
                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                        solve( SID( ~tid, '1',
                                                    <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                               ) @ #t19 )
                                          case KEMTLS_PDK_SAUTH_ClientAction1
                                          solve( SID( ~tid.1, '1',
                                                      <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                 ) @ #t20 )
                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                            solve( FS( ~tid, '1', '1', 'nofs' ) @ #t21 )
                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                              solve( FS( ~tid.1, '1', '1', 'nofs' ) @ #t22 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( Replayable( ~tid, '1' ) @ #ttc )
                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                  solve( Replayable( ~tid.1, '1' ) @ #tts )
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    solve( !KU( ~r_c ) @ #vk.3 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                                      solve( !KU( KEM_e_PK(~sk_e) ) @ #vk.2 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                               ) @ #vk.4 )
                                                          case KEMTLS_PDK_SAUTH_ClientAction1
                                                          SOLVED // trace found
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage1_accepted2_cnofs_snofs:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '1', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '1', '2', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '1' ) @ #t9)) ∧
                   (Accept( tid_s, '1' ) @ #t10)) ∧
                  (Accept( tid_c, '2' ) @ #t11)) ∧
                 (Accept( tid_s, '2' ) @ #t12)) ∧
                (CID( tid_c, '1', sid_target ) @ #t13)) ∧
               (CID( tid_s, '1', sid_target ) @ #t14)) ∧
              (SID( tid_c, '1', sid_target ) @ #t15)) ∧
             (SID( tid_s, '1', sid_target ) @ #t16)) ∧
            (CID( tid_c, '2', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '2', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '2', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '2', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '1', '2' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '1', '2' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '1', '2', 'nofs' ) @ #t21)) ∧
     (FS( tid_s, '1', '2', 'nofs' ) @ #t22)) ∧
    ((((⊤) ∧ (∃ #ttc. Replayable( tid_c, '1' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '1' ) @ #tts)) ∨
     (((¬(⊤)) ∧ (¬(∃ #ttc. Replayable( tid_c, '1' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '1' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '1', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '1', '2', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '1' ) @ #t9) ∧
  (Accept( tid_s, '1' ) @ #t10) ∧
  (Accept( tid_c, '2' ) @ #t11) ∧
  (Accept( tid_s, '2' ) @ #t12) ∧
  (CID( tid_c, '1', sid_target ) @ #t13) ∧
  (CID( tid_s, '1', sid_target ) @ #t14) ∧
  (SID( tid_c, '1', sid_target ) @ #t15) ∧
  (SID( tid_s, '1', sid_target ) @ #t16) ∧
  (CID( tid_c, '2', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '2', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '2', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '2', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '1', '2', 'nofs' ) @ #t21) ∧
  (FS( tid_s, '1', '2', 'nofs' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∃ #ttc. (Replayable( tid_c, '1' ) @ #ttc)) ∧
  (∃ #tts. (Replayable( tid_s, '1' ) @ #tts))"
*/
simplify
solve( ProtocolMode( tid_c, '1', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                  <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( ProtocolMode( tid_s, '1', '2', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '1' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        solve( Accept( ~tid.1, '1' ) @ #t10 )
                          case KEMTLS_PDK_SAUTH_ServerAction1
                          solve( Accept( ~tid, '2' ) @ #t11 )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                     ) ▶₁ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( Accept( ~tid.1, '2' ) @ #t12 )
                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                  solve( CID( ~tid, '1', sid_target ) @ #t13 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( CID( ~tid.1, '1',
                                                <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                           ) @ #t14 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( SID( ~tid, '1',
                                                  <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                             ) @ #t15 )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( SID( ~tid.1, '1',
                                                    <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                               ) @ #t16 )
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( CID( ~tid, '2', sid_accepted ) @ #t17 )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                              case KEMTLS_KEM_s_KeyGen
                                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                            <sk_e.1, dES>,
                                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                     ) ▶₁ #t17 )
                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                solve( CID( ~tid.1, '2',
                                                            <'CHTS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             ct_e, r_s>
                                                       ) @ #t18 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( SID( ~tid, '2',
                                                              <'CHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                               ~r_s>
                                                         ) @ #t19 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t19 )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                    <sk_e.1, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #t19 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        solve( SID( ~tid.1, '2',
                                                                    <'CHTS', KEM_s_PK(~sk_P), 
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                     ~coins_e), 
                                                                     ~r_s>
                                                               ) @ #t20 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          solve( FS( ~tid, '1', '2', 'nofs' ) @ #t21 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                            solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t21 )
                                                              case KEMTLS_KEM_s_KeyGen
                                                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                            'ClientAction1', <sk_e.1, dES>,
                                                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, 
                                                                             ct_S>
                                                                     ) ▶₁ #t21 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                solve( FS( ~tid.1, '1', '2', 'nofs' ) @ #t22 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  solve( Replayable( ~tid, '1' ) @ #ttc )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( Replayable( ~tid.1, '1' ) @ #tts )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      solve( !KU( ~r_c ) @ #vk.6 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                        solve( !KU( ~r_s ) @ #vk.3 )
                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                          solve( !KU( KEM_e_PK(~sk_e)
                                                                                 ) @ #vk.6 )
                                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                                            solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S)
                                                                                   ) @ #vk.7 )
                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                              solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                          ~coins_e)
                                                                                     ) @ #vk.7 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                SOLVED // trace found
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage1_accepted3_cnofs_snofs:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '1', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '1', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '1' ) @ #t9)) ∧
                   (Accept( tid_s, '1' ) @ #t10)) ∧
                  (Accept( tid_c, '3' ) @ #t11)) ∧
                 (Accept( tid_s, '3' ) @ #t12)) ∧
                (CID( tid_c, '1', sid_target ) @ #t13)) ∧
               (CID( tid_s, '1', sid_target ) @ #t14)) ∧
              (SID( tid_c, '1', sid_target ) @ #t15)) ∧
             (SID( tid_s, '1', sid_target ) @ #t16)) ∧
            (CID( tid_c, '3', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '3', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '3', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '3', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '1', '3' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '1', '3' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '1', '3', 'nofs' ) @ #t21)) ∧
     (FS( tid_s, '1', '3', 'nofs' ) @ #t22)) ∧
    ((((⊤) ∧ (∃ #ttc. Replayable( tid_c, '1' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '1' ) @ #tts)) ∨
     (((¬(⊤)) ∧ (¬(∃ #ttc. Replayable( tid_c, '1' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '1' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '1', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '1', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '1' ) @ #t9) ∧
  (Accept( tid_s, '1' ) @ #t10) ∧
  (Accept( tid_c, '3' ) @ #t11) ∧
  (Accept( tid_s, '3' ) @ #t12) ∧
  (CID( tid_c, '1', sid_target ) @ #t13) ∧
  (CID( tid_s, '1', sid_target ) @ #t14) ∧
  (SID( tid_c, '1', sid_target ) @ #t15) ∧
  (SID( tid_s, '1', sid_target ) @ #t16) ∧
  (CID( tid_c, '3', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '3', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '3', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '3', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '1', '3', 'nofs' ) @ #t21) ∧
  (FS( tid_s, '1', '3', 'nofs' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∃ #ttc. (Replayable( tid_c, '1' ) @ #ttc)) ∧
  (∃ #tts. (Replayable( tid_s, '1' ) @ #tts))"
*/
simplify
solve( ProtocolMode( tid_c, '1', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                  <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( ProtocolMode( tid_s, '1', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '1' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        solve( Accept( ~tid.1, '1' ) @ #t10 )
                          case KEMTLS_PDK_SAUTH_ServerAction1
                          solve( Accept( ~tid, '3' ) @ #t11 )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                     ) ▶₁ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( Accept( ~tid.1, '3' ) @ #t12 )
                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                  solve( CID( ~tid, '1', sid_target ) @ #t13 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( CID( ~tid.1, '1',
                                                <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                           ) @ #t14 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( SID( ~tid, '1',
                                                  <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                             ) @ #t15 )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( SID( ~tid.1, '1',
                                                    <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                               ) @ #t16 )
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( CID( ~tid, '3', sid_accepted ) @ #t17 )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                              case KEMTLS_KEM_s_KeyGen
                                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                            <sk_e.1, dES>,
                                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                     ) ▶₁ #t17 )
                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                solve( CID( ~tid.1, '3',
                                                            <'SHTS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             ct_e, r_s>
                                                       ) @ #t18 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( SID( ~tid, '3',
                                                              <'SHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                               ~r_s>
                                                         ) @ #t19 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t19 )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                    <sk_e.1, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #t19 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        solve( SID( ~tid.1, '3',
                                                                    <'SHTS', KEM_s_PK(~sk_P), 
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                     ~coins_e), 
                                                                     ~r_s>
                                                               ) @ #t20 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          solve( FS( ~tid, '1', '3', 'nofs' ) @ #t21 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                            solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t21 )
                                                              case KEMTLS_KEM_s_KeyGen
                                                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                            'ClientAction1', <sk_e.1, dES>,
                                                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, 
                                                                             ct_S>
                                                                     ) ▶₁ #t21 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                solve( FS( ~tid.1, '1', '3', 'nofs' ) @ #t22 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  solve( Replayable( ~tid, '1' ) @ #ttc )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( Replayable( ~tid.1, '1' ) @ #tts )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      solve( !KU( ~r_c ) @ #vk.6 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                        solve( !KU( ~r_s ) @ #vk.3 )
                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                          solve( !KU( KEM_e_PK(~sk_e)
                                                                                 ) @ #vk.6 )
                                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                                            solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S)
                                                                                   ) @ #vk.7 )
                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                              solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                          ~coins_e)
                                                                                     ) @ #vk.7 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                SOLVED // trace found
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage1_accepted4_cnofs_snofs:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '1', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '1', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊤)) ∧ (S = 'anonymous')) ∨ ((⊤) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '1' ) @ #t9)) ∧
                   (Accept( tid_s, '1' ) @ #t10)) ∧
                  (Accept( tid_c, '4' ) @ #t11)) ∧
                 (Accept( tid_s, '4' ) @ #t12)) ∧
                (CID( tid_c, '1', sid_target ) @ #t13)) ∧
               (CID( tid_s, '1', sid_target ) @ #t14)) ∧
              (SID( tid_c, '1', sid_target ) @ #t15)) ∧
             (SID( tid_s, '1', sid_target ) @ #t16)) ∧
            (CID( tid_c, '4', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '4', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '4', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '4', sid_accepted ) @ #t20)) ∧
        (((⊤) ∧ (∃ #tt1. Auth( tid_c, '1', '4' ) @ #tt1)) ∨ (¬(⊤)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '1', '4' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '1', '4', 'nofs' ) @ #t21)) ∧
     (FS( tid_s, '1', '4', 'nofs' ) @ #t22)) ∧
    ((((⊤) ∧ (∃ #ttc. Replayable( tid_c, '1' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '1' ) @ #tts)) ∨
     (((¬(⊤)) ∧ (¬(∃ #ttc. Replayable( tid_c, '1' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '1' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '1', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '1', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '1' ) @ #t9) ∧
  (Accept( tid_s, '1' ) @ #t10) ∧
  (Accept( tid_c, '4' ) @ #t11) ∧
  (Accept( tid_s, '4' ) @ #t12) ∧
  (CID( tid_c, '1', sid_target ) @ #t13) ∧
  (CID( tid_s, '1', sid_target ) @ #t14) ∧
  (SID( tid_c, '1', sid_target ) @ #t15) ∧
  (SID( tid_s, '1', sid_target ) @ #t16) ∧
  (CID( tid_c, '4', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '4', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '4', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '4', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '1', '4', 'nofs' ) @ #t21) ∧
  (FS( tid_s, '1', '4', 'nofs' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (¬(S = 'anonymous')) ∧
  (C = 'anonymous') ∧
  (∃ #tt1. (Auth( tid_c, '1', '4' ) @ #tt1)) ∧
  (∃ #ttc. (Replayable( tid_c, '1' ) @ #ttc)) ∧
  (∃ #tts. (Replayable( tid_s, '1' ) @ #tts))"
*/
simplify
solve( ProtocolMode( tid_c, '1', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '1', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, S.2 ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, $S.1 ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '1' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        solve( Accept( ~tid.1, '1' ) @ #t10 )
                          case KEMTLS_PDK_SAUTH_ServerAction1
                          solve( Accept( ~tid, '4' ) @ #t11 )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t11 )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                     ) ▶₁ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                solve( Accept( ~tid.1, '4' ) @ #t12 )
                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                  solve( CID( ~tid, '1', sid_target ) @ #t13 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( CID( ~tid.1, '1',
                                                <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                           ) @ #t14 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( SID( ~tid, '1',
                                                  <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                             ) @ #t15 )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( SID( ~tid.1, '1',
                                                    <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                               ) @ #t16 )
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( CID( ~tid, '4', sid_accepted ) @ #t17 )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                              case KEMTLS_KEM_s_KeyGen
                                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                            HS,
                                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                             r_s.2>
                                                     ) ▶₁ #t17 )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( CID( ~tid.1, '4',
                                                            <'SATS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             <ct_e, r_s>, 
                                                             HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                z),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0'),
                                                                  <
                                                                   <KEM_e_PK(~sk_e), ~r_c, 
                                                                    KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                   >, 
                                                                   ct_e, r_s>)
                                                            >
                                                       ) @ #t18 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( SID( ~tid, '4',
                                                              <'SATS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                ~r_s>, 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                     ~coins_e), 
                                                                     ~r_s>)
                                                              >
                                                         ) @ #t19 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                    solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t19 )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction2_part1',
                                                                    HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)),
                                                                    <KEM_s_PK(~sk_P), 
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                     ~coins_e), 
                                                                     ~r_s>
                                                             ) ▶₁ #t19 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                        solve( SID( ~tid.1, '4',
                                                                    <'SATS', KEM_s_PK(~sk_P), 
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     <
                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                      ~coins_e), 
                                                                      ~r_s>, 
                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                               ~coins_S)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                        ~coins_e)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 '0'),
                                                                                     's_finished', '0'),
                                                                          <
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>)
                                                                    >
                                                               ) @ #t20 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          solve( FS( ~tid, '1', '4', 'nofs' ) @ #t21 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t21 )
                                                              case KEMTLS_KEM_s_KeyGen
                                                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                            'ClientAction2_part1', HS,
                                                                            <KEM_s_PK(~sk_P.1), 
                                                                             <pk_e, r_c.1, ct_S>, ct_e, r_s.1>
                                                                     ) ▶₁ #t21 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                solve( FS( ~tid.1, '1', '4', 'nofs' ) @ #t22 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  solve( Auth( ~tid, '1', '4' ) @ #tt1 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                    solve( !Pk( $S.1, pk_S, 'KEM_s'
                                                                           ) ▶₀ #tt1 )
                                                                      case KEMTLS_KEM_s_KeyGen
                                                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                                    'ClientAction2_part1', HS,
                                                                                    <KEM_s_PK(~sk_P.1), 
                                                                                     <pk_e, r_c.1, ct_S>, 
                                                                                     ct_e, r_s.1>
                                                                             ) ▶₁ #tt1 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                        solve( Replayable( ~tid, '1'
                                                                               ) @ #ttc )
                                                                          case KEMTLS_PDK_SAUTH_ClientAction1
                                                                          solve( Replayable( ~tid.1, '1'
                                                                                 ) @ #tts )
                                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                                            solve( !KU( ~r_c ) @ #vk.7 )
                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                              solve( !KU( ~r_s ) @ #vk.4 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                      ~coins_S)),
                                                                                                                                                          'derived',
                                                                                                                                                          '0'),
                                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                               ~coins_e)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        '0'),
                                                                                                            's_finished',
                                                                                                            '0'),
                                                                                                 <
                                                                                                  <
                                                                                                   KEM_e_PK(~sk_e), 
                                                                                                   ~r_c, 
                                                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)
                                                                                                  >, 
                                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                  ~coins_e), 
                                                                                                  ~r_s>)
                                                                                       ) @ #vk.4 )
                                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                  solve( !KU( KEM_e_PK(~sk_e)
                                                                                         ) @ #vk.7 )
                                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                    solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                ~coins_S)
                                                                                           ) @ #vk.8 )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                      solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                  ~coins_e)
                                                                                             ) @ #vk.8 )
                                                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                        SOLVED // trace found
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage1_accepted5_cnofs_snofs:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '1', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '1', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '1' ) @ #t9)) ∧
                   (Accept( tid_s, '1' ) @ #t10)) ∧
                  (Accept( tid_c, '5' ) @ #t11)) ∧
                 (Accept( tid_s, '5' ) @ #t12)) ∧
                (CID( tid_c, '1', sid_target ) @ #t13)) ∧
               (CID( tid_s, '1', sid_target ) @ #t14)) ∧
              (SID( tid_c, '1', sid_target ) @ #t15)) ∧
             (SID( tid_s, '1', sid_target ) @ #t16)) ∧
            (CID( tid_c, '5', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '5', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '5', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '5', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '1', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '1', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '1', '5', 'nofs' ) @ #t21)) ∧
     (FS( tid_s, '1', '5', 'nofs' ) @ #t22)) ∧
    ((((⊤) ∧ (∃ #ttc. Replayable( tid_c, '1' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '1' ) @ #tts)) ∨
     (((¬(⊤)) ∧ (¬(∃ #ttc. Replayable( tid_c, '1' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '1' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '1', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '1', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '1' ) @ #t9) ∧
  (Accept( tid_s, '1' ) @ #t10) ∧
  (Accept( tid_c, '5' ) @ #t11) ∧
  (Accept( tid_s, '5' ) @ #t12) ∧
  (CID( tid_c, '1', sid_target ) @ #t13) ∧
  (CID( tid_s, '1', sid_target ) @ #t14) ∧
  (SID( tid_c, '1', sid_target ) @ #t15) ∧
  (SID( tid_s, '1', sid_target ) @ #t16) ∧
  (CID( tid_c, '5', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '5', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '5', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '5', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '1', '5', 'nofs' ) @ #t21) ∧
  (FS( tid_s, '1', '5', 'nofs' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∃ #ttc. (Replayable( tid_c, '1' ) @ #ttc)) ∧
  (∃ #tts. (Replayable( tid_s, '1' ) @ #tts))"
*/
simplify
solve( ProtocolMode( tid_c, '1', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '1', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( State( tid_s, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #t2 )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, 'anonymous' ) @ #t3 )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( Role( ~tid, 'client' ) @ #t7 )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( Role( ~tid.1, 'server' ) @ #t8 )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        solve( Accept( ~tid, '1' ) @ #t9 )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( Accept( ~tid.1, '1' ) @ #t10 )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( Accept( ~tid, '5' ) @ #t11 )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                              solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                       ) ▶₁ #t11 )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid.1, '5' ) @ #t12 )
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #t12 )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                    <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2
                                                    >
                                             ) ▶₁ #t12 )
                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                        solve( CID( ~tid, '1', sid_target ) @ #t13 )
                                          case KEMTLS_PDK_SAUTH_ClientAction1
                                          solve( CID( ~tid.1, '1',
                                                      <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                 ) @ #t14 )
                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                            solve( SID( ~tid, '1',
                                                        <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                   ) @ #t15 )
                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                              solve( SID( ~tid.1, '1',
                                                          <'ETS', KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                     ) @ #t16 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( CID( ~tid, '5', sid_accepted ) @ #t17 )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                    case KEMTLS_KEM_s_KeyGen
                                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                  'ClientAction2_part1', HS,
                                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                                   ct_e.1, r_s.2>
                                                           ) ▶₁ #t17 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                      solve( CID( ~tid.1, '5',
                                                                  <'CATS', KEM_s_PK(~sk_P), 
                                                                   <KEM_e_PK(~sk_e), ~r_c, 
                                                                    KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                   >, 
                                                                   <ct_e, r_s>, 
                                                                   HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                             ~coins_S)),
                                                                                                                                 'derived',
                                                                                                                                 '0'),
                                                                                                                      z),
                                                                                                          'derived',
                                                                                                          '0'),
                                                                                               '0'),
                                                                                   's_finished', '0'),
                                                                        <
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         ct_e, r_s>), 
                                                                   HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                             ~coins_S)),
                                                                                                                                 'derived',
                                                                                                                                 '0'),
                                                                                                                      z),
                                                                                                          'derived',
                                                                                                          '0'),
                                                                                               '0'),
                                                                                   'c_finished', '0'),
                                                                        <
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         <ct_e, r_s>, 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            z),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         's_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               ct_e, r_s>)
                                                                        >)
                                                                  >
                                                             ) @ #t18 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                                        solve( !Ltk( $S, KEM_s_PK(~sk_P), sk_S, 'KEM_s'
                                                               ) ▶₀ #t18 )
                                                          case KEMTLS_KEM_s_KeyGen
                                                          solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                        'ServerAction1',
                                                                        <MS, 
                                                                         HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       z),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    'c_finished', '0')
                                                                        >,
                                                                        <KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         ct_e, r_s>
                                                                 ) ▶₁ #t18 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            solve( SID( ~tid, '5',
                                                                        <'CATS', KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         <
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>, 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                            ~coins_e)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         's_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>), 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                            ~coins_e)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         'c_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               <
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>, 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               's_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>)
                                                                              >)
                                                                        >
                                                                   ) @ #t19 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                              solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s'
                                                                     ) ▶₀ #t19 )
                                                                case KEMTLS_KEM_s_KeyGen
                                                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                              'ClientAction2_part1',
                                                                              HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                 ~coins_S)),
                                                                                                     'derived',
                                                                                                     '0'),
                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                          ~coins_e)),
                                                                              <KEM_s_PK(~sk_P), 
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>
                                                                       ) ▶₁ #t19 )
                                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                  solve( SID( ~tid.1, '5',
                                                                              <'CATS', KEM_s_PK(~sk_P), 
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               <
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>, 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               's_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>), 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               'c_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     <
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>, 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     's_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>)
                                                                                    >)
                                                                              >
                                                                         ) @ #t20 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                                                    solve( !Ltk( $S, KEM_s_PK(~sk_P), sk_S,
                                                                                 'KEM_s'
                                                                           ) ▶₀ #t20 )
                                                                      case KEMTLS_KEM_s_KeyGen
                                                                      solve( State( ~tid.1,
                                                                                    'KEMTLS_PDK_SAUTH',
                                                                                    'ServerAction1',
                                                                                    <MS, 
                                                                                     HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                          ~coins_S)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                   ~coins_e)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            '0'),
                                                                                                'c_finished',
                                                                                                '0')
                                                                                    >,
                                                                                    <KEM_s_PK(~sk_P), 
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>
                                                                             ) ▶₁ #t20 )
                                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                                        solve( FS( ~tid, '1', '5', 'nofs'
                                                                               ) @ #t21 )
                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                          solve( !Pk( $S, pk_S, 'KEM_s'
                                                                                 ) ▶₀ #t21 )
                                                                            case KEMTLS_KEM_s_KeyGen
                                                                            solve( State( ~tid,
                                                                                          'KEMTLS_PDK_SAUTH',
                                                                                          'ClientAction2_part1',
                                                                                          HS,
                                                                                          <KEM_s_PK(~sk_P.1), 
                                                                                           <pk_e, r_c.1, ct_S
                                                                                           >, 
                                                                                           ct_e, r_s.1>
                                                                                   ) ▶₁ #t21 )
                                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                              solve( FS( ~tid.1, '1', '5',
                                                                                         'nofs'
                                                                                     ) @ #t22 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                solve( !Ltk( $S, pk_S, sk_S,
                                                                                             'KEM_s'
                                                                                       ) ▶₀ #t22 )
                                                                                  case KEMTLS_KEM_s_KeyGen
                                                                                  solve( State( ~tid.1,
                                                                                                'KEMTLS_PDK_SAUTH',
                                                                                                'ServerAction1',
                                                                                                <MS, fk_c>,
                                                                                                <
                                                                                                 KEM_s_PK(~sk_P.1), 
                                                                                                 <pk_e, 
                                                                                                  r_c.1, ct_S
                                                                                                 >, 
                                                                                                 ct_e, r_s.1>
                                                                                         ) ▶₁ #t22 )
                                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                    solve( Replayable( ~tid,
                                                                                                       '1'
                                                                                           ) @ #ttc )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                      solve( Replayable( ~tid.1,
                                                                                                         '1'
                                                                                             ) @ #tts )
                                                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                        solve( !KU( ~r_c
                                                                                               ) @ #vk.8 )
                                                                                          case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                          solve( !KU( ~r_s
                                                                                                 ) @ #vk.4 )
                                                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                            solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                  ~coins_S)),
                                                                                                                                                                      'derived',
                                                                                                                                                                      '0'),
                                                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                           ~coins_e)),
                                                                                                                                               'derived',
                                                                                                                                               '0'),
                                                                                                                                    '0'),
                                                                                                                        's_finished',
                                                                                                                        '0'),
                                                                                                             <
                                                                                                              <
                                                                                                               KEM_e_PK(~sk_e), 
                                                                                                               ~r_c, 
                                                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                               ~coins_S)
                                                                                                              >, 
                                                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e), 
                                                                                                              ~r_s
                                                                                                             >)
                                                                                                   ) @ #vk.4 )
                                                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                    ~coins_S)),
                                                                                                                                                                        'derived',
                                                                                                                                                                        '0'),
                                                                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                             ~coins_e)),
                                                                                                                                                 'derived',
                                                                                                                                                 '0'),
                                                                                                                                      '0'),
                                                                                                                          'c_finished',
                                                                                                                          '0'),
                                                                                                               <
                                                                                                                <
                                                                                                                 KEM_e_PK(~sk_e), 
                                                                                                                 ~r_c, 
                                                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                 ~coins_S)
                                                                                                                >, 
                                                                                                                <
                                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                 ~coins_e), 
                                                                                                                 ~r_s
                                                                                                                >, 
                                                                                                                HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                          ~coins_S)),
                                                                                                                                                                              'derived',
                                                                                                                                                                              '0'),
                                                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                   ~coins_e)),
                                                                                                                                                       'derived',
                                                                                                                                                       '0'),
                                                                                                                                            '0'),
                                                                                                                                's_finished',
                                                                                                                                '0'),
                                                                                                                     <
                                                                                                                      <
                                                                                                                       KEM_e_PK(~sk_e), 
                                                                                                                       ~r_c, 
                                                                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                       ~coins_S)
                                                                                                                      >, 
                                                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                      ~coins_e), 
                                                                                                                      ~r_s
                                                                                                                     >)
                                                                                                               >)
                                                                                                     ) @ #vk.7 )
                                                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                                solve( !KU( KEM_e_PK(~sk_e)
                                                                                                       ) @ #vk.8 )
                                                                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                  solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)
                                                                                                         ) @ #vk.9 )
                                                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                ~coins_e)
                                                                                                           ) @ #vk.9 )
                                                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                      SOLVED // trace found
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage2_accepted2_cwfs2_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '2' ) @ #t9)) ∧
                   (Accept( tid_s, '2' ) @ #t10)) ∧
                  (Accept( tid_c, '2' ) @ #t11)) ∧
                 (Accept( tid_s, '2' ) @ #t12)) ∧
                (CID( tid_c, '2', sid_target ) @ #t13)) ∧
               (CID( tid_s, '2', sid_target ) @ #t14)) ∧
              (SID( tid_c, '2', sid_target ) @ #t15)) ∧
             (SID( tid_s, '2', sid_target ) @ #t16)) ∧
            (CID( tid_c, '2', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '2', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '2', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '2', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '2', '2' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '2', '2' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '2', '2', 'wfs2' ) @ #t21)) ∧
     (FS( tid_s, '2', '2', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '2' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '2' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '2' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '2' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '2' ) @ #t9) ∧
  (Accept( tid_s, '2' ) @ #t10) ∧
  (Accept( tid_c, '2' ) @ #t11) ∧
  (Accept( tid_s, '2' ) @ #t12) ∧
  (CID( tid_c, '2', sid_target ) @ #t13) ∧
  (CID( tid_s, '2', sid_target ) @ #t14) ∧
  (SID( tid_c, '2', sid_target ) @ #t15) ∧
  (SID( tid_s, '2', sid_target ) @ #t16) ∧
  (CID( tid_c, '2', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '2', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '2', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '2', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '2', '2', 'wfs2' ) @ #t21) ∧
  (FS( tid_s, '2', '2', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∀ #ttc. (Replayable( tid_c, '2' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '2' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                  <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( ProtocolMode( tid_s, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '2' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t9 )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                 ) ▶₁ #t9 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( Accept( ~tid.1, '2' ) @ #t10 )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( Accept( ~tid, '2' ) @ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                  case KEMTLS_KEM_s_KeyGen
                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                         ) ▶₁ #t11 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( Accept( ~tid.1, '2' ) @ #t12 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( CID( ~tid, '2', sid_target ) @ #t13 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>,
                                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                                 ) ▶₁ #t13 )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( CID( ~tid.1, '2',
                                                        <'CHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #t14 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( SID( ~tid, '2',
                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>
                                                     ) @ #t15 )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.1, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #t15 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    solve( SID( ~tid.1, '2',
                                                                <'CHTS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>
                                                           ) @ #t16 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( CID( ~tid, '2', sid_accepted ) @ #t17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                          case KEMTLS_KEM_s_KeyGen
                                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                        'ClientAction1', <sk_e.1, dES>,
                                                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                                 ) ▶₁ #t17 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                            solve( CID( ~tid.1, '2',
                                                                        <'CHTS', KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                         ~coins_e), 
                                                                         ~r_s>
                                                                   ) @ #t18 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              solve( SID( ~tid, '2',
                                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>
                                                                     ) @ #t19 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s'
                                                                       ) ▶₀ #t19 )
                                                                  case KEMTLS_KEM_s_KeyGen
                                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                                'ClientAction1',
                                                                                <sk_e.1, dES>,
                                                                                <KEM_s_PK(~sk_P), 
                                                                                 KEM_e_PK(~sk_e), ~r_c, 
                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)
                                                                                >
                                                                         ) ▶₁ #t19 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( SID( ~tid.1, '2',
                                                                                <'CHTS', KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>
                                                                           ) @ #t20 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      solve( FS( ~tid, '2', '2', 'wfs2'
                                                                             ) @ #t21 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                        solve( !Pk( $S, pk_S, 'KEM_s'
                                                                               ) ▶₀ #t21 )
                                                                          case KEMTLS_KEM_s_KeyGen
                                                                          solve( State( ~tid,
                                                                                        'KEMTLS_PDK_SAUTH',
                                                                                        'ClientAction1',
                                                                                        <sk_e.1, dES>,
                                                                                        <KEM_s_PK(~sk_P.1), 
                                                                                         pk_e, r_c.1, ct_S>
                                                                                 ) ▶₁ #t21 )
                                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                                            solve( FS( ~tid.1, '2', '2',
                                                                                       'wfs1'
                                                                                   ) @ #t22 )
                                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                                              solve( !KU( ~r_s ) @ #vk.2 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                solve( !KU( ~r_c ) @ #vk.6 )
                                                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                  solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                              ~coins_e)
                                                                                         ) @ #vk.3 )
                                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                    solve( !KU( KEM_e_PK(~sk_e)
                                                                                           ) @ #vk.6 )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                      solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                             ) @ #vk.7 )
                                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                        SOLVED // trace found
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage2_accepted3_cwfs2_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '2', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '2', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '2' ) @ #t9)) ∧
                   (Accept( tid_s, '2' ) @ #t10)) ∧
                  (Accept( tid_c, '3' ) @ #t11)) ∧
                 (Accept( tid_s, '3' ) @ #t12)) ∧
                (CID( tid_c, '2', sid_target ) @ #t13)) ∧
               (CID( tid_s, '2', sid_target ) @ #t14)) ∧
              (SID( tid_c, '2', sid_target ) @ #t15)) ∧
             (SID( tid_s, '2', sid_target ) @ #t16)) ∧
            (CID( tid_c, '3', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '3', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '3', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '3', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '2', '3' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '2', '3' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '2', '3', 'wfs2' ) @ #t21)) ∧
     (FS( tid_s, '2', '3', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '2' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '2' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '2' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '2' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '2', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '2', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '2' ) @ #t9) ∧
  (Accept( tid_s, '2' ) @ #t10) ∧
  (Accept( tid_c, '3' ) @ #t11) ∧
  (Accept( tid_s, '3' ) @ #t12) ∧
  (CID( tid_c, '2', sid_target ) @ #t13) ∧
  (CID( tid_s, '2', sid_target ) @ #t14) ∧
  (SID( tid_c, '2', sid_target ) @ #t15) ∧
  (SID( tid_s, '2', sid_target ) @ #t16) ∧
  (CID( tid_c, '3', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '3', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '3', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '3', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '2', '3', 'wfs2' ) @ #t21) ∧
  (FS( tid_s, '2', '3', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∀ #ttc. (Replayable( tid_c, '2' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '2' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '2', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                  <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( ProtocolMode( tid_s, '2', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '2' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t9 )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                 ) ▶₁ #t9 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( Accept( ~tid.1, '2' ) @ #t10 )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( Accept( ~tid, '3' ) @ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                  case KEMTLS_KEM_s_KeyGen
                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                         ) ▶₁ #t11 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( Accept( ~tid.1, '3' ) @ #t12 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( CID( ~tid, '2', sid_target ) @ #t13 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>,
                                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                                 ) ▶₁ #t13 )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( CID( ~tid.1, '2',
                                                        <'CHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #t14 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( SID( ~tid, '2',
                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>
                                                     ) @ #t15 )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.1, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #t15 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    solve( SID( ~tid.1, '2',
                                                                <'CHTS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>
                                                           ) @ #t16 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( CID( ~tid, '3', sid_accepted ) @ #t17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                          case KEMTLS_KEM_s_KeyGen
                                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                        'ClientAction1', <sk_e.1, dES>,
                                                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                                 ) ▶₁ #t17 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                            solve( CID( ~tid.1, '3',
                                                                        <'SHTS', KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                         ~coins_e), 
                                                                         ~r_s>
                                                                   ) @ #t18 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              solve( SID( ~tid, '3',
                                                                          <'SHTS', KEM_s_PK(~sk_P), 
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>
                                                                     ) @ #t19 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s'
                                                                       ) ▶₀ #t19 )
                                                                  case KEMTLS_KEM_s_KeyGen
                                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                                'ClientAction1',
                                                                                <sk_e.1, dES>,
                                                                                <KEM_s_PK(~sk_P), 
                                                                                 KEM_e_PK(~sk_e), ~r_c, 
                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)
                                                                                >
                                                                         ) ▶₁ #t19 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( SID( ~tid.1, '3',
                                                                                <'SHTS', KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>
                                                                           ) @ #t20 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      solve( FS( ~tid, '2', '3', 'wfs2'
                                                                             ) @ #t21 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                        solve( !Pk( $S, pk_S, 'KEM_s'
                                                                               ) ▶₀ #t21 )
                                                                          case KEMTLS_KEM_s_KeyGen
                                                                          solve( State( ~tid,
                                                                                        'KEMTLS_PDK_SAUTH',
                                                                                        'ClientAction1',
                                                                                        <sk_e.1, dES>,
                                                                                        <KEM_s_PK(~sk_P.1), 
                                                                                         pk_e, r_c.1, ct_S>
                                                                                 ) ▶₁ #t21 )
                                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                                            solve( FS( ~tid.1, '2', '3',
                                                                                       'wfs1'
                                                                                   ) @ #t22 )
                                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                                              solve( !KU( ~r_s ) @ #vk.2 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                solve( !KU( ~r_c ) @ #vk.6 )
                                                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                  solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                              ~coins_e)
                                                                                         ) @ #vk.3 )
                                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                    solve( !KU( KEM_e_PK(~sk_e)
                                                                                           ) @ #vk.6 )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                      solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                             ) @ #vk.7 )
                                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                        SOLVED // trace found
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage2_accepted4_cfs_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '2', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '2', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊤)) ∧ (S = 'anonymous')) ∨ ((⊤) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '2' ) @ #t9)) ∧
                   (Accept( tid_s, '2' ) @ #t10)) ∧
                  (Accept( tid_c, '4' ) @ #t11)) ∧
                 (Accept( tid_s, '4' ) @ #t12)) ∧
                (CID( tid_c, '2', sid_target ) @ #t13)) ∧
               (CID( tid_s, '2', sid_target ) @ #t14)) ∧
              (SID( tid_c, '2', sid_target ) @ #t15)) ∧
             (SID( tid_s, '2', sid_target ) @ #t16)) ∧
            (CID( tid_c, '4', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '4', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '4', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '4', sid_accepted ) @ #t20)) ∧
        (((⊤) ∧ (∃ #tt1. Auth( tid_c, '2', '4' ) @ #tt1)) ∨ (¬(⊤)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '2', '4' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '2', '4', 'fs' ) @ #t21)) ∧
     (FS( tid_s, '2', '4', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '2' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '2' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '2' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '2' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '2', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '2', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '2' ) @ #t9) ∧
  (Accept( tid_s, '2' ) @ #t10) ∧
  (Accept( tid_c, '4' ) @ #t11) ∧
  (Accept( tid_s, '4' ) @ #t12) ∧
  (CID( tid_c, '2', sid_target ) @ #t13) ∧
  (CID( tid_s, '2', sid_target ) @ #t14) ∧
  (SID( tid_c, '2', sid_target ) @ #t15) ∧
  (SID( tid_s, '2', sid_target ) @ #t16) ∧
  (CID( tid_c, '4', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '4', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '4', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '4', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '2', '4', 'fs' ) @ #t21) ∧
  (FS( tid_s, '2', '4', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (¬(S = 'anonymous')) ∧
  (C = 'anonymous') ∧
  (∃ #tt1. (Auth( tid_c, '2', '4' ) @ #tt1)) ∧
  (∀ #ttc. (Replayable( tid_c, '2' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '2' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '2', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '2', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, S.2 ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, $S.1 ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '2' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t9 )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                 ) ▶₁ #t9 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( Accept( ~tid.1, '2' ) @ #t10 )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( Accept( ~tid, '4' ) @ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                  case KEMTLS_KEM_s_KeyGen
                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                         ) ▶₁ #t11 )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( Accept( ~tid.1, '4' ) @ #t12 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( CID( ~tid, '2', sid_target ) @ #t13 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>,
                                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                                 ) ▶₁ #t13 )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( CID( ~tid.1, '2',
                                                        <'CHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #t14 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( SID( ~tid, '2',
                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>
                                                     ) @ #t15 )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.1, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #t15 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    solve( SID( ~tid.1, '2',
                                                                <'CHTS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>
                                                           ) @ #t16 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( CID( ~tid, '4', sid_accepted ) @ #t17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                          case KEMTLS_KEM_s_KeyGen
                                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                        'ClientAction2_part1', HS,
                                                                        <KEM_s_PK(~sk_P.1), 
                                                                         <pk_e, r_c.1, ct_S>, ct_e, r_s.1>
                                                                 ) ▶₁ #t17 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                            solve( CID( ~tid.1, '4',
                                                                        <'SATS', KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         <
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>, 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                            ~coins_e)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         's_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>)
                                                                        >
                                                                   ) @ #t18 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              solve( SID( ~tid, '4',
                                                                          <'SATS', KEM_s_PK(~sk_P), 
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           <
                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                            ~coins_e), 
                                                                            ~r_s>, 
                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                     ~coins_S)),
                                                                                                                                         'derived',
                                                                                                                                         '0'),
                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                              ~coins_e)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       '0'),
                                                                                           's_finished', '0'),
                                                                                <
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>)
                                                                          >
                                                                     ) @ #t19 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s'
                                                                       ) ▶₀ #t19 )
                                                                  case KEMTLS_KEM_s_KeyGen
                                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                                'ClientAction2_part1',
                                                                                HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                   ~coins_S)),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e)),
                                                                                <KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>
                                                                         ) ▶₁ #t19 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                    solve( SID( ~tid.1, '4',
                                                                                <'SATS', KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 <
                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                  ~coins_e), 
                                                                                  ~r_s>, 
                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                           ~coins_S)),
                                                                                                                                               'derived',
                                                                                                                                               '0'),
                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                    ~coins_e)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             '0'),
                                                                                                 's_finished',
                                                                                                 '0'),
                                                                                      <
                                                                                       <KEM_e_PK(~sk_e), 
                                                                                        ~r_c, 
                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S)
                                                                                       >, 
                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e), 
                                                                                       ~r_s>)
                                                                                >
                                                                           ) @ #t20 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      solve( FS( ~tid, '2', '4', 'fs'
                                                                             ) @ #t21 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                        solve( !Pk( $S.1, pk_S, 'KEM_s'
                                                                               ) ▶₀ #t21 )
                                                                          case KEMTLS_KEM_s_KeyGen
                                                                          solve( State( ~tid,
                                                                                        'KEMTLS_PDK_SAUTH',
                                                                                        'ClientAction2_part1',
                                                                                        HS,
                                                                                        <KEM_s_PK(~sk_P.1), 
                                                                                         <pk_e, r_c.1, ct_S>, 
                                                                                         ct_e, r_s.1>
                                                                                 ) ▶₁ #t21 )
                                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                            solve( FS( ~tid.1, '2', '4',
                                                                                       'wfs1'
                                                                                   ) @ #t22 )
                                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                                              solve( Auth( ~tid, '2', '4'
                                                                                     ) @ #tt1 )
                                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                solve( !Pk( $S.1, pk_S,
                                                                                            'KEM_s'
                                                                                       ) ▶₀ #tt1 )
                                                                                  case KEMTLS_KEM_s_KeyGen
                                                                                  solve( State( ~tid,
                                                                                                'KEMTLS_PDK_SAUTH',
                                                                                                'ClientAction2_part1',
                                                                                                HS,
                                                                                                <
                                                                                                 KEM_s_PK(~sk_P.1), 
                                                                                                 <pk_e, 
                                                                                                  r_c.1, ct_S
                                                                                                 >, 
                                                                                                 ct_e, r_s.1>
                                                                                         ) ▶₁ #tt1 )
                                                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                                    solve( !KU( ~r_s
                                                                                           ) @ #vk.3 )
                                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                      solve( !KU( ~r_c
                                                                                             ) @ #vk.7 )
                                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                        solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                              ~coins_S)),
                                                                                                                                                                  'derived',
                                                                                                                                                                  '0'),
                                                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                       ~coins_e)),
                                                                                                                                           'derived',
                                                                                                                                           '0'),
                                                                                                                                '0'),
                                                                                                                    's_finished',
                                                                                                                    '0'),
                                                                                                         <
                                                                                                          <
                                                                                                           KEM_e_PK(~sk_e), 
                                                                                                           ~r_c, 
                                                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)
                                                                                                          >, 
                                                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                          ~coins_e), 
                                                                                                          ~r_s
                                                                                                         >)
                                                                                               ) @ #vk.3 )
                                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                          solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)
                                                                                                 ) @ #vk.6 )
                                                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                            solve( !KU( KEM_e_PK(~sk_e)
                                                                                                   ) @ #vk.7 )
                                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                              solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)
                                                                                                     ) @ #vk.8 )
                                                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                SOLVED // trace found
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage2_accepted5_cfs_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '2', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '2', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '2' ) @ #t9)) ∧
                   (Accept( tid_s, '2' ) @ #t10)) ∧
                  (Accept( tid_c, '5' ) @ #t11)) ∧
                 (Accept( tid_s, '5' ) @ #t12)) ∧
                (CID( tid_c, '2', sid_target ) @ #t13)) ∧
               (CID( tid_s, '2', sid_target ) @ #t14)) ∧
              (SID( tid_c, '2', sid_target ) @ #t15)) ∧
             (SID( tid_s, '2', sid_target ) @ #t16)) ∧
            (CID( tid_c, '5', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '5', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '5', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '5', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '2', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '2', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '2', '5', 'fs' ) @ #t21)) ∧
     (FS( tid_s, '2', '5', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '2' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '2' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '2' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '2' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '2', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '2', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '2' ) @ #t9) ∧
  (Accept( tid_s, '2' ) @ #t10) ∧
  (Accept( tid_c, '5' ) @ #t11) ∧
  (Accept( tid_s, '5' ) @ #t12) ∧
  (CID( tid_c, '2', sid_target ) @ #t13) ∧
  (CID( tid_s, '2', sid_target ) @ #t14) ∧
  (SID( tid_c, '2', sid_target ) @ #t15) ∧
  (SID( tid_s, '2', sid_target ) @ #t16) ∧
  (CID( tid_c, '5', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '5', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '5', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '5', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '2', '5', 'fs' ) @ #t21) ∧
  (FS( tid_s, '2', '5', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∀ #ttc. (Replayable( tid_c, '2' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '2' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '2', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '2', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( State( tid_s, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #t2 )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, 'anonymous' ) @ #t3 )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( Role( ~tid, 'client' ) @ #t7 )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( Role( ~tid.1, 'server' ) @ #t8 )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        solve( Accept( ~tid, '2' ) @ #t9 )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t9 )
                            case KEMTLS_KEM_s_KeyGen
                            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                          <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                   ) ▶₁ #t9 )
                              case KEMTLS_PDK_SAUTH_ClientAction1
                              solve( Accept( ~tid.1, '2' ) @ #t10 )
                                case KEMTLS_PDK_SAUTH_ServerAction1
                                solve( Accept( ~tid, '5' ) @ #t11 )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                           ) ▶₁ #t11 )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid.1, '5' ) @ #t12 )
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #t12 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                        <MS, fk_c>,
                                                        <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, 
                                                         r_s.2>
                                                 ) ▶₁ #t12 )
                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                            solve( CID( ~tid, '2', sid_target ) @ #t13 )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                              <sk_e.1, dES>,
                                                              <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                                       ) ▶₁ #t13 )
                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                  solve( CID( ~tid.1, '2',
                                                              <'CHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #t14 )
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    solve( SID( ~tid, '2',
                                                                <'CHTS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>
                                                           ) @ #t15 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                      solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                        case KEMTLS_KEM_s_KeyGen
                                                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                      'ClientAction1', <sk_e.1, dES>,
                                                                      <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), 
                                                                       ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >
                                                               ) ▶₁ #t15 )
                                                          case KEMTLS_PDK_SAUTH_ClientAction1
                                                          solve( SID( ~tid.1, '2',
                                                                      <'CHTS', KEM_s_PK(~sk_P), 
                                                                       <KEM_e_PK(~sk_e), ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >, 
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>
                                                                 ) @ #t16 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            solve( CID( ~tid, '5', sid_accepted ) @ #t17 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                              solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                                case KEMTLS_KEM_s_KeyGen
                                                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                              'ClientAction2_part1', HS,
                                                                              <KEM_s_PK(~sk_P.1), 
                                                                               <pk_e, r_c.1, ct_S>, ct_e, 
                                                                               r_s.1>
                                                                       ) ▶₁ #t17 )
                                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                  solve( CID( ~tid.1, '5',
                                                                              <'CATS', KEM_s_PK(~sk_P), 
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               <
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>, 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               's_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>), 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               'c_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     <
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>, 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     's_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>)
                                                                                    >)
                                                                              >
                                                                         ) @ #t18 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                                                    solve( !Ltk( $S, KEM_s_PK(~sk_P), sk_S,
                                                                                 'KEM_s'
                                                                           ) ▶₀ #t18 )
                                                                      case KEMTLS_KEM_s_KeyGen
                                                                      solve( State( ~tid.1,
                                                                                    'KEMTLS_PDK_SAUTH',
                                                                                    'ServerAction1',
                                                                                    <MS, 
                                                                                     HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                          ~coins_S)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                   ~coins_e)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            '0'),
                                                                                                'c_finished',
                                                                                                '0')
                                                                                    >,
                                                                                    <KEM_s_PK(~sk_P), 
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>
                                                                             ) ▶₁ #t18 )
                                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                                        solve( SID( ~tid, '5',
                                                                                    <'CATS', KEM_s_PK(~sk_P), 
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     <
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>, 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     's_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>), 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     'c_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           <
                                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e), 
                                                                                            ~r_s>, 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           's_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>)
                                                                                          >)
                                                                                    >
                                                                               ) @ #t19 )
                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                          solve( !Pk( $S, KEM_s_PK(~sk_P),
                                                                                      'KEM_s'
                                                                                 ) ▶₀ #t19 )
                                                                            case KEMTLS_KEM_s_KeyGen
                                                                            solve( State( ~tid,
                                                                                          'KEMTLS_PDK_SAUTH',
                                                                                          'ClientAction2_part1',
                                                                                          HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)),
                                                                                          <KEM_s_PK(~sk_P), 
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>
                                                                                   ) ▶₁ #t19 )
                                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                              solve( SID( ~tid.1, '5',
                                                                                          <'CATS', 
                                                                                           KEM_s_PK(~sk_P), 
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           <
                                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e), 
                                                                                            ~r_s>, 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           's_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>), 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           'c_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 <
                                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                  ~coins_e), 
                                                                                                  ~r_s>, 
                                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                           ~coins_S)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                    ~coins_e)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             '0'),
                                                                                                                 's_finished',
                                                                                                                 '0'),
                                                                                                      <
                                                                                                       <
                                                                                                        KEM_e_PK(~sk_e), 
                                                                                                        ~r_c, 
                                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)
                                                                                                       >, 
                                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                       ~coins_e), 
                                                                                                       ~r_s>)
                                                                                                >)
                                                                                          >
                                                                                     ) @ #t20 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                solve( !Ltk( $S,
                                                                                             KEM_s_PK(~sk_P),
                                                                                             sk_S, 'KEM_s'
                                                                                       ) ▶₀ #t20 )
                                                                                  case KEMTLS_KEM_s_KeyGen
                                                                                  solve( State( ~tid.1,
                                                                                                'KEMTLS_PDK_SAUTH',
                                                                                                'ServerAction1',
                                                                                                <MS, 
                                                                                                 HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                      ~coins_S)),
                                                                                                                                                          'derived',
                                                                                                                                                          '0'),
                                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                               ~coins_e)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        '0'),
                                                                                                            'c_finished',
                                                                                                            '0')
                                                                                                >,
                                                                                                <
                                                                                                 KEM_s_PK(~sk_P), 
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>
                                                                                         ) ▶₁ #t20 )
                                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                    solve( FS( ~tid, '2', '5',
                                                                                               'fs'
                                                                                           ) @ #t21 )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                      solve( !Pk( $S, pk_S,
                                                                                                  'KEM_s'
                                                                                             ) ▶₀ #t21 )
                                                                                        case KEMTLS_KEM_s_KeyGen
                                                                                        solve( State( ~tid,
                                                                                                      'KEMTLS_PDK_SAUTH',
                                                                                                      'ClientAction2_part1',
                                                                                                      HS,
                                                                                                      <
                                                                                                       KEM_s_PK(~sk_P.1), 
                                                                                                       <pk_e, 
                                                                                                        r_c.1, 
                                                                                                        ct_S
                                                                                                       >, 
                                                                                                       ct_e, 
                                                                                                       r_s.1>
                                                                                               ) ▶₁ #t21 )
                                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                                          solve( FS( ~tid.1,
                                                                                                     '2', '5',
                                                                                                     'wfs1'
                                                                                                 ) @ #t22 )
                                                                                            case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                            solve( !Ltk( $S,
                                                                                                         pk_S,
                                                                                                         sk_S,
                                                                                                         'KEM_s'
                                                                                                   ) ▶₀ #t22 )
                                                                                              case KEMTLS_KEM_s_KeyGen
                                                                                              solve( State( ~tid.1,
                                                                                                            'KEMTLS_PDK_SAUTH',
                                                                                                            'ServerAction1',
                                                                                                            <
                                                                                                             MS, 
                                                                                                             fk_c
                                                                                                            >,
                                                                                                            <
                                                                                                             KEM_s_PK(~sk_P.1), 
                                                                                                             <
                                                                                                              pk_e, 
                                                                                                              r_c.1, 
                                                                                                              ct_S
                                                                                                             >, 
                                                                                                             ct_e, 
                                                                                                             r_s.1
                                                                                                            >
                                                                                                     ) ▶₁ #t22 )
                                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                solve( !KU( ~r_s
                                                                                                       ) @ #vk.3 )
                                                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                  solve( !KU( ~r_c
                                                                                                         ) @ #vk.8 )
                                                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                    solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                          ~coins_S)),
                                                                                                                                                                              'derived',
                                                                                                                                                                              '0'),
                                                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                   ~coins_e)),
                                                                                                                                                       'derived',
                                                                                                                                                       '0'),
                                                                                                                                            '0'),
                                                                                                                                's_finished',
                                                                                                                                '0'),
                                                                                                                     <
                                                                                                                      <
                                                                                                                       KEM_e_PK(~sk_e), 
                                                                                                                       ~r_c, 
                                                                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                       ~coins_S)
                                                                                                                      >, 
                                                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                      ~coins_e), 
                                                                                                                      ~r_s
                                                                                                                     >)
                                                                                                           ) @ #vk.3 )
                                                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                      solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                            ~coins_S)),
                                                                                                                                                                                'derived',
                                                                                                                                                                                '0'),
                                                                                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                     ~coins_e)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              '0'),
                                                                                                                                  'c_finished',
                                                                                                                                  '0'),
                                                                                                                       <
                                                                                                                        <
                                                                                                                         KEM_e_PK(~sk_e), 
                                                                                                                         ~r_c, 
                                                                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                         ~coins_S)
                                                                                                                        >, 
                                                                                                                        <
                                                                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                         ~coins_e), 
                                                                                                                         ~r_s
                                                                                                                        >, 
                                                                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                                  ~coins_S)),
                                                                                                                                                                                      'derived',
                                                                                                                                                                                      '0'),
                                                                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                           ~coins_e)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    '0'),
                                                                                                                                        's_finished',
                                                                                                                                        '0'),
                                                                                                                             <
                                                                                                                              <
                                                                                                                               KEM_e_PK(~sk_e), 
                                                                                                                               ~r_c, 
                                                                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                               ~coins_S)
                                                                                                                              >, 
                                                                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                              ~coins_e), 
                                                                                                                              ~r_s
                                                                                                                             >)
                                                                                                                       >)
                                                                                                             ) @ #vk.7 )
                                                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                                        solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                    ~coins_e)
                                                                                                               ) @ #vk.7 )
                                                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                          solve( !KU( KEM_e_PK(~sk_e)
                                                                                                                 ) @ #vk.8 )
                                                                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                            solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)
                                                                                                                   ) @ #vk.9 )
                                                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                              SOLVED // trace found
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage3_accepted3_cwfs2_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '3' ) @ #t9)) ∧
                   (Accept( tid_s, '3' ) @ #t10)) ∧
                  (Accept( tid_c, '3' ) @ #t11)) ∧
                 (Accept( tid_s, '3' ) @ #t12)) ∧
                (CID( tid_c, '3', sid_target ) @ #t13)) ∧
               (CID( tid_s, '3', sid_target ) @ #t14)) ∧
              (SID( tid_c, '3', sid_target ) @ #t15)) ∧
             (SID( tid_s, '3', sid_target ) @ #t16)) ∧
            (CID( tid_c, '3', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '3', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '3', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '3', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '3', '3' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '3', '3' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '3', '3', 'wfs2' ) @ #t21)) ∧
     (FS( tid_s, '3', '3', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '3' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '3' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '3' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '3' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '3' ) @ #t9) ∧
  (Accept( tid_s, '3' ) @ #t10) ∧
  (Accept( tid_c, '3' ) @ #t11) ∧
  (Accept( tid_s, '3' ) @ #t12) ∧
  (CID( tid_c, '3', sid_target ) @ #t13) ∧
  (CID( tid_s, '3', sid_target ) @ #t14) ∧
  (SID( tid_c, '3', sid_target ) @ #t15) ∧
  (SID( tid_s, '3', sid_target ) @ #t16) ∧
  (CID( tid_c, '3', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '3', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '3', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '3', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '3', '3', 'wfs2' ) @ #t21) ∧
  (FS( tid_s, '3', '3', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∀ #ttc. (Replayable( tid_c, '3' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '3' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                  <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( ProtocolMode( tid_s, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '3' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t9 )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                 ) ▶₁ #t9 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( Accept( ~tid.1, '3' ) @ #t10 )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( Accept( ~tid, '3' ) @ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                  case KEMTLS_KEM_s_KeyGen
                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                         ) ▶₁ #t11 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( Accept( ~tid.1, '3' ) @ #t12 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( CID( ~tid, '3', sid_target ) @ #t13 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>,
                                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                                 ) ▶₁ #t13 )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( CID( ~tid.1, '3',
                                                        <'SHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #t14 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( SID( ~tid, '3',
                                                          <'SHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>
                                                     ) @ #t15 )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.1, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #t15 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    solve( SID( ~tid.1, '3',
                                                                <'SHTS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>
                                                           ) @ #t16 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( CID( ~tid, '3', sid_accepted ) @ #t17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                        solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                          case KEMTLS_KEM_s_KeyGen
                                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                        'ClientAction1', <sk_e.1, dES>,
                                                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                                 ) ▶₁ #t17 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                            solve( CID( ~tid.1, '3',
                                                                        <'SHTS', KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                         ~coins_e), 
                                                                         ~r_s>
                                                                   ) @ #t18 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              solve( SID( ~tid, '3',
                                                                          <'SHTS', KEM_s_PK(~sk_P), 
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>
                                                                     ) @ #t19 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s'
                                                                       ) ▶₀ #t19 )
                                                                  case KEMTLS_KEM_s_KeyGen
                                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                                'ClientAction1',
                                                                                <sk_e.1, dES>,
                                                                                <KEM_s_PK(~sk_P), 
                                                                                 KEM_e_PK(~sk_e), ~r_c, 
                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)
                                                                                >
                                                                         ) ▶₁ #t19 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( SID( ~tid.1, '3',
                                                                                <'SHTS', KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>
                                                                           ) @ #t20 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      solve( FS( ~tid, '3', '3', 'wfs2'
                                                                             ) @ #t21 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                        solve( !Pk( $S, pk_S, 'KEM_s'
                                                                               ) ▶₀ #t21 )
                                                                          case KEMTLS_KEM_s_KeyGen
                                                                          solve( State( ~tid,
                                                                                        'KEMTLS_PDK_SAUTH',
                                                                                        'ClientAction1',
                                                                                        <sk_e.1, dES>,
                                                                                        <KEM_s_PK(~sk_P.1), 
                                                                                         pk_e, r_c.1, ct_S>
                                                                                 ) ▶₁ #t21 )
                                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                                            solve( FS( ~tid.1, '3', '3',
                                                                                       'wfs1'
                                                                                   ) @ #t22 )
                                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                                              solve( !KU( ~r_s ) @ #vk.2 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                solve( !KU( ~r_c ) @ #vk.6 )
                                                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                  solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                              ~coins_e)
                                                                                         ) @ #vk.3 )
                                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                    solve( !KU( KEM_e_PK(~sk_e)
                                                                                           ) @ #vk.6 )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                      solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                             ) @ #vk.7 )
                                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                        SOLVED // trace found
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage3_accepted4_cfs_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '3', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '3', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊤)) ∧ (S = 'anonymous')) ∨ ((⊤) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '3' ) @ #t9)) ∧
                   (Accept( tid_s, '3' ) @ #t10)) ∧
                  (Accept( tid_c, '4' ) @ #t11)) ∧
                 (Accept( tid_s, '4' ) @ #t12)) ∧
                (CID( tid_c, '3', sid_target ) @ #t13)) ∧
               (CID( tid_s, '3', sid_target ) @ #t14)) ∧
              (SID( tid_c, '3', sid_target ) @ #t15)) ∧
             (SID( tid_s, '3', sid_target ) @ #t16)) ∧
            (CID( tid_c, '4', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '4', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '4', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '4', sid_accepted ) @ #t20)) ∧
        (((⊤) ∧ (∃ #tt1. Auth( tid_c, '3', '4' ) @ #tt1)) ∨ (¬(⊤)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '3', '4' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '3', '4', 'fs' ) @ #t21)) ∧
     (FS( tid_s, '3', '4', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '3' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '3' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '3' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '3' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '3', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '3', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '3' ) @ #t9) ∧
  (Accept( tid_s, '3' ) @ #t10) ∧
  (Accept( tid_c, '4' ) @ #t11) ∧
  (Accept( tid_s, '4' ) @ #t12) ∧
  (CID( tid_c, '3', sid_target ) @ #t13) ∧
  (CID( tid_s, '3', sid_target ) @ #t14) ∧
  (SID( tid_c, '3', sid_target ) @ #t15) ∧
  (SID( tid_s, '3', sid_target ) @ #t16) ∧
  (CID( tid_c, '4', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '4', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '4', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '4', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '3', '4', 'fs' ) @ #t21) ∧
  (FS( tid_s, '3', '4', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (¬(S = 'anonymous')) ∧
  (C = 'anonymous') ∧
  (∃ #tt1. (Auth( tid_c, '3', '4' ) @ #tt1)) ∧
  (∀ #ttc. (Replayable( tid_c, '3' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '3' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '3', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '3', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, S.2 ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, $S.1 ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '3' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t9 )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                 ) ▶₁ #t9 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( Accept( ~tid.1, '3' ) @ #t10 )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( Accept( ~tid, '4' ) @ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                  case KEMTLS_KEM_s_KeyGen
                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                         ) ▶₁ #t11 )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( Accept( ~tid.1, '4' ) @ #t12 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( CID( ~tid, '3', sid_target ) @ #t13 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>,
                                                        <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                                 ) ▶₁ #t13 )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( CID( ~tid.1, '3',
                                                        <'SHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #t14 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( SID( ~tid, '3',
                                                          <'SHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>
                                                     ) @ #t15 )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.1, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #t15 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    solve( SID( ~tid.1, '3',
                                                                <'SHTS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>
                                                           ) @ #t16 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( CID( ~tid, '4', sid_accepted ) @ #t17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                          case KEMTLS_KEM_s_KeyGen
                                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                        'ClientAction2_part1', HS,
                                                                        <KEM_s_PK(~sk_P.1), 
                                                                         <pk_e, r_c.1, ct_S>, ct_e, r_s.1>
                                                                 ) ▶₁ #t17 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                            solve( CID( ~tid.1, '4',
                                                                        <'SATS', KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         <
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>, 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                            ~coins_e)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         's_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>)
                                                                        >
                                                                   ) @ #t18 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              solve( SID( ~tid, '4',
                                                                          <'SATS', KEM_s_PK(~sk_P), 
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           <
                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                            ~coins_e), 
                                                                            ~r_s>, 
                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                     ~coins_S)),
                                                                                                                                         'derived',
                                                                                                                                         '0'),
                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                              ~coins_e)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       '0'),
                                                                                           's_finished', '0'),
                                                                                <
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>)
                                                                          >
                                                                     ) @ #t19 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s'
                                                                       ) ▶₀ #t19 )
                                                                  case KEMTLS_KEM_s_KeyGen
                                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                                'ClientAction2_part1',
                                                                                HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                   ~coins_S)),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e)),
                                                                                <KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>
                                                                         ) ▶₁ #t19 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                    solve( SID( ~tid.1, '4',
                                                                                <'SATS', KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 <
                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                  ~coins_e), 
                                                                                  ~r_s>, 
                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                           ~coins_S)),
                                                                                                                                               'derived',
                                                                                                                                               '0'),
                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                    ~coins_e)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             '0'),
                                                                                                 's_finished',
                                                                                                 '0'),
                                                                                      <
                                                                                       <KEM_e_PK(~sk_e), 
                                                                                        ~r_c, 
                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S)
                                                                                       >, 
                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e), 
                                                                                       ~r_s>)
                                                                                >
                                                                           ) @ #t20 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      solve( FS( ~tid, '3', '4', 'fs'
                                                                             ) @ #t21 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                        solve( !Pk( $S.1, pk_S, 'KEM_s'
                                                                               ) ▶₀ #t21 )
                                                                          case KEMTLS_KEM_s_KeyGen
                                                                          solve( State( ~tid,
                                                                                        'KEMTLS_PDK_SAUTH',
                                                                                        'ClientAction2_part1',
                                                                                        HS,
                                                                                        <KEM_s_PK(~sk_P.1), 
                                                                                         <pk_e, r_c.1, ct_S>, 
                                                                                         ct_e, r_s.1>
                                                                                 ) ▶₁ #t21 )
                                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                            solve( FS( ~tid.1, '3', '4',
                                                                                       'wfs1'
                                                                                   ) @ #t22 )
                                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                                              solve( Auth( ~tid, '3', '4'
                                                                                     ) @ #tt1 )
                                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                solve( !Pk( $S.1, pk_S,
                                                                                            'KEM_s'
                                                                                       ) ▶₀ #tt1 )
                                                                                  case KEMTLS_KEM_s_KeyGen
                                                                                  solve( State( ~tid,
                                                                                                'KEMTLS_PDK_SAUTH',
                                                                                                'ClientAction2_part1',
                                                                                                HS,
                                                                                                <
                                                                                                 KEM_s_PK(~sk_P.1), 
                                                                                                 <pk_e, 
                                                                                                  r_c.1, ct_S
                                                                                                 >, 
                                                                                                 ct_e, r_s.1>
                                                                                         ) ▶₁ #tt1 )
                                                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                                    solve( !KU( ~r_s
                                                                                           ) @ #vk.3 )
                                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                      solve( !KU( ~r_c
                                                                                             ) @ #vk.7 )
                                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                        solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                              ~coins_S)),
                                                                                                                                                                  'derived',
                                                                                                                                                                  '0'),
                                                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                       ~coins_e)),
                                                                                                                                           'derived',
                                                                                                                                           '0'),
                                                                                                                                '0'),
                                                                                                                    's_finished',
                                                                                                                    '0'),
                                                                                                         <
                                                                                                          <
                                                                                                           KEM_e_PK(~sk_e), 
                                                                                                           ~r_c, 
                                                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)
                                                                                                          >, 
                                                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                          ~coins_e), 
                                                                                                          ~r_s
                                                                                                         >)
                                                                                               ) @ #vk.3 )
                                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                          solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)
                                                                                                 ) @ #vk.6 )
                                                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                            solve( !KU( KEM_e_PK(~sk_e)
                                                                                                   ) @ #vk.7 )
                                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                              solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)
                                                                                                     ) @ #vk.8 )
                                                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                SOLVED // trace found
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage3_accepted5_cfs_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '3', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '3', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '3' ) @ #t9)) ∧
                   (Accept( tid_s, '3' ) @ #t10)) ∧
                  (Accept( tid_c, '5' ) @ #t11)) ∧
                 (Accept( tid_s, '5' ) @ #t12)) ∧
                (CID( tid_c, '3', sid_target ) @ #t13)) ∧
               (CID( tid_s, '3', sid_target ) @ #t14)) ∧
              (SID( tid_c, '3', sid_target ) @ #t15)) ∧
             (SID( tid_s, '3', sid_target ) @ #t16)) ∧
            (CID( tid_c, '5', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '5', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '5', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '5', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '3', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '3', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '3', '5', 'fs' ) @ #t21)) ∧
     (FS( tid_s, '3', '5', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '3' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '3' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '3' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '3' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '3', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '3', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '3' ) @ #t9) ∧
  (Accept( tid_s, '3' ) @ #t10) ∧
  (Accept( tid_c, '5' ) @ #t11) ∧
  (Accept( tid_s, '5' ) @ #t12) ∧
  (CID( tid_c, '3', sid_target ) @ #t13) ∧
  (CID( tid_s, '3', sid_target ) @ #t14) ∧
  (SID( tid_c, '3', sid_target ) @ #t15) ∧
  (SID( tid_s, '3', sid_target ) @ #t16) ∧
  (CID( tid_c, '5', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '5', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '5', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '5', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '3', '5', 'fs' ) @ #t21) ∧
  (FS( tid_s, '3', '5', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∀ #ttc. (Replayable( tid_c, '3' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '3' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '3', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '3', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( State( tid_s, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #t2 )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, 'anonymous' ) @ #t3 )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( Role( ~tid, 'client' ) @ #t7 )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( Role( ~tid.1, 'server' ) @ #t8 )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        solve( Accept( ~tid, '3' ) @ #t9 )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t9 )
                            case KEMTLS_KEM_s_KeyGen
                            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                          <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                   ) ▶₁ #t9 )
                              case KEMTLS_PDK_SAUTH_ClientAction1
                              solve( Accept( ~tid.1, '3' ) @ #t10 )
                                case KEMTLS_PDK_SAUTH_ServerAction1
                                solve( Accept( ~tid, '5' ) @ #t11 )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                           ) ▶₁ #t11 )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid.1, '5' ) @ #t12 )
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #t12 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                        <MS, fk_c>,
                                                        <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, 
                                                         r_s.2>
                                                 ) ▶₁ #t12 )
                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                            solve( CID( ~tid, '3', sid_target ) @ #t13 )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                              <sk_e.1, dES>,
                                                              <KEM_s_PK(~sk_P.2), pk_e.1, r_c.2, ct_S.1>
                                                       ) ▶₁ #t13 )
                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                  solve( CID( ~tid.1, '3',
                                                              <'SHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #t14 )
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    solve( SID( ~tid, '3',
                                                                <'SHTS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>
                                                           ) @ #t15 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                      solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                        case KEMTLS_KEM_s_KeyGen
                                                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                      'ClientAction1', <sk_e.1, dES>,
                                                                      <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), 
                                                                       ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >
                                                               ) ▶₁ #t15 )
                                                          case KEMTLS_PDK_SAUTH_ClientAction1
                                                          solve( SID( ~tid.1, '3',
                                                                      <'SHTS', KEM_s_PK(~sk_P), 
                                                                       <KEM_e_PK(~sk_e), ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >, 
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>
                                                                 ) @ #t16 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            solve( CID( ~tid, '5', sid_accepted ) @ #t17 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                              solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                                case KEMTLS_KEM_s_KeyGen
                                                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                              'ClientAction2_part1', HS,
                                                                              <KEM_s_PK(~sk_P.1), 
                                                                               <pk_e, r_c.1, ct_S>, ct_e, 
                                                                               r_s.1>
                                                                       ) ▶₁ #t17 )
                                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                  solve( CID( ~tid.1, '5',
                                                                              <'CATS', KEM_s_PK(~sk_P), 
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               <
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>, 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               's_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>), 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               'c_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     <
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>, 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     's_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>)
                                                                                    >)
                                                                              >
                                                                         ) @ #t18 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                                                    solve( !Ltk( $S, KEM_s_PK(~sk_P), sk_S,
                                                                                 'KEM_s'
                                                                           ) ▶₀ #t18 )
                                                                      case KEMTLS_KEM_s_KeyGen
                                                                      solve( State( ~tid.1,
                                                                                    'KEMTLS_PDK_SAUTH',
                                                                                    'ServerAction1',
                                                                                    <MS, 
                                                                                     HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                          ~coins_S)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                   ~coins_e)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            '0'),
                                                                                                'c_finished',
                                                                                                '0')
                                                                                    >,
                                                                                    <KEM_s_PK(~sk_P), 
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>
                                                                             ) ▶₁ #t18 )
                                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                                        solve( SID( ~tid, '5',
                                                                                    <'CATS', KEM_s_PK(~sk_P), 
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     <
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>, 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     's_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>), 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     'c_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           <
                                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e), 
                                                                                            ~r_s>, 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           's_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>)
                                                                                          >)
                                                                                    >
                                                                               ) @ #t19 )
                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                          solve( !Pk( $S, KEM_s_PK(~sk_P),
                                                                                      'KEM_s'
                                                                                 ) ▶₀ #t19 )
                                                                            case KEMTLS_KEM_s_KeyGen
                                                                            solve( State( ~tid,
                                                                                          'KEMTLS_PDK_SAUTH',
                                                                                          'ClientAction2_part1',
                                                                                          HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)),
                                                                                          <KEM_s_PK(~sk_P), 
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>
                                                                                   ) ▶₁ #t19 )
                                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                              solve( SID( ~tid.1, '5',
                                                                                          <'CATS', 
                                                                                           KEM_s_PK(~sk_P), 
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           <
                                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e), 
                                                                                            ~r_s>, 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           's_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>), 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           'c_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 <
                                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                  ~coins_e), 
                                                                                                  ~r_s>, 
                                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                           ~coins_S)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                    ~coins_e)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             '0'),
                                                                                                                 's_finished',
                                                                                                                 '0'),
                                                                                                      <
                                                                                                       <
                                                                                                        KEM_e_PK(~sk_e), 
                                                                                                        ~r_c, 
                                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)
                                                                                                       >, 
                                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                       ~coins_e), 
                                                                                                       ~r_s>)
                                                                                                >)
                                                                                          >
                                                                                     ) @ #t20 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                solve( !Ltk( $S,
                                                                                             KEM_s_PK(~sk_P),
                                                                                             sk_S, 'KEM_s'
                                                                                       ) ▶₀ #t20 )
                                                                                  case KEMTLS_KEM_s_KeyGen
                                                                                  solve( State( ~tid.1,
                                                                                                'KEMTLS_PDK_SAUTH',
                                                                                                'ServerAction1',
                                                                                                <MS, 
                                                                                                 HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                      ~coins_S)),
                                                                                                                                                          'derived',
                                                                                                                                                          '0'),
                                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                               ~coins_e)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        '0'),
                                                                                                            'c_finished',
                                                                                                            '0')
                                                                                                >,
                                                                                                <
                                                                                                 KEM_s_PK(~sk_P), 
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>
                                                                                         ) ▶₁ #t20 )
                                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                    solve( FS( ~tid, '3', '5',
                                                                                               'fs'
                                                                                           ) @ #t21 )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                      solve( !Pk( $S, pk_S,
                                                                                                  'KEM_s'
                                                                                             ) ▶₀ #t21 )
                                                                                        case KEMTLS_KEM_s_KeyGen
                                                                                        solve( State( ~tid,
                                                                                                      'KEMTLS_PDK_SAUTH',
                                                                                                      'ClientAction2_part1',
                                                                                                      HS,
                                                                                                      <
                                                                                                       KEM_s_PK(~sk_P.1), 
                                                                                                       <pk_e, 
                                                                                                        r_c.1, 
                                                                                                        ct_S
                                                                                                       >, 
                                                                                                       ct_e, 
                                                                                                       r_s.1>
                                                                                               ) ▶₁ #t21 )
                                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                                          solve( FS( ~tid.1,
                                                                                                     '3', '5',
                                                                                                     'wfs1'
                                                                                                 ) @ #t22 )
                                                                                            case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                            solve( !Ltk( $S,
                                                                                                         pk_S,
                                                                                                         sk_S,
                                                                                                         'KEM_s'
                                                                                                   ) ▶₀ #t22 )
                                                                                              case KEMTLS_KEM_s_KeyGen
                                                                                              solve( State( ~tid.1,
                                                                                                            'KEMTLS_PDK_SAUTH',
                                                                                                            'ServerAction1',
                                                                                                            <
                                                                                                             MS, 
                                                                                                             fk_c
                                                                                                            >,
                                                                                                            <
                                                                                                             KEM_s_PK(~sk_P.1), 
                                                                                                             <
                                                                                                              pk_e, 
                                                                                                              r_c.1, 
                                                                                                              ct_S
                                                                                                             >, 
                                                                                                             ct_e, 
                                                                                                             r_s.1
                                                                                                            >
                                                                                                     ) ▶₁ #t22 )
                                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                solve( !KU( ~r_s
                                                                                                       ) @ #vk.3 )
                                                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                  solve( !KU( ~r_c
                                                                                                         ) @ #vk.8 )
                                                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                    solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                          ~coins_S)),
                                                                                                                                                                              'derived',
                                                                                                                                                                              '0'),
                                                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                   ~coins_e)),
                                                                                                                                                       'derived',
                                                                                                                                                       '0'),
                                                                                                                                            '0'),
                                                                                                                                's_finished',
                                                                                                                                '0'),
                                                                                                                     <
                                                                                                                      <
                                                                                                                       KEM_e_PK(~sk_e), 
                                                                                                                       ~r_c, 
                                                                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                       ~coins_S)
                                                                                                                      >, 
                                                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                      ~coins_e), 
                                                                                                                      ~r_s
                                                                                                                     >)
                                                                                                           ) @ #vk.3 )
                                                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                      solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                            ~coins_S)),
                                                                                                                                                                                'derived',
                                                                                                                                                                                '0'),
                                                                                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                     ~coins_e)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              '0'),
                                                                                                                                  'c_finished',
                                                                                                                                  '0'),
                                                                                                                       <
                                                                                                                        <
                                                                                                                         KEM_e_PK(~sk_e), 
                                                                                                                         ~r_c, 
                                                                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                         ~coins_S)
                                                                                                                        >, 
                                                                                                                        <
                                                                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                         ~coins_e), 
                                                                                                                         ~r_s
                                                                                                                        >, 
                                                                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                                  ~coins_S)),
                                                                                                                                                                                      'derived',
                                                                                                                                                                                      '0'),
                                                                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                           ~coins_e)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    '0'),
                                                                                                                                        's_finished',
                                                                                                                                        '0'),
                                                                                                                             <
                                                                                                                              <
                                                                                                                               KEM_e_PK(~sk_e), 
                                                                                                                               ~r_c, 
                                                                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                               ~coins_S)
                                                                                                                              >, 
                                                                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                              ~coins_e), 
                                                                                                                              ~r_s
                                                                                                                             >)
                                                                                                                       >)
                                                                                                             ) @ #vk.7 )
                                                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                                        solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                    ~coins_e)
                                                                                                               ) @ #vk.7 )
                                                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                          solve( !KU( KEM_e_PK(~sk_e)
                                                                                                                 ) @ #vk.8 )
                                                                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                            solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)
                                                                                                                   ) @ #vk.9 )
                                                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                              SOLVED // trace found
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage4_accepted4_cfs_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊤)) ∧ (S = 'anonymous')) ∨ ((⊤) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '4' ) @ #t9)) ∧
                   (Accept( tid_s, '4' ) @ #t10)) ∧
                  (Accept( tid_c, '4' ) @ #t11)) ∧
                 (Accept( tid_s, '4' ) @ #t12)) ∧
                (CID( tid_c, '4', sid_target ) @ #t13)) ∧
               (CID( tid_s, '4', sid_target ) @ #t14)) ∧
              (SID( tid_c, '4', sid_target ) @ #t15)) ∧
             (SID( tid_s, '4', sid_target ) @ #t16)) ∧
            (CID( tid_c, '4', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '4', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '4', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '4', sid_accepted ) @ #t20)) ∧
        (((⊤) ∧ (∃ #tt1. Auth( tid_c, '4', '4' ) @ #tt1)) ∨ (¬(⊤)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '4', '4' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '4', '4', 'fs' ) @ #t21)) ∧
     (FS( tid_s, '4', '4', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '4' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '4' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '4' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '4' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '4' ) @ #t9) ∧
  (Accept( tid_s, '4' ) @ #t10) ∧
  (Accept( tid_c, '4' ) @ #t11) ∧
  (Accept( tid_s, '4' ) @ #t12) ∧
  (CID( tid_c, '4', sid_target ) @ #t13) ∧
  (CID( tid_s, '4', sid_target ) @ #t14) ∧
  (SID( tid_c, '4', sid_target ) @ #t15) ∧
  (SID( tid_s, '4', sid_target ) @ #t16) ∧
  (CID( tid_c, '4', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '4', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '4', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '4', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '4', '4', 'fs' ) @ #t21) ∧
  (FS( tid_s, '4', '4', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (¬(S = 'anonymous')) ∧
  (C = 'anonymous') ∧
  (∃ #tt1. (Auth( tid_c, '4', '4' ) @ #tt1)) ∧
  (∀ #ttc. (Replayable( tid_c, '4' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '4' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( Owner( ~tid, 'anonymous' ) @ #t3 )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Owner( ~tid.1, S.2 ) @ #t4 )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Peer( ~tid, $S.1 ) @ #t5 )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( Role( ~tid, 'client' ) @ #t7 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( Role( ~tid.1, 'server' ) @ #t8 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( ~tid, '4' ) @ #t9 )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t9 )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                 ) ▶₁ #t9 )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( Accept( ~tid.1, '4' ) @ #t10 )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( Accept( ~tid, '4' ) @ #t11 )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                  case KEMTLS_KEM_s_KeyGen
                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                         ) ▶₁ #t11 )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( Accept( ~tid.1, '4' ) @ #t12 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      solve( CID( ~tid, '4', sid_target ) @ #t13 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, 
                                                         r_s.2>
                                                 ) ▶₁ #t13 )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( CID( ~tid.1, '4',
                                                        <'SATS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         <ct_e, r_s>, 
                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                   ~coins_S)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            z),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     '0'),
                                                                         's_finished', '0'),
                                                              <
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>)
                                                        >
                                                   ) @ #t14 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( SID( ~tid, '4',
                                                          <'SATS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s
                                                           >, 
                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0'),
                                                                <
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>)
                                                          >
                                                     ) @ #t15 )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                'ClientAction2_part1',
                                                                HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)),
                                                                <KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                 ~r_s>
                                                         ) ▶₁ #t15 )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( SID( ~tid.1, '4',
                                                                <'SATS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                  ~r_s>, 
                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                           ~coins_S)),
                                                                                                                               'derived',
                                                                                                                               '0'),
                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                    ~coins_e)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             '0'),
                                                                                 's_finished', '0'),
                                                                      <
                                                                       <KEM_e_PK(~sk_e), ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >, 
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>)
                                                                >
                                                           ) @ #t16 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( CID( ~tid, '4', sid_accepted ) @ #t17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                          case KEMTLS_KEM_s_KeyGen
                                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                        'ClientAction2_part1', HS,
                                                                        <KEM_s_PK(~sk_P.1), 
                                                                         <pk_e, r_c.1, ct_S>, ct_e, r_s.1>
                                                                 ) ▶₁ #t17 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                            solve( CID( ~tid.1, '4',
                                                                        <'SATS', KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         <
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>, 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                            ~coins_e)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         's_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>)
                                                                        >
                                                                   ) @ #t18 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              solve( SID( ~tid, '4',
                                                                          <'SATS', KEM_s_PK(~sk_P), 
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           <
                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                            ~coins_e), 
                                                                            ~r_s>, 
                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                     ~coins_S)),
                                                                                                                                         'derived',
                                                                                                                                         '0'),
                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                              ~coins_e)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       '0'),
                                                                                           's_finished', '0'),
                                                                                <
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>)
                                                                          >
                                                                     ) @ #t19 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s'
                                                                       ) ▶₀ #t19 )
                                                                  case KEMTLS_KEM_s_KeyGen
                                                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                                'ClientAction2_part1',
                                                                                HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                   ~coins_S)),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e)),
                                                                                <KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>
                                                                         ) ▶₁ #t19 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                    solve( SID( ~tid.1, '4',
                                                                                <'SATS', KEM_s_PK(~sk_P), 
                                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)
                                                                                 >, 
                                                                                 <
                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                  ~coins_e), 
                                                                                  ~r_s>, 
                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                           ~coins_S)),
                                                                                                                                               'derived',
                                                                                                                                               '0'),
                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                    ~coins_e)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             '0'),
                                                                                                 's_finished',
                                                                                                 '0'),
                                                                                      <
                                                                                       <KEM_e_PK(~sk_e), 
                                                                                        ~r_c, 
                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S)
                                                                                       >, 
                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e), 
                                                                                       ~r_s>)
                                                                                >
                                                                           ) @ #t20 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      solve( FS( ~tid, '4', '4', 'fs'
                                                                             ) @ #t21 )
                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                        solve( !Pk( $S.1, pk_S, 'KEM_s'
                                                                               ) ▶₀ #t21 )
                                                                          case KEMTLS_KEM_s_KeyGen
                                                                          solve( State( ~tid,
                                                                                        'KEMTLS_PDK_SAUTH',
                                                                                        'ClientAction2_part1',
                                                                                        HS,
                                                                                        <KEM_s_PK(~sk_P.1), 
                                                                                         <pk_e, r_c.1, ct_S>, 
                                                                                         ct_e, r_s.1>
                                                                                 ) ▶₁ #t21 )
                                                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                            solve( FS( ~tid.1, '4', '4',
                                                                                       'wfs1'
                                                                                   ) @ #t22 )
                                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                                              solve( Auth( ~tid, '4', '4'
                                                                                     ) @ #tt1 )
                                                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                solve( !Pk( $S.1, pk_S,
                                                                                            'KEM_s'
                                                                                       ) ▶₀ #tt1 )
                                                                                  case KEMTLS_KEM_s_KeyGen
                                                                                  solve( State( ~tid,
                                                                                                'KEMTLS_PDK_SAUTH',
                                                                                                'ClientAction2_part1',
                                                                                                HS,
                                                                                                <
                                                                                                 KEM_s_PK(~sk_P.1), 
                                                                                                 <pk_e, 
                                                                                                  r_c.1, ct_S
                                                                                                 >, 
                                                                                                 ct_e, r_s.1>
                                                                                         ) ▶₁ #tt1 )
                                                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                                    solve( !KU( ~r_s
                                                                                           ) @ #vk.3 )
                                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                      solve( !KU( ~r_c
                                                                                             ) @ #vk.7 )
                                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                        solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                              ~coins_S)),
                                                                                                                                                                  'derived',
                                                                                                                                                                  '0'),
                                                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                       ~coins_e)),
                                                                                                                                           'derived',
                                                                                                                                           '0'),
                                                                                                                                '0'),
                                                                                                                    's_finished',
                                                                                                                    '0'),
                                                                                                         <
                                                                                                          <
                                                                                                           KEM_e_PK(~sk_e), 
                                                                                                           ~r_c, 
                                                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)
                                                                                                          >, 
                                                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                          ~coins_e), 
                                                                                                          ~r_s
                                                                                                         >)
                                                                                               ) @ #vk.3 )
                                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                          solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)
                                                                                                 ) @ #vk.6 )
                                                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                            solve( !KU( KEM_e_PK(~sk_e)
                                                                                                   ) @ #vk.7 )
                                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                              solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)
                                                                                                     ) @ #vk.8 )
                                                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                SOLVED // trace found
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage4_accepted5_cfs_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '4', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '4', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '4' ) @ #t9)) ∧
                   (Accept( tid_s, '4' ) @ #t10)) ∧
                  (Accept( tid_c, '5' ) @ #t11)) ∧
                 (Accept( tid_s, '5' ) @ #t12)) ∧
                (CID( tid_c, '4', sid_target ) @ #t13)) ∧
               (CID( tid_s, '4', sid_target ) @ #t14)) ∧
              (SID( tid_c, '4', sid_target ) @ #t15)) ∧
             (SID( tid_s, '4', sid_target ) @ #t16)) ∧
            (CID( tid_c, '5', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '5', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '5', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '5', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '4', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '4', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '4', '5', 'fs' ) @ #t21)) ∧
     (FS( tid_s, '4', '5', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '4' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '4' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '4' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '4' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '4', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '4', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '4' ) @ #t9) ∧
  (Accept( tid_s, '4' ) @ #t10) ∧
  (Accept( tid_c, '5' ) @ #t11) ∧
  (Accept( tid_s, '5' ) @ #t12) ∧
  (CID( tid_c, '4', sid_target ) @ #t13) ∧
  (CID( tid_s, '4', sid_target ) @ #t14) ∧
  (SID( tid_c, '4', sid_target ) @ #t15) ∧
  (SID( tid_s, '4', sid_target ) @ #t16) ∧
  (CID( tid_c, '5', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '5', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '5', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '5', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '4', '5', 'fs' ) @ #t21) ∧
  (FS( tid_s, '4', '5', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∀ #ttc. (Replayable( tid_c, '4' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '4' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '4', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '4', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( State( tid_s, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #t2 )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, 'anonymous' ) @ #t3 )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( Role( ~tid, 'client' ) @ #t7 )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( Role( ~tid.1, 'server' ) @ #t8 )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        solve( Accept( ~tid, '4' ) @ #t9 )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                          solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t9 )
                            case KEMTLS_KEM_s_KeyGen
                            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                          <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                   ) ▶₁ #t9 )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              solve( Accept( ~tid.1, '4' ) @ #t10 )
                                case KEMTLS_PDK_SAUTH_ServerAction1
                                solve( Accept( ~tid, '5' ) @ #t11 )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                           ) ▶₁ #t11 )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid.1, '5' ) @ #t12 )
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #t12 )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                        <MS, fk_c>,
                                                        <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, 
                                                         r_s.2>
                                                 ) ▶₁ #t12 )
                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                            solve( CID( ~tid, '4', sid_target ) @ #t13 )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                              HS,
                                                              <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, 
                                                               ct_e.1, r_s.2>
                                                       ) ▶₁ #t13 )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( CID( ~tid.1, '4',
                                                              <'SATS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               <ct_e, r_s>, 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>)
                                                              >
                                                         ) @ #t14 )
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    solve( SID( ~tid, '4',
                                                                <'SATS', KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                  ~r_s>, 
                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                           ~coins_S)),
                                                                                                                               'derived',
                                                                                                                               '0'),
                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                    ~coins_e)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             '0'),
                                                                                 's_finished', '0'),
                                                                      <
                                                                       <KEM_e_PK(~sk_e), ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >, 
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>)
                                                                >
                                                           ) @ #t15 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                      solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #t15 )
                                                        case KEMTLS_KEM_s_KeyGen
                                                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                      'ClientAction2_part1',
                                                                      HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                         ~coins_S)),
                                                                                             'derived', '0'),
                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                  ~coins_e)),
                                                                      <KEM_s_PK(~sk_P), 
                                                                       <KEM_e_PK(~sk_e), ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >, 
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>
                                                               ) ▶₁ #t15 )
                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                          solve( SID( ~tid.1, '4',
                                                                      <'SATS', KEM_s_PK(~sk_P), 
                                                                       <KEM_e_PK(~sk_e), ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >, 
                                                                       <
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>, 
                                                                       HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                 ~coins_S)),
                                                                                                                                     'derived',
                                                                                                                                     '0'),
                                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                          ~coins_e)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   '0'),
                                                                                       's_finished', '0'),
                                                                            <
                                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                             >, 
                                                                             KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                             ~coins_e), 
                                                                             ~r_s>)
                                                                      >
                                                                 ) @ #t16 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            solve( CID( ~tid, '5', sid_accepted ) @ #t17 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                              solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t17 )
                                                                case KEMTLS_KEM_s_KeyGen
                                                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                              'ClientAction2_part1', HS,
                                                                              <KEM_s_PK(~sk_P.1), 
                                                                               <pk_e, r_c.1, ct_S>, ct_e, 
                                                                               r_s.1>
                                                                       ) ▶₁ #t17 )
                                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                  solve( CID( ~tid.1, '5',
                                                                              <'CATS', KEM_s_PK(~sk_P), 
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               <
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>, 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               's_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>), 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               'c_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     <
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>, 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     's_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>)
                                                                                    >)
                                                                              >
                                                                         ) @ #t18 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                                                    solve( !Ltk( $S, KEM_s_PK(~sk_P), sk_S,
                                                                                 'KEM_s'
                                                                           ) ▶₀ #t18 )
                                                                      case KEMTLS_KEM_s_KeyGen
                                                                      solve( State( ~tid.1,
                                                                                    'KEMTLS_PDK_SAUTH',
                                                                                    'ServerAction1',
                                                                                    <MS, 
                                                                                     HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                          ~coins_S)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                   ~coins_e)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            '0'),
                                                                                                'c_finished',
                                                                                                '0')
                                                                                    >,
                                                                                    <KEM_s_PK(~sk_P), 
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>
                                                                             ) ▶₁ #t18 )
                                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                                        solve( SID( ~tid, '5',
                                                                                    <'CATS', KEM_s_PK(~sk_P), 
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     <
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>, 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     's_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>), 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     'c_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           <
                                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e), 
                                                                                            ~r_s>, 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           's_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>)
                                                                                          >)
                                                                                    >
                                                                               ) @ #t19 )
                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                          solve( !Pk( $S, KEM_s_PK(~sk_P),
                                                                                      'KEM_s'
                                                                                 ) ▶₀ #t19 )
                                                                            case KEMTLS_KEM_s_KeyGen
                                                                            solve( State( ~tid,
                                                                                          'KEMTLS_PDK_SAUTH',
                                                                                          'ClientAction2_part1',
                                                                                          HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)),
                                                                                          <KEM_s_PK(~sk_P), 
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>
                                                                                   ) ▶₁ #t19 )
                                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                              solve( SID( ~tid.1, '5',
                                                                                          <'CATS', 
                                                                                           KEM_s_PK(~sk_P), 
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           <
                                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e), 
                                                                                            ~r_s>, 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           's_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>), 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           'c_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 <
                                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                  ~coins_e), 
                                                                                                  ~r_s>, 
                                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                           ~coins_S)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                    ~coins_e)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             '0'),
                                                                                                                 's_finished',
                                                                                                                 '0'),
                                                                                                      <
                                                                                                       <
                                                                                                        KEM_e_PK(~sk_e), 
                                                                                                        ~r_c, 
                                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)
                                                                                                       >, 
                                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                       ~coins_e), 
                                                                                                       ~r_s>)
                                                                                                >)
                                                                                          >
                                                                                     ) @ #t20 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                solve( !Ltk( $S,
                                                                                             KEM_s_PK(~sk_P),
                                                                                             sk_S, 'KEM_s'
                                                                                       ) ▶₀ #t20 )
                                                                                  case KEMTLS_KEM_s_KeyGen
                                                                                  solve( State( ~tid.1,
                                                                                                'KEMTLS_PDK_SAUTH',
                                                                                                'ServerAction1',
                                                                                                <MS, 
                                                                                                 HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                      ~coins_S)),
                                                                                                                                                          'derived',
                                                                                                                                                          '0'),
                                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                               ~coins_e)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        '0'),
                                                                                                            'c_finished',
                                                                                                            '0')
                                                                                                >,
                                                                                                <
                                                                                                 KEM_s_PK(~sk_P), 
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>
                                                                                         ) ▶₁ #t20 )
                                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                    solve( FS( ~tid, '4', '5',
                                                                                               'fs'
                                                                                           ) @ #t21 )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                      solve( !Pk( $S, pk_S,
                                                                                                  'KEM_s'
                                                                                             ) ▶₀ #t21 )
                                                                                        case KEMTLS_KEM_s_KeyGen
                                                                                        solve( State( ~tid,
                                                                                                      'KEMTLS_PDK_SAUTH',
                                                                                                      'ClientAction2_part1',
                                                                                                      HS,
                                                                                                      <
                                                                                                       KEM_s_PK(~sk_P.1), 
                                                                                                       <pk_e, 
                                                                                                        r_c.1, 
                                                                                                        ct_S
                                                                                                       >, 
                                                                                                       ct_e, 
                                                                                                       r_s.1>
                                                                                               ) ▶₁ #t21 )
                                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                                          solve( FS( ~tid.1,
                                                                                                     '4', '5',
                                                                                                     'wfs1'
                                                                                                 ) @ #t22 )
                                                                                            case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                            solve( !Ltk( $S,
                                                                                                         pk_S,
                                                                                                         sk_S,
                                                                                                         'KEM_s'
                                                                                                   ) ▶₀ #t22 )
                                                                                              case KEMTLS_KEM_s_KeyGen
                                                                                              solve( State( ~tid.1,
                                                                                                            'KEMTLS_PDK_SAUTH',
                                                                                                            'ServerAction1',
                                                                                                            <
                                                                                                             MS, 
                                                                                                             fk_c
                                                                                                            >,
                                                                                                            <
                                                                                                             KEM_s_PK(~sk_P.1), 
                                                                                                             <
                                                                                                              pk_e, 
                                                                                                              r_c.1, 
                                                                                                              ct_S
                                                                                                             >, 
                                                                                                             ct_e, 
                                                                                                             r_s.1
                                                                                                            >
                                                                                                     ) ▶₁ #t22 )
                                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                solve( !KU( ~r_s
                                                                                                       ) @ #vk.3 )
                                                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                  solve( !KU( ~r_c
                                                                                                         ) @ #vk.8 )
                                                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                    solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                          ~coins_S)),
                                                                                                                                                                              'derived',
                                                                                                                                                                              '0'),
                                                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                   ~coins_e)),
                                                                                                                                                       'derived',
                                                                                                                                                       '0'),
                                                                                                                                            '0'),
                                                                                                                                's_finished',
                                                                                                                                '0'),
                                                                                                                     <
                                                                                                                      <
                                                                                                                       KEM_e_PK(~sk_e), 
                                                                                                                       ~r_c, 
                                                                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                       ~coins_S)
                                                                                                                      >, 
                                                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                      ~coins_e), 
                                                                                                                      ~r_s
                                                                                                                     >)
                                                                                                           ) @ #vk.3 )
                                                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                      solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                            ~coins_S)),
                                                                                                                                                                                'derived',
                                                                                                                                                                                '0'),
                                                                                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                     ~coins_e)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              '0'),
                                                                                                                                  'c_finished',
                                                                                                                                  '0'),
                                                                                                                       <
                                                                                                                        <
                                                                                                                         KEM_e_PK(~sk_e), 
                                                                                                                         ~r_c, 
                                                                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                         ~coins_S)
                                                                                                                        >, 
                                                                                                                        <
                                                                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                         ~coins_e), 
                                                                                                                         ~r_s
                                                                                                                        >, 
                                                                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                                  ~coins_S)),
                                                                                                                                                                                      'derived',
                                                                                                                                                                                      '0'),
                                                                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                           ~coins_e)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    '0'),
                                                                                                                                        's_finished',
                                                                                                                                        '0'),
                                                                                                                             <
                                                                                                                              <
                                                                                                                               KEM_e_PK(~sk_e), 
                                                                                                                               ~r_c, 
                                                                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                               ~coins_S)
                                                                                                                              >, 
                                                                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                              ~coins_e), 
                                                                                                                              ~r_s
                                                                                                                             >)
                                                                                                                       >)
                                                                                                             ) @ #vk.7 )
                                                                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                                        solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                    ~coins_e)
                                                                                                               ) @ #vk.7 )
                                                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                          solve( !KU( KEM_e_PK(~sk_e)
                                                                                                                 ) @ #vk.8 )
                                                                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                            solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)
                                                                                                                   ) @ #vk.9 )
                                                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                              SOLVED // trace found
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reachable_KEMTLS_PDK_SAUTH_stage5_accepted5_cfs_swfs1:
  exists-trace
  "∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
     #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
    (((((((((((((((((((((((((((¬(tid_c = tid_s)) ∧
                              (ProtocolMode( tid_c, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1)) ∧
                             (ProtocolMode( tid_s, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2)) ∧
                            (Owner( tid_c, C ) @ #t3)) ∧
                           (Owner( tid_s, S ) @ #t4)) ∧
                          (Peer( tid_c, S ) @ #t5)) ∧
                         (Peer( tid_s, C ) @ #t6)) ∧
                        (((¬(⊥)) ∧ (S = 'anonymous')) ∨ ((⊥) ∧ (¬(S = 'anonymous'))))) ∧
                       (((¬(⊥)) ∧ (C = 'anonymous')) ∨ ((⊥) ∧ (¬(C = 'anonymous'))))) ∧
                      (Role( tid_c, 'client' ) @ #t7)) ∧
                     (Role( tid_s, 'server' ) @ #t8)) ∧
                    (Accept( tid_c, '5' ) @ #t9)) ∧
                   (Accept( tid_s, '5' ) @ #t10)) ∧
                  (Accept( tid_c, '5' ) @ #t11)) ∧
                 (Accept( tid_s, '5' ) @ #t12)) ∧
                (CID( tid_c, '5', sid_target ) @ #t13)) ∧
               (CID( tid_s, '5', sid_target ) @ #t14)) ∧
              (SID( tid_c, '5', sid_target ) @ #t15)) ∧
             (SID( tid_s, '5', sid_target ) @ #t16)) ∧
            (CID( tid_c, '5', sid_accepted ) @ #t17)) ∧
           (CID( tid_s, '5', sid_accepted ) @ #t18)) ∧
          (SID( tid_c, '5', sid_accepted ) @ #t19)) ∧
         (SID( tid_s, '5', sid_accepted ) @ #t20)) ∧
        (((⊥) ∧ (∃ #tt1. Auth( tid_c, '5', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
       (((⊥) ∧ (∃ #tt1. Auth( tid_s, '5', '5' ) @ #tt1)) ∨ (¬(⊥)))) ∧
      (FS( tid_c, '5', '5', 'fs' ) @ #t21)) ∧
     (FS( tid_s, '5', '5', 'wfs1' ) @ #t22)) ∧
    ((((⊥) ∧ (∃ #ttc. Replayable( tid_c, '5' ) @ #ttc)) ∧
      (∃ #tts. Replayable( tid_s, '5' ) @ #tts)) ∨
     (((¬(⊥)) ∧ (¬(∃ #ttc. Replayable( tid_c, '5' ) @ #ttc))) ∧
      (¬(∃ #tts. Replayable( tid_s, '5' ) @ #tts))))"
/*
guarded formula characterizing all satisfying traces:
"∃ tid_c tid_s C S sid_target sid_accepted #t1 #t2 #t3 #t4 #t5 #t6 #t7
   #t8 #t9 #t10 #t11 #t12 #t13 #t14 #t15 #t16 #t17 #t18 #t19 #t20 #t21 #t22.
  (ProtocolMode( tid_c, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (ProtocolMode( tid_s, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2) ∧
  (Owner( tid_c, C ) @ #t3) ∧
  (Owner( tid_s, S ) @ #t4) ∧
  (Peer( tid_c, S ) @ #t5) ∧
  (Peer( tid_s, C ) @ #t6) ∧
  (Role( tid_c, 'client' ) @ #t7) ∧
  (Role( tid_s, 'server' ) @ #t8) ∧
  (Accept( tid_c, '5' ) @ #t9) ∧
  (Accept( tid_s, '5' ) @ #t10) ∧
  (Accept( tid_c, '5' ) @ #t11) ∧
  (Accept( tid_s, '5' ) @ #t12) ∧
  (CID( tid_c, '5', sid_target ) @ #t13) ∧
  (CID( tid_s, '5', sid_target ) @ #t14) ∧
  (SID( tid_c, '5', sid_target ) @ #t15) ∧
  (SID( tid_s, '5', sid_target ) @ #t16) ∧
  (CID( tid_c, '5', sid_accepted ) @ #t17) ∧
  (CID( tid_s, '5', sid_accepted ) @ #t18) ∧
  (SID( tid_c, '5', sid_accepted ) @ #t19) ∧
  (SID( tid_s, '5', sid_accepted ) @ #t20) ∧
  (FS( tid_c, '5', '5', 'fs' ) @ #t21) ∧
  (FS( tid_s, '5', '5', 'wfs1' ) @ #t22)
 ∧
  (¬(tid_c = tid_s)) ∧
  (S = 'anonymous') ∧
  (C = 'anonymous') ∧
  (∀ #ttc. (Replayable( tid_c, '5' ) @ #ttc) ⇒ ⊥) ∧
  (∀ #tts. (Replayable( tid_s, '5' ) @ #tts) ⇒ ⊥)"
*/
simplify
solve( ProtocolMode( tid_c, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_c, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( ProtocolMode( tid_s, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( State( tid_s, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #t2 )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, 'anonymous' ) @ #t3 )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( Owner( ~tid.1, 'anonymous' ) @ #t4 )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Peer( ~tid, 'anonymous' ) @ #t5 )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( Peer( ~tid.1, 'anonymous' ) @ #t6 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( Role( ~tid, 'client' ) @ #t7 )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( Role( ~tid.1, 'server' ) @ #t8 )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        solve( Accept( ~tid, '5' ) @ #t9 )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                          solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t9 )
                            case KEMTLS_KEM_s_KeyGen
                            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                          <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                   ) ▶₁ #t9 )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              solve( Accept( ~tid.1, '5' ) @ #t10 )
                                case KEMTLS_PDK_SAUTH_ServerAction2
                                solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #t10 )
                                  case KEMTLS_KEM_s_KeyGen
                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                         ) ▶₁ #t10 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    solve( Accept( ~tid, '5' ) @ #t11 )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                      solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t11 )
                                        case KEMTLS_KEM_s_KeyGen
                                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                      <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, ct_e.1, 
                                                       r_s.2>
                                               ) ▶₁ #t11 )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                          solve( Accept( ~tid.1, '5' ) @ #t12 )
                                            case KEMTLS_PDK_SAUTH_ServerAction2
                                            solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #t12 )
                                              case KEMTLS_KEM_s_KeyGen
                                              solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                            <MS, fk_c>,
                                                            <KEM_s_PK(~sk_P.2), <pk_e.1, r_c.2, ct_S.1>, 
                                                             ct_e.1, r_s.2>
                                                     ) ▶₁ #t12 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( CID( ~tid, '5', sid_target ) @ #t13 )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t13 )
                                                    case KEMTLS_KEM_s_KeyGen
                                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                  'ClientAction2_part1', HS,
                                                                  <KEM_s_PK(~sk_P.2), 
                                                                   <pk_e.1, r_c.2, ct_S.1>, ct_e.1, r_s.2>
                                                           ) ▶₁ #t13 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                      solve( CID( ~tid.1, '5',
                                                                  <'CATS', KEM_s_PK(~sk_P), 
                                                                   <KEM_e_PK(~sk_e), ~r_c, 
                                                                    KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                   >, 
                                                                   <ct_e, r_s>, 
                                                                   HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                             ~coins_S)),
                                                                                                                                 'derived',
                                                                                                                                 '0'),
                                                                                                                      z),
                                                                                                          'derived',
                                                                                                          '0'),
                                                                                               '0'),
                                                                                   's_finished', '0'),
                                                                        <
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         ct_e, r_s>), 
                                                                   HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                             ~coins_S)),
                                                                                                                                 'derived',
                                                                                                                                 '0'),
                                                                                                                      z),
                                                                                                          'derived',
                                                                                                          '0'),
                                                                                               '0'),
                                                                                   'c_finished', '0'),
                                                                        <
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         <ct_e, r_s>, 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            z),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         's_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               ct_e, r_s>)
                                                                        >)
                                                                  >
                                                             ) @ #t14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                                        solve( !Ltk( $S, KEM_s_PK(~sk_P), sk_S, 'KEM_s'
                                                               ) ▶₀ #t14 )
                                                          case KEMTLS_KEM_s_KeyGen
                                                          solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                        'ServerAction1',
                                                                        <MS, 
                                                                         HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       z),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    'c_finished', '0')
                                                                        >,
                                                                        <KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         ct_e, r_s>
                                                                 ) ▶₁ #t14 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            solve( SID( ~tid, '5',
                                                                        <'CATS', KEM_s_PK(~sk_P), 
                                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                         >, 
                                                                         <
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>, 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                            ~coins_e)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         's_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>), 
                                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                   ~coins_S)),
                                                                                                                                       'derived',
                                                                                                                                       '0'),
                                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                            ~coins_e)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     '0'),
                                                                                         'c_finished', '0'),
                                                                              <
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               <
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>, 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               's_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>)
                                                                              >)
                                                                        >
                                                                   ) @ #t15 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                              solve( !Pk( $S, KEM_s_PK(~sk_P), 'KEM_s'
                                                                     ) ▶₀ #t15 )
                                                                case KEMTLS_KEM_s_KeyGen
                                                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH',
                                                                              'ClientAction2_part1',
                                                                              HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                 ~coins_S)),
                                                                                                     'derived',
                                                                                                     '0'),
                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                          ~coins_e)),
                                                                              <KEM_s_PK(~sk_P), 
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>
                                                                       ) ▶₁ #t15 )
                                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                  solve( SID( ~tid.1, '5',
                                                                              <'CATS', KEM_s_PK(~sk_P), 
                                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)
                                                                               >, 
                                                                               <
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>, 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               's_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>), 
                                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                         ~coins_S)),
                                                                                                                                             'derived',
                                                                                                                                             '0'),
                                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e)),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           '0'),
                                                                                               'c_finished',
                                                                                               '0'),
                                                                                    <
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     <
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>, 
                                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                               ~coins_S)),
                                                                                                                                                   'derived',
                                                                                                                                                   '0'),
                                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                        ~coins_e)),
                                                                                                                            'derived',
                                                                                                                            '0'),
                                                                                                                 '0'),
                                                                                                     's_finished',
                                                                                                     '0'),
                                                                                          <
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e), 
                                                                                           ~r_s>)
                                                                                    >)
                                                                              >
                                                                         ) @ #t16 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                                                    solve( !Ltk( $S, KEM_s_PK(~sk_P), sk_S,
                                                                                 'KEM_s'
                                                                           ) ▶₀ #t16 )
                                                                      case KEMTLS_KEM_s_KeyGen
                                                                      solve( State( ~tid.1,
                                                                                    'KEMTLS_PDK_SAUTH',
                                                                                    'ServerAction1',
                                                                                    <MS, 
                                                                                     HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                          ~coins_S)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                   ~coins_e)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            '0'),
                                                                                                'c_finished',
                                                                                                '0')
                                                                                    >,
                                                                                    <KEM_s_PK(~sk_P), 
                                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)
                                                                                     >, 
                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e), 
                                                                                     ~r_s>
                                                                             ) ▶₁ #t16 )
                                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                                        solve( CID( ~tid, '5', sid_accepted
                                                                               ) @ #t17 )
                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                          solve( !Pk( $S, pk_S, 'KEM_s'
                                                                                 ) ▶₀ #t17 )
                                                                            case KEMTLS_KEM_s_KeyGen
                                                                            solve( State( ~tid,
                                                                                          'KEMTLS_PDK_SAUTH',
                                                                                          'ClientAction2_part1',
                                                                                          HS,
                                                                                          <KEM_s_PK(~sk_P.1), 
                                                                                           <pk_e, r_c.1, ct_S
                                                                                           >, 
                                                                                           ct_e, r_s.1>
                                                                                   ) ▶₁ #t17 )
                                                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                              solve( CID( ~tid.1, '5',
                                                                                          <'CATS', 
                                                                                           KEM_s_PK(~sk_P), 
                                                                                           <KEM_e_PK(~sk_e), 
                                                                                            ~r_c, 
                                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)
                                                                                           >, 
                                                                                           <
                                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e), 
                                                                                            ~r_s>, 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           's_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>), 
                                                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                     ~coins_S)),
                                                                                                                                                         'derived',
                                                                                                                                                         '0'),
                                                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                              ~coins_e)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       '0'),
                                                                                                           'c_finished',
                                                                                                           '0'),
                                                                                                <
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 <
                                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                  ~coins_e), 
                                                                                                  ~r_s>, 
                                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                           ~coins_S)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                    ~coins_e)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             '0'),
                                                                                                                 's_finished',
                                                                                                                 '0'),
                                                                                                      <
                                                                                                       <
                                                                                                        KEM_e_PK(~sk_e), 
                                                                                                        ~r_c, 
                                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)
                                                                                                       >, 
                                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                       ~coins_e), 
                                                                                                       ~r_s>)
                                                                                                >)
                                                                                          >
                                                                                     ) @ #t18 )
                                                                                case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                solve( !Ltk( $S,
                                                                                             KEM_s_PK(~sk_P),
                                                                                             sk_S, 'KEM_s'
                                                                                       ) ▶₀ #t18 )
                                                                                  case KEMTLS_KEM_s_KeyGen
                                                                                  solve( State( ~tid.1,
                                                                                                'KEMTLS_PDK_SAUTH',
                                                                                                'ServerAction1',
                                                                                                <MS, 
                                                                                                 HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                      ~coins_S)),
                                                                                                                                                          'derived',
                                                                                                                                                          '0'),
                                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                               ~coins_e)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        '0'),
                                                                                                            'c_finished',
                                                                                                            '0')
                                                                                                >,
                                                                                                <
                                                                                                 KEM_s_PK(~sk_P), 
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e), 
                                                                                                 ~r_s>
                                                                                         ) ▶₁ #t18 )
                                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                    solve( SID( ~tid, '5',
                                                                                                <'CATS', 
                                                                                                 KEM_s_PK(~sk_P), 
                                                                                                 <
                                                                                                  KEM_e_PK(~sk_e), 
                                                                                                  ~r_c, 
                                                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)
                                                                                                 >, 
                                                                                                 <
                                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                  ~coins_e), 
                                                                                                  ~r_s>, 
                                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                           ~coins_S)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                    ~coins_e)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             '0'),
                                                                                                                 's_finished',
                                                                                                                 '0'),
                                                                                                      <
                                                                                                       <
                                                                                                        KEM_e_PK(~sk_e), 
                                                                                                        ~r_c, 
                                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)
                                                                                                       >, 
                                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                       ~coins_e), 
                                                                                                       ~r_s
                                                                                                      >), 
                                                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                           ~coins_S)),
                                                                                                                                                               'derived',
                                                                                                                                                               '0'),
                                                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                    ~coins_e)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             '0'),
                                                                                                                 'c_finished',
                                                                                                                 '0'),
                                                                                                      <
                                                                                                       <
                                                                                                        KEM_e_PK(~sk_e), 
                                                                                                        ~r_c, 
                                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)
                                                                                                       >, 
                                                                                                       <
                                                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                        ~coins_e), 
                                                                                                        ~r_s
                                                                                                       >, 
                                                                                                       HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                 ~coins_S)),
                                                                                                                                                                     'derived',
                                                                                                                                                                     '0'),
                                                                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                          ~coins_e)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   '0'),
                                                                                                                       's_finished',
                                                                                                                       '0'),
                                                                                                            <
                                                                                                             <
                                                                                                              KEM_e_PK(~sk_e), 
                                                                                                              ~r_c, 
                                                                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)
                                                                                                             >, 
                                                                                                             KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                             ~coins_e), 
                                                                                                             ~r_s
                                                                                                            >)
                                                                                                      >)
                                                                                                >
                                                                                           ) @ #t19 )
                                                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                      solve( !Pk( $S,
                                                                                                  KEM_s_PK(~sk_P),
                                                                                                  'KEM_s'
                                                                                             ) ▶₀ #t19 )
                                                                                        case KEMTLS_KEM_s_KeyGen
                                                                                        solve( State( ~tid,
                                                                                                      'KEMTLS_PDK_SAUTH',
                                                                                                      'ClientAction2_part1',
                                                                                                      HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      <
                                                                                                       KEM_s_PK(~sk_P), 
                                                                                                       <
                                                                                                        KEM_e_PK(~sk_e), 
                                                                                                        ~r_c, 
                                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)
                                                                                                       >, 
                                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                       ~coins_e), 
                                                                                                       ~r_s>
                                                                                               ) ▶₁ #t19 )
                                                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                                          solve( SID( ~tid.1,
                                                                                                      '5',
                                                                                                      <
                                                                                                       'CATS', 
                                                                                                       KEM_s_PK(~sk_P), 
                                                                                                       <
                                                                                                        KEM_e_PK(~sk_e), 
                                                                                                        ~r_c, 
                                                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)
                                                                                                       >, 
                                                                                                       <
                                                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                        ~coins_e), 
                                                                                                        ~r_s
                                                                                                       >, 
                                                                                                       HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                 ~coins_S)),
                                                                                                                                                                     'derived',
                                                                                                                                                                     '0'),
                                                                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                          ~coins_e)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   '0'),
                                                                                                                       's_finished',
                                                                                                                       '0'),
                                                                                                            <
                                                                                                             <
                                                                                                              KEM_e_PK(~sk_e), 
                                                                                                              ~r_c, 
                                                                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)
                                                                                                             >, 
                                                                                                             KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                             ~coins_e), 
                                                                                                             ~r_s
                                                                                                            >), 
                                                                                                       HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                 ~coins_S)),
                                                                                                                                                                     'derived',
                                                                                                                                                                     '0'),
                                                                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                          ~coins_e)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   '0'),
                                                                                                                       'c_finished',
                                                                                                                       '0'),
                                                                                                            <
                                                                                                             <
                                                                                                              KEM_e_PK(~sk_e), 
                                                                                                              ~r_c, 
                                                                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)
                                                                                                             >, 
                                                                                                             <
                                                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e), 
                                                                                                              ~r_s
                                                                                                             >, 
                                                                                                             HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                       ~coins_S)),
                                                                                                                                                                           'derived',
                                                                                                                                                                           '0'),
                                                                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                ~coins_e)),
                                                                                                                                                    'derived',
                                                                                                                                                    '0'),
                                                                                                                                         '0'),
                                                                                                                             's_finished',
                                                                                                                             '0'),
                                                                                                                  <
                                                                                                                   <
                                                                                                                    KEM_e_PK(~sk_e), 
                                                                                                                    ~r_c, 
                                                                                                                    KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)
                                                                                                                   >, 
                                                                                                                   KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                   ~coins_e), 
                                                                                                                   ~r_s
                                                                                                                  >)
                                                                                                            >)
                                                                                                      >
                                                                                                 ) @ #t20 )
                                                                                            case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                            solve( !Ltk( $S,
                                                                                                         KEM_s_PK(~sk_P),
                                                                                                         sk_S,
                                                                                                         'KEM_s'
                                                                                                   ) ▶₀ #t20 )
                                                                                              case KEMTLS_KEM_s_KeyGen
                                                                                              solve( State( ~tid.1,
                                                                                                            'KEMTLS_PDK_SAUTH',
                                                                                                            'ServerAction1',
                                                                                                            <
                                                                                                             MS, 
                                                                                                             HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                  ~coins_S)),
                                                                                                                                                                      'derived',
                                                                                                                                                                      '0'),
                                                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                           ~coins_e)),
                                                                                                                                               'derived',
                                                                                                                                               '0'),
                                                                                                                                    '0'),
                                                                                                                        'c_finished',
                                                                                                                        '0')
                                                                                                            >,
                                                                                                            <
                                                                                                             KEM_s_PK(~sk_P), 
                                                                                                             <
                                                                                                              KEM_e_PK(~sk_e), 
                                                                                                              ~r_c, 
                                                                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)
                                                                                                             >, 
                                                                                                             KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                             ~coins_e), 
                                                                                                             ~r_s
                                                                                                            >
                                                                                                     ) ▶₁ #t20 )
                                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                solve( FS( ~tid,
                                                                                                           '5',
                                                                                                           '5',
                                                                                                           'fs'
                                                                                                       ) @ #t21 )
                                                                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                                  solve( !Pk( $S,
                                                                                                              pk_S,
                                                                                                              'KEM_s'
                                                                                                         ) ▶₀ #t21 )
                                                                                                    case KEMTLS_KEM_s_KeyGen
                                                                                                    solve( State( ~tid,
                                                                                                                  'KEMTLS_PDK_SAUTH',
                                                                                                                  'ClientAction2_part1',
                                                                                                                  HS,
                                                                                                                  <
                                                                                                                   KEM_s_PK(~sk_P.1), 
                                                                                                                   <
                                                                                                                    pk_e, 
                                                                                                                    r_c.1, 
                                                                                                                    ct_S
                                                                                                                   >, 
                                                                                                                   ct_e, 
                                                                                                                   r_s.1
                                                                                                                  >
                                                                                                           ) ▶₁ #t21 )
                                                                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                                                                      solve( FS( ~tid.1,
                                                                                                                 '5',
                                                                                                                 '5',
                                                                                                                 'wfs1'
                                                                                                             ) @ #t22 )
                                                                                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                                                                                        solve( !Ltk( $S,
                                                                                                                     pk_S,
                                                                                                                     sk_S,
                                                                                                                     'KEM_s'
                                                                                                               ) ▶₀ #t22 )
                                                                                                          case KEMTLS_KEM_s_KeyGen
                                                                                                          solve( State( ~tid.1,
                                                                                                                        'KEMTLS_PDK_SAUTH',
                                                                                                                        'ServerAction1',
                                                                                                                        <
                                                                                                                         MS, 
                                                                                                                         fk_c
                                                                                                                        >,
                                                                                                                        <
                                                                                                                         KEM_s_PK(~sk_P.1), 
                                                                                                                         <
                                                                                                                          pk_e, 
                                                                                                                          r_c.1, 
                                                                                                                          ct_S
                                                                                                                         >, 
                                                                                                                         ct_e, 
                                                                                                                         r_s.1
                                                                                                                        >
                                                                                                                 ) ▶₁ #t22 )
                                                                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                            solve( !KU( ~r_c
                                                                                                                   ) @ #vk.8 )
                                                                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                              solve( !KU( ~r_s
                                                                                                                     ) @ #vk.4 )
                                                                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                                solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                                      ~coins_S)),
                                                                                                                                                                                          'derived',
                                                                                                                                                                                          '0'),
                                                                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                               ~coins_e)),
                                                                                                                                                                   'derived',
                                                                                                                                                                   '0'),
                                                                                                                                                        '0'),
                                                                                                                                            's_finished',
                                                                                                                                            '0'),
                                                                                                                                 <
                                                                                                                                  <
                                                                                                                                   KEM_e_PK(~sk_e), 
                                                                                                                                   ~r_c, 
                                                                                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                                   ~coins_S)
                                                                                                                                  >, 
                                                                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                                  ~coins_e), 
                                                                                                                                  ~r_s
                                                                                                                                 >)
                                                                                                                       ) @ #vk.4 )
                                                                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                                  solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                                        ~coins_S)),
                                                                                                                                                                                            'derived',
                                                                                                                                                                                            '0'),
                                                                                                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                                 ~coins_e)),
                                                                                                                                                                     'derived',
                                                                                                                                                                     '0'),
                                                                                                                                                          '0'),
                                                                                                                                              'c_finished',
                                                                                                                                              '0'),
                                                                                                                                   <
                                                                                                                                    <
                                                                                                                                     KEM_e_PK(~sk_e), 
                                                                                                                                     ~r_c, 
                                                                                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)
                                                                                                                                    >, 
                                                                                                                                    <
                                                                                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                                     ~coins_e), 
                                                                                                                                     ~r_s
                                                                                                                                    >, 
                                                                                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                                                              ~coins_S)),
                                                                                                                                                                                                  'derived',
                                                                                                                                                                                                  '0'),
                                                                                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                                                                       ~coins_e)),
                                                                                                                                                                           'derived',
                                                                                                                                                                           '0'),
                                                                                                                                                                '0'),
                                                                                                                                                    's_finished',
                                                                                                                                                    '0'),
                                                                                                                                         <
                                                                                                                                          <
                                                                                                                                           KEM_e_PK(~sk_e), 
                                                                                                                                           ~r_c, 
                                                                                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                                           ~coins_S)
                                                                                                                                          >, 
                                                                                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                                          ~coins_e), 
                                                                                                                                          ~r_s
                                                                                                                                         >)
                                                                                                                                   >)
                                                                                                                         ) @ #vk.7 )
                                                                                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                                                                                    solve( !KU( KEM_e_PK(~sk_e)
                                                                                                                           ) @ #vk.8 )
                                                                                                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                                      solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                                                                  ~coins_S)
                                                                                                                             ) @ #vk.9 )
                                                                                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                                                                                        solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                                                                    ~coins_e)
                                                                                                                               ) @ #vk.9 )
                                                                                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                                                                                          SOLVED // trace found
                                                                                                                        qed
                                                                                                                      qed
                                                                                                                    qed
                                                                                                                  qed
                                                                                                                qed
                                                                                                              qed
                                                                                                            qed
                                                                                                          qed
                                                                                                        qed
                                                                                                      qed
                                                                                                    qed
                                                                                                  qed
                                                                                                qed
                                                                                              qed
                                                                                            qed
                                                                                          qed
                                                                                        qed
                                                                                      qed
                                                                                    qed
                                                                                  qed
                                                                                qed
                                                                              qed
                                                                            qed
                                                                          qed
                                                                        qed
                                                                      qed
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma attacker_works_revealsk:
  exists-trace "∃ tid stage #t1. RevealedSessionKey( tid, stage ) @ #t1"
/*
guarded formula characterizing all satisfying traces:
"∃ tid stage #t1. (RevealedSessionKey( tid, stage ) @ #t1)"
*/
simplify
solve( !SessionKey( tid, stage, key ) ▶₀ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction1
  SOLVED // trace found
qed

lemma attacker_works_corruptltk_KEM_c:
  exists-trace "∃ P #t1. CorruptedLTK( P, 'KEM_c' ) @ #t1"
/*
guarded formula characterizing all satisfying traces:
"∃ P #t1. (CorruptedLTK( P, 'KEM_c' ) @ #t1)"
*/
simplify
solve( !Ltk( $P, pk, sk, 'KEM_c' ) ▶₀ #t1 )
  case KEMTLS_KEM_c_KeyGen
  SOLVED // trace found
qed

lemma attacker_works_corruptltk_KEM_s:
  exists-trace "∃ P #t1. CorruptedLTK( P, 'KEM_s' ) @ #t1"
/*
guarded formula characterizing all satisfying traces:
"∃ P #t1. (CorruptedLTK( P, 'KEM_s' ) @ #t1)"
*/
simplify
solve( !Ltk( $P, pk, sk, 'KEM_s' ) ▶₀ #t1 )
  case KEMTLS_KEM_s_KeyGen
  SOLVED // trace found
qed

lemma attacker_works_learn_sessionkey_modeKEMTLS_PDK_SAUTH_stage1:
  exists-trace
  "∃ tid sk #t1 #t2 #t3 #t4.
    (((ProtocolMode( tid, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
      (Accept( tid, '1' ) @ #t2)) ∧
     (SK( tid, '1', sk ) @ #t3)) ∧
    (K( sk ) @ #t4)"
/*
guarded formula characterizing all satisfying traces:
"∃ tid sk #t1 #t2 #t3 #t4.
  (ProtocolMode( tid, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (Accept( tid, '1' ) @ #t2) ∧
  (SK( tid, '1', sk ) @ #t3) ∧
  (K( sk ) @ #t4)"
*/
simplify
solve( ProtocolMode( tid, '1', '1', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( Accept( ~tid, '1' ) @ #t2 )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( SK( ~tid, '1', sk ) @ #t3 )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( !KU( HKDFExpand(HKDFExtract('0',
                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                               'early_data',
                               <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>)
               ) @ #vk )
          case ORevealSessionKey_case_1
          SOLVED // trace found
        qed
      qed
    qed
  qed
qed

lemma attacker_works_learn_sessionkey_modeKEMTLS_PDK_SAUTH_stage2:
  exists-trace
  "∃ tid sk #t1 #t2 #t3 #t4.
    (((ProtocolMode( tid, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
      (Accept( tid, '2' ) @ #t2)) ∧
     (SK( tid, '2', sk ) @ #t3)) ∧
    (K( sk ) @ #t4)"
/*
guarded formula characterizing all satisfying traces:
"∃ tid sk #t1 #t2 #t3 #t4.
  (ProtocolMode( tid, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (Accept( tid, '2' ) @ #t2) ∧
  (SK( tid, '2', sk ) @ #t3) ∧
  (K( sk ) @ #t4)"
*/
simplify
solve( ProtocolMode( tid, '2', '2', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ServerAction1
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( Accept( ~tid, '2' ) @ #t2 )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SK( ~tid, '2', sk ) @ #t3 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( splitEqs(0) )
          case split_case_1
          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                    KEM_s_Decaps(ct_S, ~sk_P)),
                                                        'derived', '0'),
                                             KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                 'c_hs_traffic',
                                 <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                 ) @ #vk )
            case ORevealSessionKey
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

lemma attacker_works_learn_sessionkey_modeKEMTLS_PDK_SAUTH_stage3:
  exists-trace
  "∃ tid sk #t1 #t2 #t3 #t4.
    (((ProtocolMode( tid, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
      (Accept( tid, '3' ) @ #t2)) ∧
     (SK( tid, '3', sk ) @ #t3)) ∧
    (K( sk ) @ #t4)"
/*
guarded formula characterizing all satisfying traces:
"∃ tid sk #t1 #t2 #t3 #t4.
  (ProtocolMode( tid, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (Accept( tid, '3' ) @ #t2) ∧
  (SK( tid, '3', sk ) @ #t3) ∧
  (K( sk ) @ #t4)"
*/
simplify
solve( ProtocolMode( tid, '3', '3', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ServerAction1
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( Accept( ~tid, '3' ) @ #t2 )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SK( ~tid, '3', sk ) @ #t3 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( splitEqs(0) )
          case split_case_1
          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                    KEM_s_Decaps(ct_S, ~sk_P)),
                                                        'derived', '0'),
                                             KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                 's_hs_traffic',
                                 <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                 ) @ #vk )
            case ORevealSessionKey
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

lemma attacker_works_learn_sessionkey_modeKEMTLS_PDK_SAUTH_stage4:
  exists-trace
  "∃ tid sk #t1 #t2 #t3 #t4.
    (((ProtocolMode( tid, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
      (Accept( tid, '4' ) @ #t2)) ∧
     (SK( tid, '4', sk ) @ #t3)) ∧
    (K( sk ) @ #t4)"
/*
guarded formula characterizing all satisfying traces:
"∃ tid sk #t1 #t2 #t3 #t4.
  (ProtocolMode( tid, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (Accept( tid, '4' ) @ #t2) ∧
  (SK( tid, '4', sk ) @ #t3) ∧
  (K( sk ) @ #t4)"
*/
simplify
solve( ProtocolMode( tid, '4', '4', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ServerAction1
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( Accept( ~tid, '4' ) @ #t2 )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SK( ~tid, '4', sk ) @ #t3 )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( splitEqs(0) )
          case split_case_1
          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Decaps(ct_S,
                                                                                                        ~sk_P)),
                                                                               'derived', '0'),
                                                                    KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                        'derived', '0'),
                                             '0'),
                                 's_ap_traffic',
                                 <<pk_e, r_c, ct_S>, <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                                  HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Decaps(ct_S,
                                                                                                                         ~sk_P)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Encaps_ss(pk_e,
                                                                                                     ~coins_e)),
                                                                         'derived', '0'),
                                                              '0'),
                                                  's_finished', '0'),
                                       <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                                 >)
                 ) @ #vk )
            case ORevealSessionKey
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

lemma attacker_works_learn_sessionkey_modeKEMTLS_PDK_SAUTH_stage5:
  exists-trace
  "∃ tid sk #t1 #t2 #t3 #t4.
    (((ProtocolMode( tid, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
      (Accept( tid, '5' ) @ #t2)) ∧
     (SK( tid, '5', sk ) @ #t3)) ∧
    (K( sk ) @ #t4)"
/*
guarded formula characterizing all satisfying traces:
"∃ tid sk #t1 #t2 #t3 #t4.
  (ProtocolMode( tid, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1) ∧
  (Accept( tid, '5' ) @ #t2) ∧
  (SK( tid, '5', sk ) @ #t3) ∧
  (K( sk ) @ #t4)"
*/
simplify
solve( ProtocolMode( tid, '5', '5', 'KEMTLS_PDK_SAUTH' ) @ #t1 )
  case KEMTLS_PDK_SAUTH_ClientAction2_part2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t1 )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #t1 )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( Accept( ~tid, '5' ) @ #t2 )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t2 )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #t2 )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( SK( ~tid, '5', sk ) @ #t3 )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t3 )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                       ) ▶₁ #t3 )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( splitEqs(1) )
                    case split_case_2
                    solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   x)),
                                                                       'derived', '0'),
                                                            '0'),
                                                's_finished', '0'),
                                     <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                           ) @ #vk.1 )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)),
                                                                    'derived', '0'),
                                                         '0'),
                                             'c_ap_traffic',
                                             <
                                              <KEM_e_PK(~sk_e), ~r_c, 
                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                              <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>, 
                                              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e)),
                                                                                     'derived', '0'),
                                                                          '0'),
                                                              's_finished', '0'),
                                                   <
                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                    KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>), 
                                              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e)),
                                                                                     'derived', '0'),
                                                                          '0'),
                                                              'c_finished', '0'),
                                                   <
                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                    <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>, 
                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                              ~coins_S)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                       ~coins_e)),
                                                                                           'derived', '0'),
                                                                                '0'),
                                                                    's_finished', '0'),
                                                         <
                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                                   >)
                                             >)
                             ) @ #vk.1 )
                        case ORevealSessionKey_case_1
                        solve( !KU( ~r_c ) @ #vk.8 )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( !KU( ~r_s ) @ #vk.5 )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.7 )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( !KU( KEM_e_PK(~sk_e) ) @ #vk.8 )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.9 )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  SOLVED // trace found
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma sk_security_nofs_client:
  all-traces
  "∀ tid_owner i cid_i sid_i sk_i pid #taccept #tcid #tsid #tsk #trole
     #tpeer #tfs.
    ((((((((((Accept( tid_owner, i ) @ #taccept) ∧
             (CID( tid_owner, i, cid_i ) @ #tcid)) ∧
            (SID( tid_owner, i, sid_i ) @ #tsid)) ∧
           (SK( tid_owner, i, sk_i ) @ #tsk)) ∧
          (Role( tid_owner, 'client' ) @ #trole)) ∧
         (Peer( tid_owner, pid ) @ #tpeer)) ∧
        (FS( tid_owner, i, i, 'nofs' ) @ #tfs)) ∧
       (¬(∃ #t. RevealedSessionKey( tid_owner, i ) @ #t))) ∧
      (¬(∃ tid_partner #tt1 #tt2.
          ((¬(tid_owner = tid_partner)) ∧ (SID( tid_partner, i, sid_i ) @ #tt1)) ∧
          (RevealedSessionKey( tid_partner, i ) @ #tt2)))) ∧
     (¬(∃ keytype #tcorrupt. CorruptedLTK( pid, keytype ) @ #tcorrupt))) ⇒
    (¬(∃ #t. !KU( sk_i ) @ #t))"
/*
guarded formula characterizing all counter-examples:
"∃ tid_owner i cid_i sid_i sk_i pid #taccept #tcid #tsid #tsk #trole
   #tpeer #tfs.
  (Accept( tid_owner, i ) @ #taccept) ∧
  (CID( tid_owner, i, cid_i ) @ #tcid) ∧
  (SID( tid_owner, i, sid_i ) @ #tsid) ∧
  (SK( tid_owner, i, sk_i ) @ #tsk) ∧
  (Role( tid_owner, 'client' ) @ #trole) ∧
  (Peer( tid_owner, pid ) @ #tpeer) ∧
  (FS( tid_owner, i, i, 'nofs' ) @ #tfs)
 ∧
  (∀ #t. (RevealedSessionKey( tid_owner, i ) @ #t) ⇒ ⊥) ∧
  (∀ tid_partner #tt1 #tt2.
    (SID( tid_partner, i, sid_i ) @ #tt1) ∧
    (RevealedSessionKey( tid_partner, i ) @ #tt2)
   ⇒
    tid_owner = tid_partner) ∧
  (∀ keytype #tcorrupt. (CorruptedLTK( pid, keytype ) @ #tcorrupt) ⇒ ⊥) ∧
  (∃ #t. (!KU( sk_i ) @ #t))"
*/
simplify
solve( Accept( tid_owner, i ) @ #taccept )
  case KEMTLS_PDK_SAUTH_ClientAction1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '1', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( SID( ~tid, '1', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( SK( ~tid, '1', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( Role( ~tid, 'client' ) @ #trole )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( Peer( ~tid, pid ) @ #tpeer )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( FS( ~tid, '1', '1', 'nofs' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                       'early_data',
                                       <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>)
                       ) @ #t )
                  case ORevealSessionKey
                  by contradiction /* from formulas */
                next
                  case c_HKDFExpand
                  solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                         ) @ #vk )
                    case c_HKDFExtract
                    solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.8 )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( !KU( ~sk_P ) @ #vk.9 )
                        case OCorruptLTK
                        by contradiction /* from formulas */
                      qed
                    next
                      case c_KEM_s_Encaps_ss
                      by solve( !KU( ~coins_S ) @ #vk.10 )
                    qed
                  qed
                qed
              qed
            next
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpeer )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e, r_s>
                       ) ▶₁ #tpeer )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( FS( ~tid, '1', '1', 'nofs' ) @ #tfs )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( splitEqs(6) )
                      case split_case_1
                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                             'early_data',
                                             <KEM_e_PK(~sk_e), ~r_c, 
                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>)
                             ) @ #t )
                        case ORevealSessionKey
                        by contradiction /* from formulas */
                      next
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                               ) @ #vk.4 )
                          case c_HKDFExtract
                          solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Decaps(ct_e,
                                                                                                      ~sk_e)),
                                                                             'derived', '0'),
                                                                  '0'),
                                                      's_finished', '0'),
                                           <
                                            <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                            >, 
                                            ct_e, r_s>)
                                 ) @ #vk.1 )
                            case c_HMAC
                            solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.13 )
                              case KEMTLS_PDK_SAUTH_ClientAction1
                              solve( !KU( ~sk_P ) @ #vk.15 )
                                case OCorruptLTK
                                by contradiction /* from formulas */
                              qed
                            next
                              case c_KEM_s_Encaps_ss
                              by solve( !KU( ~coins_S ) @ #vk.16 )
                            qed
                          qed
                        qed
                      qed
                    next
                      case split_case_2
                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                             'early_data',
                                             <KEM_e_PK(~sk_e), ~r_c, 
                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>)
                             ) @ #t )
                        case ORevealSessionKey
                        by contradiction /* from formulas */
                      next
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                               ) @ #vk.4 )
                          case c_HKDFExtract
                          solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         x)),
                                                                             'derived', '0'),
                                                                  '0'),
                                                      's_finished', '0'),
                                           <
                                            <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                            >, 
                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                 ) @ #vk.1 )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.12 )
                              case KEMTLS_PDK_SAUTH_ClientAction1
                              solve( !KU( ~sk_P ) @ #vk.13 )
                                case OCorruptLTK
                                by contradiction /* from formulas */
                              qed
                            next
                              case c_KEM_s_Encaps_ss
                              by solve( !KU( ~coins_S ) @ #vk.14 )
                            qed
                          next
                            case c_HMAC
                            solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.4 )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( splitEqs(9) )
                                case split_case_1
                                solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.14 )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( !KU( ~sk_P ) @ #vk.19 )
                                    case OCorruptLTK
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_KEM_s_Encaps_ss
                                  by solve( !KU( ~coins_S ) @ #vk.20 )
                                qed
                              next
                                case split_case_2
                                solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.14 )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( !KU( ~sk_P ) @ #vk.19 )
                                    case OCorruptLTK
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_KEM_s_Encaps_ss
                                  by solve( !KU( ~coins_S ) @ #vk.20 )
                                qed
                              qed
                            next
                              case c_KEM_e_Encaps_ct
                              solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.13 )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( !KU( ~sk_P ) @ #vk.16 )
                                  case OCorruptLTK
                                  by contradiction /* from formulas */
                                qed
                              next
                                case c_KEM_s_Encaps_ss
                                by solve( !KU( ~coins_S ) @ #vk.17 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                  <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( CID( ~tid, '2', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SID( ~tid, '2', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( SK( ~tid, '2', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        solve( Role( ~tid, 'client' ) @ #trole )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( Peer( ~tid, pid ) @ #tpeer )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            by solve( FS( ~tid, '2', '2', 'nofs' ) @ #tfs )
                          next
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpeer )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tpeer )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                by solve( FS( ~tid, '2', '2', 'nofs' ) @ #tfs )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                  <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( CID( ~tid, '3', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SID( ~tid, '3', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( SK( ~tid, '3', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        solve( Role( ~tid, 'client' ) @ #trole )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( Peer( ~tid, pid ) @ #tpeer )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            by solve( FS( ~tid, '3', '3', 'nofs' ) @ #tfs )
                          next
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpeer )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tpeer )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                by solve( FS( ~tid, '3', '3', 'nofs' ) @ #tfs )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( CID( ~tid, '4', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( SID( ~tid, '4', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( SK( ~tid, '4', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( Role( ~tid, 'client' ) @ #trole )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( Peer( ~tid, pid ) @ #tpeer )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            by solve( FS( ~tid, '4', '4', 'nofs' ) @ #tfs )
                          next
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpeer )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tpeer )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                by solve( FS( ~tid, '4', '4', 'nofs' ) @ #tfs )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( CID( ~tid, '5', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( SID( ~tid, '5', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( SK( ~tid, '5', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( Role( ~tid, 'client' ) @ #trole )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( Peer( ~tid, pid ) @ #tpeer )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            by solve( FS( ~tid, '5', '5', 'nofs' ) @ #tfs )
                          next
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpeer )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tpeer )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                by solve( FS( ~tid, '5', '5', 'nofs' ) @ #tfs )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction2
                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                ) ▶₁ #tsk )
                    qed
                  qed
                qed
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction2
              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                 <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                          ) ▶₁ #tsid )
              qed
            qed
          qed
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                    ) ▶₁ #tcid )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_1
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '1', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '1', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '1', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ServerAction1
          by solve( Role( ~tid, 'client' ) @ #trole )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_2
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '2', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                         <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '2', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                           <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '2', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          by solve( Role( ~tid, 'client' ) @ #trole )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_3
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '3', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                         <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '3', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                           <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '3', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          by solve( Role( ~tid, 'client' ) @ #trole )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_4
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '4', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part2
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                         <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '4', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '4', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          by solve( Role( ~tid, 'client' ) @ #trole )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction2
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( CID( ~tid, '5', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tcid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SID( ~tid, '5', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tsid )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction2
              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                              <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( SK( ~tid, '5', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                       <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                ) ▶₁ #tsk )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction2
                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                    <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        by solve( Role( ~tid, 'client' ) @ #trole )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma sk_security_nofs_server:
  all-traces
  "∀ tid_owner tid_cidpeer i cid_i sid_i sk_i owner pid #taccept #tcid
     #tpeerown #tcidpeer #tsid #tsk #trole #towner #tfs.
    (((((((((((((Accept( tid_owner, i ) @ #taccept) ∧
                (CID( tid_owner, i, cid_i ) @ #tcid)) ∧
               (SID( tid_owner, i, sid_i ) @ #tsid)) ∧
              (SK( tid_owner, i, sk_i ) @ #tsk)) ∧
             (Role( tid_owner, 'server' ) @ #trole)) ∧
            (Owner( tid_owner, owner ) @ #towner)) ∧
           (FS( tid_owner, i, i, 'nofs' ) @ #tfs)) ∧
          (¬(∃ #t. RevealedSessionKey( tid_owner, i ) @ #t))) ∧
         (¬(∃ tid_partner #tt1 #tt2.
             ((¬(tid_owner = tid_partner)) ∧ (SID( tid_partner, i, sid_i ) @ #tt1)) ∧
             (RevealedSessionKey( tid_partner, i ) @ #tt2)))) ∧
        (Owner( tid_cidpeer, pid ) @ #tpeerown)) ∧
       (¬(owner = pid))) ∧
      (CID( tid_cidpeer, i, cid_i ) @ #tcidpeer)) ∧
     (¬(∃ keytype #tcorrupt. CorruptedLTK( owner, keytype ) @ #tcorrupt))) ⇒
    (¬(∃ #t. !KU( sk_i ) @ #t))"
/*
guarded formula characterizing all counter-examples:
"∃ tid_owner tid_cidpeer i cid_i sid_i sk_i owner pid #taccept #tcid
   #tpeerown #tcidpeer #tsid #tsk #trole #towner #tfs.
  (Accept( tid_owner, i ) @ #taccept) ∧
  (CID( tid_owner, i, cid_i ) @ #tcid) ∧
  (SID( tid_owner, i, sid_i ) @ #tsid) ∧
  (SK( tid_owner, i, sk_i ) @ #tsk) ∧
  (Role( tid_owner, 'server' ) @ #trole) ∧
  (Owner( tid_owner, owner ) @ #towner) ∧
  (FS( tid_owner, i, i, 'nofs' ) @ #tfs) ∧
  (Owner( tid_cidpeer, pid ) @ #tpeerown) ∧
  (CID( tid_cidpeer, i, cid_i ) @ #tcidpeer)
 ∧
  (∀ #t. (RevealedSessionKey( tid_owner, i ) @ #t) ⇒ ⊥) ∧
  (∀ tid_partner #tt1 #tt2.
    (SID( tid_partner, i, sid_i ) @ #tt1) ∧
    (RevealedSessionKey( tid_partner, i ) @ #tt2)
   ⇒
    tid_owner = tid_partner) ∧
  (¬(owner = pid)) ∧
  (∀ keytype #tcorrupt. (CorruptedLTK( owner, keytype ) @ #tcorrupt) ⇒ ⊥) ∧
  (∃ #t. (!KU( sk_i ) @ #t))"
*/
simplify
solve( Accept( tid_owner, i ) @ #taccept )
  case KEMTLS_PDK_SAUTH_ClientAction1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '1', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( SID( ~tid, '1', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( SK( ~tid, '1', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction1
          by solve( Role( ~tid, 'server' ) @ #trole )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                  <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( CID( ~tid, '2', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SID( ~tid, '2', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( SK( ~tid, '2', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        by solve( Role( ~tid, 'server' ) @ #trole )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                  <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( CID( ~tid, '3', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SID( ~tid, '3', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( SK( ~tid, '3', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        by solve( Role( ~tid, 'server' ) @ #trole )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( CID( ~tid, '4', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( SID( ~tid, '4', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( SK( ~tid, '4', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        by solve( Role( ~tid, 'server' ) @ #trole )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( CID( ~tid, '5', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( SID( ~tid, '5', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( SK( ~tid, '5', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        by solve( Role( ~tid, 'server' ) @ #trole )
                      qed
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction2
                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                ) ▶₁ #tsk )
                    qed
                  qed
                qed
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction2
              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                 <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                          ) ▶₁ #tsid )
              qed
            qed
          qed
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                    ) ▶₁ #tcid )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_1
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '1', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '1', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '1', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( Role( ~tid, 'server' ) @ #trole )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, owner ) @ #towner )
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '1', '1', 'nofs' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Owner( tid_cidpeer, pid ) @ #tpeerown )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpeerown )
                    case KEMTLS_KEM_s_KeyGen
                    solve( CID( ~tid.1, '1', <'ETS', KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                           ) @ #tcidpeer )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                             'early_data',
                                             <KEM_e_PK(~sk_e), ~r_c, 
                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>)
                             ) @ #t )
                        case ORevealSessionKey
                        by contradiction /* from formulas */
                      next
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                               ) @ #vk.5 )
                          case c_HKDFExtract
                          solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.8 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( !KU( ~sk_P ) @ #vk.9 )
                              case OCorruptLTK
                              by contradiction /* from formulas */
                            qed
                          next
                            case c_KEM_s_Encaps_ss
                            by solve( !KU( ~coins_S ) @ #vk.10 )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tpeerown )
                    case KEMTLS_KEM_s_KeyGen
                    solve( CID( ~tid.1, '1', <'ETS', KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                           ) @ #tcidpeer )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_2
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '2', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                         <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '2', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                           <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '2', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( Role( ~tid, 'server' ) @ #trole )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, owner ) @ #towner )
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '2', '2', 'nofs' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_3
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '3', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                         <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '3', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                           <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '3', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( Role( ~tid, 'server' ) @ #trole )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, owner ) @ #towner )
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '3', '3', 'nofs' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_4
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '4', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part2
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                         <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '4', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '4', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( Role( ~tid, 'server' ) @ #trole )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Owner( ~tid, owner ) @ #towner )
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '4', '4', 'nofs' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction2
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( CID( ~tid, '5', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tcid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SID( ~tid, '5', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tsid )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction2
              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                              <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( SK( ~tid, '5', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                       <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                ) ▶₁ #tsk )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction2
                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                    <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        solve( Role( ~tid, 'server' ) @ #trole )
                          case KEMTLS_PDK_SAUTH_ServerAction1
                          solve( Owner( ~tid, owner ) @ #towner )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            by solve( FS( ~tid, '5', '5', 'nofs' ) @ #tfs )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma sk_security_wfs1:
  all-traces
  "∀ tid_owner i cid_i sid_i sk_i #taccept #tcid #tsid #tsk.
    (((((((Accept( tid_owner, i ) @ #taccept) ∧
          (CID( tid_owner, i, cid_i ) @ #tcid)) ∧
         (SID( tid_owner, i, sid_i ) @ #tsid)) ∧
        (SK( tid_owner, i, sk_i ) @ #tsk)) ∧
       (¬(∃ #t. RevealedSessionKey( tid_owner, i ) @ #t))) ∧
      (¬(∃ tid_partner #tt1 #tt2.
          ((¬(tid_owner = tid_partner)) ∧ (SID( tid_partner, i, sid_i ) @ #tt1)) ∧
          (RevealedSessionKey( tid_partner, i ) @ #tt2)))) ∧
     (∃ j #tfs #tacceptj.
       ((FS( tid_owner, i, j, 'wfs1' ) @ #tfs) ∧
        (Accept( tid_owner, j ) @ #tacceptj)) ∧
       (∃ tid_peer #tacceptjpeer #tcidpeer.
         ((¬(tid_owner = tid_peer)) ∧ (Accept( tid_peer, j ) @ #tacceptjpeer)) ∧
         (CID( tid_peer, i, cid_i ) @ #tcidpeer)))) ⇒
    (¬(∃ #t. !KU( sk_i ) @ #t))"
/*
guarded formula characterizing all counter-examples:
"∃ tid_owner i cid_i sid_i sk_i #taccept #tcid #tsid #tsk.
  (Accept( tid_owner, i ) @ #taccept) ∧
  (CID( tid_owner, i, cid_i ) @ #tcid) ∧
  (SID( tid_owner, i, sid_i ) @ #tsid) ∧
  (SK( tid_owner, i, sk_i ) @ #tsk)
 ∧
  (∀ #t. (RevealedSessionKey( tid_owner, i ) @ #t) ⇒ ⊥) ∧
  (∀ tid_partner #tt1 #tt2.
    (SID( tid_partner, i, sid_i ) @ #tt1) ∧
    (RevealedSessionKey( tid_partner, i ) @ #tt2)
   ⇒
    tid_owner = tid_partner) ∧
  (∃ j #tfs #tacceptj.
    (FS( tid_owner, i, j, 'wfs1' ) @ #tfs) ∧
    (Accept( tid_owner, j ) @ #tacceptj)
   ∧
    ∃ tid_peer #tacceptjpeer #tcidpeer.
     (Accept( tid_peer, j ) @ #tacceptjpeer) ∧
     (CID( tid_peer, i, cid_i ) @ #tcidpeer)
    ∧
     ¬(tid_owner = tid_peer)) ∧
  (∃ #t. (!KU( sk_i ) @ #t))"
*/
simplify
solve( Accept( tid_owner, i ) @ #taccept )
  case KEMTLS_PDK_SAUTH_ClientAction1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '1', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( SID( ~tid, '1', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( SK( ~tid, '1', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction1
          by solve( FS( ~tid, '1', j, 'wfs1' ) @ #tfs )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                  <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( CID( ~tid, '2', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SID( ~tid, '2', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( SK( ~tid, '2', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        solve( FS( ~tid, '2', j, 'wfs1' ) @ #tfs )
                          case KEMTLS_PDK_SAUTH_ServerAction2
                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tfs )
                            case KEMTLS_KEM_s_KeyGen
                            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                             <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                      ) ▶₁ #tfs )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                  <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction1
      solve( CID( ~tid, '3', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SID( ~tid, '3', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  solve( SK( ~tid, '3', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction1
                        solve( FS( ~tid, '3', j, 'wfs1' ) @ #tfs )
                          case KEMTLS_PDK_SAUTH_ServerAction2
                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tfs )
                            case KEMTLS_KEM_s_KeyGen
                            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                             <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                      ) ▶₁ #tfs )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( CID( ~tid, '4', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( SID( ~tid, '4', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( SK( ~tid, '4', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( FS( ~tid, '4', j, 'wfs1' ) @ #tfs )
                          case KEMTLS_PDK_SAUTH_ServerAction2
                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tfs )
                            case KEMTLS_KEM_s_KeyGen
                            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                             <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                      ) ▶₁ #tfs )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
  solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( CID( ~tid, '5', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( SID( ~tid, '5', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( SK( ~tid, '5', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( FS( ~tid, '5', j, 'wfs1' ) @ #tfs )
                          case KEMTLS_PDK_SAUTH_ServerAction2
                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tfs )
                            case KEMTLS_KEM_s_KeyGen
                            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                             <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                      ) ▶₁ #tfs )
                          qed
                        qed
                      qed
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction2
                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                ) ▶₁ #tsk )
                    qed
                  qed
                qed
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction2
              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                 <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                          ) ▶₁ #tsid )
              qed
            qed
          qed
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                    ) ▶₁ #tcid )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_1
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '1', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '1', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '1', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ServerAction1
          by solve( FS( ~tid, '1', j, 'wfs1' ) @ #tfs )
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_2
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '2', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                         <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '2', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                           <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '2', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( FS( ~tid, '2', j, 'wfs1' ) @ #tfs )
            case KEMTLS_PDK_SAUTH_ServerAction1_case_1
            solve( Accept( ~tid, '2' ) @ #tacceptj )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tacceptj )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Accept( tid_peer, '2' ) @ #tacceptjpeer )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                         ) ▶₁ #tacceptjpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( CID( ~tid.1, '2',
                                <'CHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                 KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                           ) @ #tcidpeer )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                               ) ▶₁ #tcidpeer )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 'c_hs_traffic',
                                                 <
                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                 ) @ #t )
                            case ORevealSessionKey
                            by contradiction /* from formulas */
                          next
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.9 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.11 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.13 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.13 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.17 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( CID( ~tid.1, '2',
                              <'CHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                               KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                         ) @ #tcidpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                       <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                ) ▶₁ #tcidpeer )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1_case_2
            solve( Accept( ~tid, '3' ) @ #tacceptj )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tacceptj )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Accept( tid_peer, '3' ) @ #tacceptjpeer )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                         ) ▶₁ #tacceptjpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( CID( ~tid.1, '2',
                                <'CHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                 KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                           ) @ #tcidpeer )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                               ) ▶₁ #tcidpeer )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 'c_hs_traffic',
                                                 <
                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                 ) @ #t )
                            case ORevealSessionKey
                            by contradiction /* from formulas */
                          next
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.9 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.11 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.13 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.13 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.17 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( CID( ~tid.1, '2',
                              <'CHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                               KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                         ) @ #tcidpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                       <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                ) ▶₁ #tcidpeer )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1_case_3
            solve( Accept( ~tid, '4' ) @ #tacceptj )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tacceptj )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                         ) ▶₁ #tacceptjpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( CID( ~tid.1, '2',
                                <'CHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                 KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                           ) @ #tcidpeer )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                               ) ▶₁ #tcidpeer )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 'c_hs_traffic',
                                                 <
                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                 ) @ #t )
                            case ORevealSessionKey
                            by contradiction /* from formulas */
                          next
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.10 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.12 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.14 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.14 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.18 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.18 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( CID( ~tid.1, '2',
                              <'CHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                               KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                         ) @ #tcidpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                       <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                ) ▶₁ #tcidpeer )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tfs )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                            <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                     ) ▶₁ #tfs )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Accept( ~tid, '5' ) @ #tacceptj )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                     <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                              ) ▶₁ #tacceptj )
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                  <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                           ) ▶₁ #tacceptj )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tacceptjpeer )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( CID( ~tid.1, '2',
                                        <'CHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                         KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                   ) @ #tcidpeer )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                              <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                       ) ▶₁ #tcidpeer )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)),
                                                                                'derived', '0'),
                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                     ~coins_e)),
                                                         'c_hs_traffic',
                                                         <
                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                         ) @ #t )
                                    case ORevealSessionKey
                                    by contradiction /* from formulas */
                                  next
                                    case c_HKDFExpand
                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0'),
                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                           ) @ #vk.11 )
                                      case c_HKDFExtract
                                      solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                            ~coins_S)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                     ~coins_e)),
                                                                                         'derived', '0'),
                                                                              '0'),
                                                                  'c_finished', '0'),
                                                       <
                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                        <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>, SF
                                                       >)
                                             ) @ #vk.7 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0')
                                               ) @ #vk.13 )
                                          case c_HKDFExpand
                                          solve( !KU( HKDFExtract('0',
                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                                 ) @ #vk.15 )
                                            case c_HKDFExtract
                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                   ) @ #vk.15 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              by solve( !KU( ~sk_e ) @ #vk.19 )
                                            next
                                              case c_KEM_e_Encaps_ss
                                              by solve( !KU( ~coins_e ) @ #vk.19 )
                                            qed
                                          qed
                                        qed
                                      next
                                        case c_HMAC
                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0')
                                               ) @ #vk.15 )
                                          case c_HKDFExpand
                                          solve( !KU( HKDFExtract('0',
                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                                 ) @ #vk.19 )
                                            case c_HKDFExtract
                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                   ) @ #vk.17 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              by solve( !KU( ~sk_e ) @ #vk.23 )
                                            next
                                              case c_KEM_e_Encaps_ss
                                              by solve( !KU( ~coins_e ) @ #vk.23 )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tacceptjpeer )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( CID( ~tid.1, '2',
                                        <'CHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                         KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                   ) @ #tcidpeer )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                case KEMTLS_KEM_s_KeyGen
                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                 <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                          ) ▶₁ #tcidpeer )
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_3
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '3', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part1
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                         <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '3', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                           <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '3', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( FS( ~tid, '3', j, 'wfs1' ) @ #tfs )
            case KEMTLS_PDK_SAUTH_ServerAction1_case_1
            solve( Accept( ~tid, '3' ) @ #tacceptj )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tacceptj )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Accept( tid_peer, '3' ) @ #tacceptjpeer )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                         ) ▶₁ #tacceptjpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( CID( ~tid.1, '3',
                                <'SHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                 KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                           ) @ #tcidpeer )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                               ) ▶₁ #tcidpeer )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 's_hs_traffic',
                                                 <
                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                 ) @ #t )
                            case ORevealSessionKey
                            by contradiction /* from formulas */
                          next
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.9 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.11 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.13 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.13 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.17 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.17 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( CID( ~tid.1, '3',
                              <'SHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                               KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                         ) @ #tcidpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                       <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                ) ▶₁ #tcidpeer )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1_case_2
            solve( Accept( ~tid, '4' ) @ #tacceptj )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tacceptj )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                         ) ▶₁ #tacceptjpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( CID( ~tid.1, '3',
                                <'SHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                 KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                           ) @ #tcidpeer )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                               ) ▶₁ #tcidpeer )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 's_hs_traffic',
                                                 <
                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                 ) @ #t )
                            case ORevealSessionKey
                            by contradiction /* from formulas */
                          next
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.10 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.12 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.14 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.14 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.18 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.18 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( CID( ~tid.1, '3',
                              <'SHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                               KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                         ) @ #tcidpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                       <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                ) ▶₁ #tcidpeer )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tfs )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                            <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                     ) ▶₁ #tfs )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Accept( ~tid, '5' ) @ #tacceptj )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                     <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                              ) ▶₁ #tacceptj )
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                  <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                           ) ▶₁ #tacceptj )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tacceptjpeer )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( CID( ~tid.1, '3',
                                        <'SHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                         KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                   ) @ #tcidpeer )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                              <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                       ) ▶₁ #tcidpeer )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)),
                                                                                'derived', '0'),
                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                     ~coins_e)),
                                                         's_hs_traffic',
                                                         <
                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                         ) @ #t )
                                    case ORevealSessionKey
                                    by contradiction /* from formulas */
                                  next
                                    case c_HKDFExpand
                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0'),
                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                           ) @ #vk.11 )
                                      case c_HKDFExtract
                                      solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                            ~coins_S)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                     ~coins_e)),
                                                                                         'derived', '0'),
                                                                              '0'),
                                                                  'c_finished', '0'),
                                                       <
                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                        <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>, SF
                                                       >)
                                             ) @ #vk.7 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0')
                                               ) @ #vk.13 )
                                          case c_HKDFExpand
                                          solve( !KU( HKDFExtract('0',
                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                                 ) @ #vk.15 )
                                            case c_HKDFExtract
                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                   ) @ #vk.15 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              by solve( !KU( ~sk_e ) @ #vk.19 )
                                            next
                                              case c_KEM_e_Encaps_ss
                                              by solve( !KU( ~coins_e ) @ #vk.19 )
                                            qed
                                          qed
                                        qed
                                      next
                                        case c_HMAC
                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0')
                                               ) @ #vk.15 )
                                          case c_HKDFExpand
                                          solve( !KU( HKDFExtract('0',
                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                                 ) @ #vk.19 )
                                            case c_HKDFExtract
                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                   ) @ #vk.17 )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              by solve( !KU( ~sk_e ) @ #vk.23 )
                                            next
                                              case c_KEM_e_Encaps_ss
                                              by solve( !KU( ~coins_e ) @ #vk.23 )
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tacceptjpeer )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( CID( ~tid.1, '3',
                                        <'SHTS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                         KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                   ) @ #tcidpeer )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                case KEMTLS_KEM_s_KeyGen
                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                 <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
                                          ) ▶₁ #tcidpeer )
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction1_case_4
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( CID( ~tid, '4', cid_i ) @ #tcid )
      case KEMTLS_PDK_SAUTH_ClientAction2_part2
      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
        case KEMTLS_KEM_s_KeyGen
        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                         <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                  ) ▶₁ #tcid )
      qed
    next
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( SID( ~tid, '4', sid_i ) @ #tsid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tsid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( SK( ~tid, '4', sk_i ) @ #tsk )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tsk )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( FS( ~tid, '4', j, 'wfs1' ) @ #tfs )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( Accept( ~tid, '4' ) @ #tacceptj )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tacceptj )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                         ) ▶₁ #tacceptjpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( CID( ~tid.1, '4',
                                <'SATS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                 <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           z),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(pk_e,
                                                                                                    ~coins_e)),
                                                                        'derived', '0'),
                                                             '0'),
                                                 's_finished', '0'),
                                      <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                                >
                           ) @ #tcidpeer )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                      HKDFExtract(HKDFExpand(HKDFExtract('0', z), 'derived', '0'),
                                                  KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                      <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), 
                                       ~r_s>
                               ) ▶₁ #tcidpeer )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e)),
                                                                        'derived', '0'),
                                                             '0'),
                                                 's_ap_traffic',
                                                 <
                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                  <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>, 
                                                  HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                            ~coins_S)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                     ~coins_e)),
                                                                                         'derived', '0'),
                                                                              '0'),
                                                                  's_finished', '0'),
                                                       <
                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                                 >)
                                 ) @ #t )
                            case ORevealSessionKey
                            by contradiction /* from formulas */
                          next
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)),
                                                                                      'derived', '0'),
                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                           ~coins_e)),
                                                               'derived', '0'),
                                                    '0')
                                   ) @ #vk.11 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S)),
                                                                            'derived', '0'),
                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                     'derived', '0')
                                     ) @ #vk.13 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)),
                                                                   'derived', '0'),
                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                       ) @ #vk.15 )
                                  case c_HKDFExtract
                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)),
                                                         'derived', '0')
                                         ) @ #vk.17 )
                                    case c_HKDFExpand
                                    solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                           ) @ #vk.19 )
                                      case c_HKDFExtract
                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.19 )
                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                        by solve( !KU( ~sk_e ) @ #vk.21 )
                                      next
                                        case c_KEM_e_Encaps_ss
                                        by solve( !KU( ~coins_e ) @ #vk.21 )
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                  case KEMTLS_KEM_s_KeyGen
                  solve( CID( ~tid.1, '4',
                              <'SATS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                               <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                         z),
                                                                                             'derived', '0'),
                                                                                  KEM_e_Encaps_ss(pk_e,
                                                                                                  ~coins_e)),
                                                                      'derived', '0'),
                                                           '0'),
                                               's_finished', '0'),
                                    <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                              >
                         ) @ #tcidpeer )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                       HKDFExtract(HKDFExpand(HKDFExtract('0', z), 'derived', '0'),
                                                   KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                       <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), 
                                        ~r_s>
                                ) ▶₁ #tcidpeer )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tfs )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                            <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                     ) ▶₁ #tfs )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( Accept( ~tid, '5' ) @ #tacceptj )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                     <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                              ) ▶₁ #tacceptj )
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                  <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                           ) ▶₁ #tacceptj )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tacceptjpeer )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( CID( ~tid.1, '4',
                                        <'SATS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                         <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                   z),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            KEM_e_Encaps_ss(pk_e,
                                                                                                            ~coins_e)),
                                                                                'derived', '0'),
                                                                     '0'),
                                                         's_finished', '0'),
                                              <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                                        >
                                   ) @ #tcidpeer )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                              HKDFExtract(HKDFExpand(HKDFExtract('0', z), 'derived', '0'),
                                                          KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                              <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                               KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                       ) ▶₁ #tcidpeer )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                   ~coins_S)),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e)),
                                                                                'derived', '0'),
                                                                     '0'),
                                                         's_ap_traffic',
                                                         <
                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                          <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>, 
                                                          HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             ~coins_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), 
                                                                ~r_s>)
                                                         >)
                                         ) @ #t )
                                    case ORevealSessionKey
                                    by contradiction /* from formulas */
                                  next
                                    case c_HKDFExpand
                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'derived', '0'),
                                                            '0')
                                           ) @ #vk.12 )
                                      case c_HKDFExtract
                                      solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                            ~coins_S)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                     ~coins_e)),
                                                                                         'derived', '0'),
                                                                              '0'),
                                                                  'c_finished', '0'),
                                                       <
                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                        <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>, SF
                                                       >)
                                             ) @ #vk.7 )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)),
                                                                                      'derived', '0'),
                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                           ~coins_e)),
                                                               'derived', '0')
                                               ) @ #vk.14 )
                                          case c_HKDFExpand
                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0'),
                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                                 ) @ #vk.16 )
                                            case c_HKDFExtract
                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)),
                                                                   'derived', '0')
                                                   ) @ #vk.18 )
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract('0',
                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                      ~coins_S))
                                                     ) @ #vk.20 )
                                                case c_HKDFExtract
                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                       ) @ #vk.20 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  by solve( !KU( ~sk_e ) @ #vk.22 )
                                                next
                                                  case c_KEM_e_Encaps_ss
                                                  by solve( !KU( ~coins_e ) @ #vk.22 )
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case c_HMAC
                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                  ~coins_S)),
                                                                                      'derived', '0'),
                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                           ~coins_e)),
                                                               'derived', '0')
                                               ) @ #vk.16 )
                                          case c_HKDFExpand
                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0'),
                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                                 ) @ #vk.20 )
                                            case c_HKDFExtract
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   'c_finished', '0')
                                                   ) @ #vk.19 )
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)),
                                                                     'derived', '0')
                                                     ) @ #vk.22 )
                                                case c_HKDFExpand
                                                solve( !KU( HKDFExtract('0',
                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                        ~coins_S))
                                                       ) @ #vk.25 )
                                                  case c_HKDFExtract
                                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                         ) @ #vk.24 )
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    by solve( !KU( ~sk_e ) @ #vk.27 )
                                                  next
                                                    case c_KEM_e_Encaps_ss
                                                    by solve( !KU( ~coins_e ) @ #vk.27 )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tacceptjpeer )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( CID( ~tid.1, '4',
                                        <'SATS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                         <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, 
                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                   z),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            KEM_e_Encaps_ss(pk_e,
                                                                                                            ~coins_e)),
                                                                                'derived', '0'),
                                                                     '0'),
                                                         's_finished', '0'),
                                              <<pk_e, r_c, ct_S>, KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>)
                                        >
                                   ) @ #tcidpeer )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                case KEMTLS_KEM_s_KeyGen
                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                 HKDFExtract(HKDFExpand(HKDFExtract('0', z), 'derived', '0'),
                                                             KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                 <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                                  KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                          ) ▶₁ #tcidpeer )
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              by contradiction /* from formulas */
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case KEMTLS_PDK_SAUTH_ServerAction2
  solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #taccept )
    case KEMTLS_KEM_s_KeyGen
    solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                  <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
           ) ▶₁ #taccept )
      case KEMTLS_PDK_SAUTH_ServerAction1
      solve( CID( ~tid, '5', cid_i ) @ #tcid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tcid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction2
        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                 ) ▶₁ #tcid )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SID( ~tid, '5', sid_i ) @ #tsid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tsid )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction2
              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                case KEMTLS_KEM_s_KeyGen
                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                              <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                       ) ▶₁ #tsid )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( SK( ~tid, '5', sk_i ) @ #tsk )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                       <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                ) ▶₁ #tsk )
                    qed
                  next
                    case KEMTLS_PDK_SAUTH_ServerAction2
                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                      case KEMTLS_KEM_s_KeyGen
                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                    <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                             ) ▶₁ #tsk )
                        case KEMTLS_PDK_SAUTH_ServerAction1
                        solve( FS( ~tid, '5', j, 'wfs1' ) @ #tfs )
                          case KEMTLS_PDK_SAUTH_ServerAction2
                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tfs )
                            case KEMTLS_KEM_s_KeyGen
                            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                          <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                   ) ▶₁ #tfs )
                              case KEMTLS_PDK_SAUTH_ServerAction1
                              solve( Accept( ~tid, '5' ) @ #tacceptj )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                  case KEMTLS_KEM_s_KeyGen
                                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                            ) ▶₁ #tacceptj )
                                qed
                              next
                                case KEMTLS_PDK_SAUTH_ServerAction2
                                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                  case KEMTLS_KEM_s_KeyGen
                                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                         ) ▶₁ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                        case KEMTLS_KEM_s_KeyGen
                                        solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                      <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1
                                                      >
                                               ) ▶₁ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                          solve( CID( ~tid.1, '5',
                                                      <'CATS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                                       <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, SF, 
                                                       HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 z),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(pk_e,
                                                                                                                          ~coins_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       'c_finished', '0'),
                                                            <<pk_e, r_c, ct_S>, 
                                                             <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, SF>)
                                                      >
                                                 ) @ #tcidpeer )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                            solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                              case KEMTLS_KEM_s_KeyGen
                                              solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                            HKDFExtract(HKDFExpand(HKDFExtract('0', z),
                                                                                   'derived', '0'),
                                                                        KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                            <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                                             KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                                     ) ▶₁ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                          ~coins_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       'c_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <
                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                         ~coins_e), 
                                                                         ~r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           ~coins_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                              ~coins_e), 
                                                                              ~r_s>), 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           ~coins_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        'c_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              <
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>, 
                                                                              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                        ~coins_S)),
                                                                                                                                            'derived',
                                                                                                                                            '0'),
                                                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                 ~coins_e)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          '0'),
                                                                                              's_finished',
                                                                                              '0'),
                                                                                   <
                                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)
                                                                                    >, 
                                                                                    KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e), 
                                                                                    ~r_s>)
                                                                             >)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.13 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e)),
                                                                           'derived', '0')
                                                           ) @ #vk.15 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e))
                                                             ) @ #vk.17 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0')
                                                               ) @ #vk.19 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S))
                                                                 ) @ #vk.21 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e)
                                                                   ) @ #vk.21 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              by solve( !KU( ~sk_e ) @ #vk.23 )
                                                            next
                                                              case c_KEM_e_Encaps_ss
                                                              by solve( !KU( ~coins_e ) @ #vk.23 )
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          next
                                            case KEMTLS_PDK_SAUTH_ServerAction2
                                            solve( !Ltk( $S.2, KEM_s_PK(~sk_P), sk_S, 'KEM_s' ) ▶₀ #tcidpeer )
                                              case KEMTLS_KEM_s_KeyGen
                                              by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                               <MS, 
                                                                HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     z),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(pk_e,
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           'c_finished', '0')
                                                               >,
                                                               <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                                                KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                                        ) ▶₁ #tcidpeer )
                                            qed
                                          qed
                                        qed
                                      qed
                                    next
                                      case KEMTLS_PDK_SAUTH_ServerAction2
                                      solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                        case KEMTLS_KEM_s_KeyGen
                                        solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                      <MS, fk_c>,
                                                      <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1
                                                      >
                                               ) ▶₁ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( CID( ~tid.1, '5',
                                                      <'CATS', KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                                       <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, SF, 
                                                       HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 z),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(pk_e,
                                                                                                                          ~coins_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       'c_finished', '0'),
                                                            <<pk_e, r_c, ct_S>, 
                                                             <KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>, SF>)
                                                      >
                                                 ) @ #tcidpeer )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                            solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                              case KEMTLS_KEM_s_KeyGen
                                              by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                               'ClientAction2_part1',
                                                               HKDFExtract(HKDFExpand(HKDFExtract('0', z),
                                                                                      'derived', '0'),
                                                                           KEM_e_Encaps_ss(pk_e, ~coins_e)),
                                                               <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                                                KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                                        ) ▶₁ #tcidpeer )
                                            qed
                                          next
                                            case KEMTLS_PDK_SAUTH_ServerAction2
                                            solve( !Ltk( $S.2, KEM_s_PK(~sk_P), sk_S, 'KEM_s' ) ▶₀ #tcidpeer )
                                              case KEMTLS_KEM_s_KeyGen
                                              solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                            <MS, 
                                                             HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                  z),
                                                                                                                      'derived',
                                                                                                                      '0'),
                                                                                                           KEM_e_Encaps_ss(pk_e,
                                                                                                                           ~coins_e)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    '0'),
                                                                        'c_finished', '0')
                                                            >,
                                                            <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, 
                                                             KEM_e_Encaps_ct(pk_e, ~coins_e), ~r_s>
                                                     ) ▶₁ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                by contradiction /* from formulas */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma sk_security_wfs2:
  all-traces
  "∀ tid_owner pid i cid_i sid_i sk_i #taccept #tpid #tcid #tsid #tsk.
    ((((((((Accept( tid_owner, i ) @ #taccept) ∧
           (Peer( tid_owner, pid ) @ #tpid)) ∧
          (CID( tid_owner, i, cid_i ) @ #tcid)) ∧
         (SID( tid_owner, i, sid_i ) @ #tsid)) ∧
        (SK( tid_owner, i, sk_i ) @ #tsk)) ∧
       (¬(∃ #t. RevealedSessionKey( tid_owner, i ) @ #t))) ∧
      (¬(∃ tid_partner #tt1 #tt2.
          ((¬(tid_owner = tid_partner)) ∧ (SID( tid_partner, i, sid_i ) @ #tt1)) ∧
          (RevealedSessionKey( tid_partner, i ) @ #tt2)))) ∧
     (∃ j #tfs #tacceptj.
       ((FS( tid_owner, i, j, 'wfs2' ) @ #tfs) ∧
        (Accept( tid_owner, j ) @ #tacceptj)) ∧
       ((∃ tid_peer #tacceptjpeer #tcidpeer.
          ((¬(tid_owner = tid_peer)) ∧ (Accept( tid_peer, j ) @ #tacceptjpeer)) ∧
          (CID( tid_peer, i, cid_i ) @ #tcidpeer)) ∨
        (¬(∃ keytype #tcorrupt. CorruptedLTK( pid, keytype ) @ #tcorrupt))))) ⇒
    (¬(∃ #t. !KU( sk_i ) @ #t))"
/*
guarded formula characterizing all counter-examples:
"∃ tid_owner pid i cid_i sid_i sk_i #taccept #tpid #tcid #tsid #tsk.
  (Accept( tid_owner, i ) @ #taccept) ∧
  (Peer( tid_owner, pid ) @ #tpid) ∧
  (CID( tid_owner, i, cid_i ) @ #tcid) ∧
  (SID( tid_owner, i, sid_i ) @ #tsid) ∧
  (SK( tid_owner, i, sk_i ) @ #tsk)
 ∧
  (∀ #t. (RevealedSessionKey( tid_owner, i ) @ #t) ⇒ ⊥) ∧
  (∀ tid_partner #tt1 #tt2.
    (SID( tid_partner, i, sid_i ) @ #tt1) ∧
    (RevealedSessionKey( tid_partner, i ) @ #tt2)
   ⇒
    tid_owner = tid_partner) ∧
  (∃ j #tfs #tacceptj.
    (FS( tid_owner, i, j, 'wfs2' ) @ #tfs) ∧
    (Accept( tid_owner, j ) @ #tacceptj)
   ∧
    ((∃ tid_peer #tacceptjpeer #tcidpeer.
       (Accept( tid_peer, j ) @ #tacceptjpeer) ∧
       (CID( tid_peer, i, cid_i ) @ #tcidpeer)
      ∧
       ¬(tid_owner = tid_peer)) ∨
     (∀ keytype #tcorrupt. (CorruptedLTK( pid, keytype ) @ #tcorrupt) ⇒ ⊥))) ∧
  (∃ #t. (!KU( sk_i ) @ #t))"
*/
simplify
solve( (∃ tid_peer #tacceptjpeer #tcidpeer.
         (Accept( tid_peer, j ) @ #tacceptjpeer) ∧
         (CID( tid_peer, i, cid_i ) @ #tcidpeer)
        ∧
         ¬(tid_owner = tid_peer))  ∥
       (∀ keytype #tcorrupt. (CorruptedLTK( pid, keytype ) @ #tcorrupt) ⇒ ⊥) )
  case case_1
  solve( Accept( tid_owner, i ) @ #taccept )
    case KEMTLS_PDK_SAUTH_ClientAction1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( CID( ~tid, '1', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( SID( ~tid, '1', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SK( ~tid, '1', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction1
              by solve( FS( ~tid, '1', j, 'wfs2' ) @ #tfs )
            qed
          qed
        qed
      next
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e, r_s>
                 ) ▶₁ #tpid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( CID( ~tid, '1', cid_i ) @ #tcid )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( SID( ~tid, '1', sid_i ) @ #tsid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SK( ~tid, '1', sk_i ) @ #tsk )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  by solve( FS( ~tid, '1', j, 'wfs2' ) @ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                    <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '2', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SID( ~tid, '2', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( SK( ~tid, '2', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( FS( ~tid, '2', j, 'wfs2' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( Accept( ~tid, '2' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( Accept( tid_peer, '2' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                          <sk_e.1, dES>,
                                                          <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                              solve( CID( ~tid.1, '2',
                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.2, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( CID( ~tid.1, '2',
                                                        <'CHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #tcidpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                 <sk_e.1, dES>,
                                                                 <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                          ) ▶₁ #tcidpeer )
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)),
                                                                                            'derived', '0'),
                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e)),
                                                                     'c_hs_traffic',
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                      ~coins_e), 
                                                                      ~r_s>)
                                                     ) @ #t )
                                                case ORevealSessionKey
                                                by contradiction /* from formulas */
                                              next
                                                case c_HKDFExpand
                                                solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0'),
                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e))
                                                       ) @ #vk.9 )
                                                  case c_HKDFExtract
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.11 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.13 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.13 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.17 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.17 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( Accept( ~tid, '3' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( Accept( tid_peer, '3' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                          <sk_e.1, dES>,
                                                          <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                              solve( CID( ~tid.1, '2',
                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.2, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( CID( ~tid.1, '2',
                                                        <'CHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #tcidpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                 <sk_e.1, dES>,
                                                                 <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                          ) ▶₁ #tcidpeer )
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)),
                                                                                            'derived', '0'),
                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e)),
                                                                     'c_hs_traffic',
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                      ~coins_e), 
                                                                      ~r_s>)
                                                     ) @ #t )
                                                case ORevealSessionKey
                                                by contradiction /* from formulas */
                                              next
                                                case c_HKDFExpand
                                                solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0'),
                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e))
                                                       ) @ #vk.9 )
                                                  case c_HKDFExtract
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.11 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.13 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.13 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.17 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.17 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '2', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( ~tid, '2', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( SK( ~tid, '2', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( FS( ~tid, '2', j, 'wfs2' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                      solve( Accept( ~tid, '2' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>, <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( Accept( tid_peer, '2' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                              <sk_e.1, dES>,
                                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                  solve( CID( ~tid.1, '2',
                                                              <'CHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction1', <sk_e.2, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( CID( ~tid.1, '2',
                                                            <'CHTS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             ct_e, r_s>
                                                       ) @ #tcidpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                    case KEMTLS_KEM_s_KeyGen
                                                    by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                     'ClientAction1', <sk_e.1, dES>,
                                                                     <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >
                                                              ) ▶₁ #tcidpeer )
                                                  qed
                                                next
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e)),
                                                                         'c_hs_traffic',
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>)
                                                         ) @ #t )
                                                    case ORevealSessionKey
                                                    by contradiction /* from formulas */
                                                  next
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e))
                                                           ) @ #vk.10 )
                                                      case c_HKDFExtract
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.12 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.14 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.14 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.18 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.18 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                      solve( Accept( ~tid, '3' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>, <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( Accept( tid_peer, '3' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                              <sk_e.1, dES>,
                                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                  solve( CID( ~tid.1, '2',
                                                              <'CHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction1', <sk_e.2, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( CID( ~tid.1, '2',
                                                            <'CHTS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             ct_e, r_s>
                                                       ) @ #tcidpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                    case KEMTLS_KEM_s_KeyGen
                                                    by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                     'ClientAction1', <sk_e.1, dES>,
                                                                     <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >
                                                              ) ▶₁ #tcidpeer )
                                                  qed
                                                next
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e)),
                                                                         'c_hs_traffic',
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>)
                                                         ) @ #t )
                                                    case ORevealSessionKey
                                                    by contradiction /* from formulas */
                                                  next
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e))
                                                           ) @ #vk.10 )
                                                      case c_HKDFExtract
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.12 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.14 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.14 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.18 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.18 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                    <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '3', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SID( ~tid, '3', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( SK( ~tid, '3', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( FS( ~tid, '3', j, 'wfs2' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( Accept( ~tid, '3' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( Accept( tid_peer, '3' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                          <sk_e.1, dES>,
                                                          <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                              solve( CID( ~tid.1, '3',
                                                          <'SHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.2, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( CID( ~tid.1, '3',
                                                        <'SHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #tcidpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                 <sk_e.1, dES>,
                                                                 <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                          ) ▶₁ #tcidpeer )
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)),
                                                                                            'derived', '0'),
                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e)),
                                                                     's_hs_traffic',
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                      ~coins_e), 
                                                                      ~r_s>)
                                                     ) @ #t )
                                                case ORevealSessionKey
                                                by contradiction /* from formulas */
                                              next
                                                case c_HKDFExpand
                                                solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0'),
                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e))
                                                       ) @ #vk.9 )
                                                  case c_HKDFExtract
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.11 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.13 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.13 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.17 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.17 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '3', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( ~tid, '3', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( SK( ~tid, '3', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( FS( ~tid, '3', j, 'wfs2' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                      solve( Accept( ~tid, '3' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>, <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( Accept( tid_peer, '3' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                              <sk_e.1, dES>,
                                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                                  solve( CID( ~tid.1, '3',
                                                              <'SHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction1', <sk_e.2, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( CID( ~tid.1, '3',
                                                            <'SHTS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             ct_e, r_s>
                                                       ) @ #tcidpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                    case KEMTLS_KEM_s_KeyGen
                                                    by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                     'ClientAction1', <sk_e.1, dES>,
                                                                     <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >
                                                              ) ▶₁ #tcidpeer )
                                                  qed
                                                next
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e)),
                                                                         's_hs_traffic',
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>)
                                                         ) @ #t )
                                                    case ORevealSessionKey
                                                    by contradiction /* from formulas */
                                                  next
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e))
                                                           ) @ #vk.10 )
                                                      case c_HKDFExtract
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.12 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.14 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.14 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.18 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.18 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '4', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( SID( ~tid, '4', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( SK( ~tid, '4', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            by solve( FS( ~tid, '4', j, 'wfs2' ) @ #tfs )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '4', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( ~tid, '4', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                      <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( SK( ~tid, '4', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                by solve( FS( ~tid, '4', j, 'wfs2' ) @ #tfs )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '5', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( SID( ~tid, '5', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( SK( ~tid, '5', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            by solve( FS( ~tid, '5', j, 'wfs2' ) @ #tfs )
                          qed
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                    ) ▶₁ #tsk )
                        qed
                      qed
                    qed
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                     <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                              ) ▶₁ #tsid )
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                               <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                        ) ▶₁ #tcid )
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '5', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( ~tid, '5', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                      <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( SK( ~tid, '5', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                by solve( FS( ~tid, '5', j, 'wfs2' ) @ #tfs )
                              qed
                            qed
                          next
                            case KEMTLS_PDK_SAUTH_ServerAction2
                            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                               <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                        ) ▶₁ #tsk )
                            qed
                          qed
                        qed
                      qed
                    next
                      case KEMTLS_PDK_SAUTH_ServerAction2
                      solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                         <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                  ) ▶₁ #tsid )
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction2
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                   <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                            ) ▶₁ #tcid )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_1
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '1', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '1', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '1', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '1', j, 'wfs2' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '2', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '2', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                               <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '2', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '2', j, 'wfs2' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                   <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                            ) ▶₁ #tfs )
                qed
              next
                case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                   <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_3
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '3', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '3', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                               <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '3', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '3', j, 'wfs2' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                   <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_4
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '4', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '4', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                               <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '4', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '4', j, 'wfs2' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tpid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( CID( ~tid, '5', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                               <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                        ) ▶₁ #tcid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                            <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( SID( ~tid, '5', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                     <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                              ) ▶₁ #tsid )
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                  <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( SK( ~tid, '5', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                    ) ▶₁ #tsk )
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            by solve( FS( ~tid, '5', j, 'wfs2' ) @ #tfs )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( Accept( tid_owner, i ) @ #taccept )
    case KEMTLS_PDK_SAUTH_ClientAction1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( CID( ~tid, '1', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( SID( ~tid, '1', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SK( ~tid, '1', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction1
              by solve( FS( ~tid, '1', j, 'wfs2' ) @ #tfs )
            qed
          qed
        qed
      next
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e, r_s>
                 ) ▶₁ #tpid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( CID( ~tid, '1', cid_i ) @ #tcid )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( SID( ~tid, '1', sid_i ) @ #tsid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SK( ~tid, '1', sk_i ) @ #tsk )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  by solve( FS( ~tid, '1', j, 'wfs2' ) @ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                    <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '2', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SID( ~tid, '2', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( SK( ~tid, '2', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( FS( ~tid, '2', j, 'wfs2' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( Accept( ~tid, '2' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( splitEqs(0) )
                                          case split_case_1
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Decaps(ct_e, ~sk_e)),
                                                                 'c_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  ct_e, r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Decaps(ct_e, ~sk_e))
                                                   ) @ #vk.4 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.12 )
                                                case c_KEM_e_Decaps
                                                by solve( !KU( ~sk_e ) @ #vk.13 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                             x)),
                                                                 'c_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                   ) @ #vk.4 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( splitEqs(8) )
                                                  case split_case_1
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.17 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.21 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.21 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.17 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.21 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.21 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_KEM_e_Encaps_ct
                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0')
                                                       ) @ #vk.11 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract('0',
                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S))
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.13 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      by solve( !KU( ~sk_e ) @ #vk.22 )
                                                    next
                                                      case c_KEM_e_Encaps_ss
                                                      solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)
                                                             ) @ #vk.17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        solve( !KU( ~sk_P ) @ #vk.18 )
                                                          case OCorruptLTK
                                                          by contradiction /* from formulas */
                                                        qed
                                                      next
                                                        case c_KEM_s_Encaps_ss
                                                        by solve( !KU( ~coins_S ) @ #vk.19 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( Accept( ~tid, '3' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( splitEqs(0) )
                                          case split_case_1
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Decaps(ct_e, ~sk_e)),
                                                                 'c_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  ct_e, r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Decaps(ct_e, ~sk_e))
                                                   ) @ #vk.4 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.12 )
                                                case c_KEM_e_Decaps
                                                by solve( !KU( ~sk_e ) @ #vk.13 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                             x)),
                                                                 'c_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                   ) @ #vk.4 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( splitEqs(8) )
                                                  case split_case_1
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.17 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.21 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.21 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.17 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.21 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.21 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_KEM_e_Encaps_ct
                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0')
                                                       ) @ #vk.11 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract('0',
                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S))
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.13 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      by solve( !KU( ~sk_e ) @ #vk.22 )
                                                    next
                                                      case c_KEM_e_Encaps_ss
                                                      solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)
                                                             ) @ #vk.17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        solve( !KU( ~sk_P ) @ #vk.18 )
                                                          case OCorruptLTK
                                                          by contradiction /* from formulas */
                                                        qed
                                                      next
                                                        case c_KEM_s_Encaps_ss
                                                        by solve( !KU( ~coins_S ) @ #vk.19 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '2', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( ~tid, '2', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( SK( ~tid, '2', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( FS( ~tid, '2', j, 'wfs2' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                      solve( Accept( ~tid, '2' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>, <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( splitEqs(0) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk.3 )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Decaps(ct_e, ~sk_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.14 )
                                                      case c_KEM_e_Decaps
                                                      by solve( !KU( ~sk_e ) @ #vk.15 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.10 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.12 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.14 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.14 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.18 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.18 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   x)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                        r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.4 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(9) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.6 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                              ~coins_S)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                       x)),
                                                                                           'derived', '0'),
                                                                                '0')
                                                               ) @ #vk.16 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.14 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                     ) @ #vk.16 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.27 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.20 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.22 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.23 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.24 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                      solve( Accept( ~tid, '3' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>, <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( splitEqs(0) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk.3 )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Decaps(ct_e, ~sk_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.14 )
                                                      case c_KEM_e_Decaps
                                                      by solve( !KU( ~sk_e ) @ #vk.15 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.10 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.12 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.14 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.14 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.18 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.18 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   x)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                        r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.4 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(9) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.6 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                              ~coins_S)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                       x)),
                                                                                           'derived', '0'),
                                                                                '0')
                                                               ) @ #vk.16 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.14 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                     ) @ #vk.16 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.27 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.20 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.22 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.23 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.24 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                    <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '3', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SID( ~tid, '3', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( SK( ~tid, '3', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( FS( ~tid, '3', j, 'wfs2' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                              <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( Accept( ~tid, '3' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                    <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                        solve( splitEqs(0) )
                                          case split_case_1
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Decaps(ct_e, ~sk_e)),
                                                                 's_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  ct_e, r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Decaps(ct_e, ~sk_e))
                                                   ) @ #vk.4 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.12 )
                                                case c_KEM_e_Decaps
                                                by solve( !KU( ~sk_e ) @ #vk.13 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                             x)),
                                                                 's_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                   ) @ #vk.4 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( splitEqs(8) )
                                                  case split_case_1
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.17 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.21 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.21 )
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case split_case_2
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.17 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.21 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.21 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_KEM_e_Encaps_ct
                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0')
                                                       ) @ #vk.11 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract('0',
                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S))
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.13 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      by solve( !KU( ~sk_e ) @ #vk.22 )
                                                    next
                                                      case c_KEM_e_Encaps_ss
                                                      solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)
                                                             ) @ #vk.17 )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        solve( !KU( ~sk_P ) @ #vk.18 )
                                                          case OCorruptLTK
                                                          by contradiction /* from formulas */
                                                        qed
                                                      next
                                                        case c_KEM_s_Encaps_ss
                                                        by solve( !KU( ~coins_S ) @ #vk.19 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '3', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( ~tid, '3', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( SK( ~tid, '3', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( FS( ~tid, '3', j, 'wfs2' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction1
                                      solve( Accept( ~tid, '3' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                        <sk_e.1, dES>, <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                            solve( splitEqs(0) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk.3 )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Decaps(ct_e, ~sk_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.14 )
                                                      case c_KEM_e_Decaps
                                                      by solve( !KU( ~sk_e ) @ #vk.15 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.10 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.12 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.14 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.14 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.18 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.18 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   x)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                        r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.4 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(9) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.6 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                              ~coins_S)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                       x)),
                                                                                           'derived', '0'),
                                                                                '0')
                                                               ) @ #vk.16 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.14 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                     ) @ #vk.16 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.27 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.20 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.22 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.23 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.24 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '4', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( SID( ~tid, '4', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( SK( ~tid, '4', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            by solve( FS( ~tid, '4', j, 'wfs2' ) @ #tfs )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '4', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( ~tid, '4', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                      <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( SK( ~tid, '4', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                by solve( FS( ~tid, '4', j, 'wfs2' ) @ #tfs )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '5', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( SID( ~tid, '5', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( SK( ~tid, '5', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            by solve( FS( ~tid, '5', j, 'wfs2' ) @ #tfs )
                          qed
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                    ) ▶₁ #tsk )
                        qed
                      qed
                    qed
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                     <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                              ) ▶₁ #tsid )
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                               <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                        ) ▶₁ #tcid )
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '5', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( ~tid, '5', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                      <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( SK( ~tid, '5', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                by solve( FS( ~tid, '5', j, 'wfs2' ) @ #tfs )
                              qed
                            qed
                          next
                            case KEMTLS_PDK_SAUTH_ServerAction2
                            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                               <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                        ) ▶₁ #tsk )
                            qed
                          qed
                        qed
                      qed
                    next
                      case KEMTLS_PDK_SAUTH_ServerAction2
                      solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                         <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                  ) ▶₁ #tsid )
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction2
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                   <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                            ) ▶₁ #tcid )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_1
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '1', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '1', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '1', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '1', j, 'wfs2' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '2', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '2', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                               <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '2', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '2', j, 'wfs2' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                   <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                            ) ▶₁ #tfs )
                qed
              next
                case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                   <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_3
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '3', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '3', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                               <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '3', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '3', j, 'wfs2' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                   <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_4
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '4', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '4', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                               <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '4', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '4', j, 'wfs2' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tpid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( CID( ~tid, '5', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                               <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                        ) ▶₁ #tcid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                            <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( SID( ~tid, '5', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                     <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                              ) ▶₁ #tsid )
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                  <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( SK( ~tid, '5', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                    ) ▶₁ #tsk )
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            by solve( FS( ~tid, '5', j, 'wfs2' ) @ #tfs )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma sk_security_fs:
  all-traces
  "∀ tid_owner pid i cid_i sid_i sk_i #taccept #tpid #tcid #tsid #tsk.
    ((((((((Accept( tid_owner, i ) @ #taccept) ∧
           (Peer( tid_owner, pid ) @ #tpid)) ∧
          (CID( tid_owner, i, cid_i ) @ #tcid)) ∧
         (SID( tid_owner, i, sid_i ) @ #tsid)) ∧
        (SK( tid_owner, i, sk_i ) @ #tsk)) ∧
       (¬(∃ #t. RevealedSessionKey( tid_owner, i ) @ #t))) ∧
      (¬(∃ tid_partner #tt1 #tt2.
          ((¬(tid_owner = tid_partner)) ∧ (SID( tid_partner, i, sid_i ) @ #tt1)) ∧
          (RevealedSessionKey( tid_partner, i ) @ #tt2)))) ∧
     (∃ j #tfs #tacceptj.
       ((FS( tid_owner, i, j, 'fs' ) @ #tfs) ∧
        (Accept( tid_owner, j ) @ #tacceptj)) ∧
       ((∃ tid_peer #tacceptjpeer #tcidpeer.
          ((¬(tid_owner = tid_peer)) ∧ (Accept( tid_peer, j ) @ #tacceptjpeer)) ∧
          (CID( tid_peer, i, cid_i ) @ #tcidpeer)) ∨
        (¬(∃ keytype #tcorrupt.
            (CorruptedLTK( pid, keytype ) @ #tcorrupt) ∧
            (#tcorrupt < #tacceptj)))))) ⇒
    (¬(∃ #t. !KU( sk_i ) @ #t))"
/*
guarded formula characterizing all counter-examples:
"∃ tid_owner pid i cid_i sid_i sk_i #taccept #tpid #tcid #tsid #tsk.
  (Accept( tid_owner, i ) @ #taccept) ∧
  (Peer( tid_owner, pid ) @ #tpid) ∧
  (CID( tid_owner, i, cid_i ) @ #tcid) ∧
  (SID( tid_owner, i, sid_i ) @ #tsid) ∧
  (SK( tid_owner, i, sk_i ) @ #tsk)
 ∧
  (∀ #t. (RevealedSessionKey( tid_owner, i ) @ #t) ⇒ ⊥) ∧
  (∀ tid_partner #tt1 #tt2.
    (SID( tid_partner, i, sid_i ) @ #tt1) ∧
    (RevealedSessionKey( tid_partner, i ) @ #tt2)
   ⇒
    tid_owner = tid_partner) ∧
  (∃ j #tfs #tacceptj.
    (FS( tid_owner, i, j, 'fs' ) @ #tfs) ∧
    (Accept( tid_owner, j ) @ #tacceptj)
   ∧
    ((∃ tid_peer #tacceptjpeer #tcidpeer.
       (Accept( tid_peer, j ) @ #tacceptjpeer) ∧
       (CID( tid_peer, i, cid_i ) @ #tcidpeer)
      ∧
       ¬(tid_owner = tid_peer)) ∨
     (∀ keytype #tcorrupt.
       (CorruptedLTK( pid, keytype ) @ #tcorrupt)
      ⇒
       ¬(#tcorrupt < #tacceptj)))) ∧
  (∃ #t. (!KU( sk_i ) @ #t))"
*/
simplify
solve( (∃ tid_peer #tacceptjpeer #tcidpeer.
         (Accept( tid_peer, j ) @ #tacceptjpeer) ∧
         (CID( tid_peer, i, cid_i ) @ #tcidpeer)
        ∧
         ¬(tid_owner = tid_peer))  ∥
       (∀ keytype #tcorrupt.
         (CorruptedLTK( pid, keytype ) @ #tcorrupt) ⇒ ¬(#tcorrupt < #tacceptj)) )
  case case_1
  solve( Accept( tid_owner, i ) @ #taccept )
    case KEMTLS_PDK_SAUTH_ClientAction1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( CID( ~tid, '1', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( SID( ~tid, '1', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SK( ~tid, '1', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction1
              by solve( FS( ~tid, '1', j, 'fs' ) @ #tfs )
            qed
          qed
        qed
      next
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e, r_s>
                 ) ▶₁ #tpid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( CID( ~tid, '1', cid_i ) @ #tcid )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( SID( ~tid, '1', sid_i ) @ #tsid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SK( ~tid, '1', sk_i ) @ #tsk )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  by solve( FS( ~tid, '1', j, 'fs' ) @ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                    <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '2', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SID( ~tid, '2', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( SK( ~tid, '2', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( FS( ~tid, '2', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '4' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                          HS,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( CID( ~tid.1, '2',
                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.2, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( CID( ~tid.1, '2',
                                                        <'CHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #tcidpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                 <sk_e.1, dES>,
                                                                 <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                          ) ▶₁ #tcidpeer )
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)),
                                                                                            'derived', '0'),
                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e)),
                                                                     'c_hs_traffic',
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                      ~coins_e), 
                                                                      ~r_s>)
                                                     ) @ #t )
                                                case ORevealSessionKey
                                                by contradiction /* from formulas */
                                              next
                                                case c_HKDFExpand
                                                solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0'),
                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e))
                                                       ) @ #vk.10 )
                                                  case c_HKDFExtract
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.14 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.18 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.18 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '5' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                          HS,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( CID( ~tid.1, '2',
                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.2, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction2
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                          <MS, fk_c>,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( CID( ~tid.1, '2',
                                                          <'CHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                   'ClientAction1', <sk_e.1, dES>,
                                                                   <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                    KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                   >
                                                            ) ▶₁ #tcidpeer )
                                                qed
                                              next
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                          ~coins_S)),
                                                                                                                              'derived',
                                                                                                                              '0'),
                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                   ~coins_e)),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            '0'),
                                                                                'c_finished', '0'),
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      <
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>, 
                                                                      SF>)
                                                           ) @ #vk.6 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.13 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.15 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.15 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.19 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.19 )
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_HMAC
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.15 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.19 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.17 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.23 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.23 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                                ) ▶₁ #tacceptj )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '2', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( ~tid, '2', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( SK( ~tid, '2', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( FS( ~tid, '2', j, 'fs' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '4' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH',
                                                              'ClientAction2_part1', HS,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( CID( ~tid.1, '2',
                                                              <'CHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction1', <sk_e.2, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( CID( ~tid.1, '2',
                                                            <'CHTS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             ct_e, r_s>
                                                       ) @ #tcidpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                    case KEMTLS_KEM_s_KeyGen
                                                    by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                     'ClientAction1', <sk_e.1, dES>,
                                                                     <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >
                                                              ) ▶₁ #tcidpeer )
                                                  qed
                                                next
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e)),
                                                                         'c_hs_traffic',
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>)
                                                         ) @ #t )
                                                    case ORevealSessionKey
                                                    by contradiction /* from formulas */
                                                  next
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e))
                                                           ) @ #vk.10 )
                                                      case c_HKDFExtract
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.12 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.14 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.14 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.18 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.18 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '5' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH',
                                                              'ClientAction2_part1', HS,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( CID( ~tid.1, '2',
                                                              <'CHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction1', <sk_e.2, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction2
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                              <MS, fk_c>,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( CID( ~tid.1, '2',
                                                              <'CHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                       'ClientAction1', <sk_e.1, dES>,
                                                                       <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), 
                                                                        ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >
                                                                ) ▶₁ #tcidpeer )
                                                    qed
                                                  next
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e)),
                                                                           'c_hs_traffic',
                                                                           <
                                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)
                                                                            >, 
                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                            ~coins_e), 
                                                                            ~r_s>)
                                                           ) @ #t )
                                                      case ORevealSessionKey
                                                      by contradiction /* from formulas */
                                                    next
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e))
                                                             ) @ #vk.11 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       ~coins_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    'c_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          <
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>, 
                                                                          SF>)
                                                               ) @ #vk.6 )
                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.13 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.15 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.19 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.19 )
                                                              qed
                                                            qed
                                                          qed
                                                        next
                                                          case c_HMAC
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.15 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.19 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.17 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.23 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.23 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                           <MS, fk_c>,
                                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                            r_s.1>
                                                    ) ▶₁ #tacceptj )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                    <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '3', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SID( ~tid, '3', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( SK( ~tid, '3', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( FS( ~tid, '3', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '4' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                          HS,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( CID( ~tid.1, '3',
                                                          <'SHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.2, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( CID( ~tid.1, '3',
                                                        <'SHTS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         ct_e, r_s>
                                                   ) @ #tcidpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                 <sk_e.1, dES>,
                                                                 <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                          ) ▶₁ #tcidpeer )
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)),
                                                                                            'derived', '0'),
                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e)),
                                                                     's_hs_traffic',
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                      ~coins_e), 
                                                                      ~r_s>)
                                                     ) @ #t )
                                                case ORevealSessionKey
                                                by contradiction /* from formulas */
                                              next
                                                case c_HKDFExpand
                                                solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0'),
                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e))
                                                       ) @ #vk.10 )
                                                  case c_HKDFExtract
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.14 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.18 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        by solve( !KU( ~coins_e ) @ #vk.18 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '5' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                          HS,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( CID( ~tid.1, '3',
                                                          <'SHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                                                                <sk_e.2, dES>,
                                                                <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction2
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                          <MS, fk_c>,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( CID( ~tid.1, '3',
                                                          <'SHTS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           ct_e, r_s>
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                   'ClientAction1', <sk_e.1, dES>,
                                                                   <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                    KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                   >
                                                            ) ▶₁ #tcidpeer )
                                                qed
                                              next
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                          ~coins_S)),
                                                                                                                              'derived',
                                                                                                                              '0'),
                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                   ~coins_e)),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            '0'),
                                                                                'c_finished', '0'),
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      <
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>, 
                                                                      SF>)
                                                           ) @ #vk.6 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.13 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.15 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.15 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.19 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.19 )
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_HMAC
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.15 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.19 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.17 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.23 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.23 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                                ) ▶₁ #tacceptj )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '3', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( ~tid, '3', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( SK( ~tid, '3', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( FS( ~tid, '3', j, 'fs' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '4' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH',
                                                              'ClientAction2_part1', HS,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( CID( ~tid.1, '3',
                                                              <'SHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction1', <sk_e.2, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( CID( ~tid.1, '3',
                                                            <'SHTS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             ct_e, r_s>
                                                       ) @ #tcidpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                    case KEMTLS_KEM_s_KeyGen
                                                    by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                     'ClientAction1', <sk_e.1, dES>,
                                                                     <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >
                                                              ) ▶₁ #tcidpeer )
                                                  qed
                                                next
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e)),
                                                                         's_hs_traffic',
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>)
                                                         ) @ #t )
                                                    case ORevealSessionKey
                                                    by contradiction /* from formulas */
                                                  next
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e))
                                                           ) @ #vk.10 )
                                                      case c_HKDFExtract
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.12 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.14 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.14 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.18 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.18 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '5' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH',
                                                              'ClientAction2_part1', HS,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( CID( ~tid.1, '3',
                                                              <'SHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction1', <sk_e.2, dES>,
                                                                    <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction2
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                              <MS, fk_c>,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( CID( ~tid.1, '3',
                                                              <'SHTS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                       'ClientAction1', <sk_e.1, dES>,
                                                                       <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), 
                                                                        ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >
                                                                ) ▶₁ #tcidpeer )
                                                    qed
                                                  next
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e)),
                                                                           's_hs_traffic',
                                                                           <
                                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)
                                                                            >, 
                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                            ~coins_e), 
                                                                            ~r_s>)
                                                           ) @ #t )
                                                      case ORevealSessionKey
                                                      by contradiction /* from formulas */
                                                    next
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e))
                                                             ) @ #vk.11 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       ~coins_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    'c_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          <
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>, 
                                                                          SF>)
                                                               ) @ #vk.6 )
                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.13 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.15 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.19 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.19 )
                                                              qed
                                                            qed
                                                          qed
                                                        next
                                                          case c_HMAC
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.15 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.19 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.17 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.23 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.23 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                           <MS, fk_c>,
                                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                            r_s.1>
                                                    ) ▶₁ #tacceptj )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '4', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( SID( ~tid, '4', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( SK( ~tid, '4', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( FS( ~tid, '4', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '4' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                          HS,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( CID( ~tid.1, '4',
                                                          <'SATS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           <ct_e, r_s>, 
                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              z),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0'),
                                                                <
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>)
                                                          >
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                'ClientAction2_part1',
                                                                HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            z),
                                                                <KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( CID( ~tid.1, '4',
                                                        <'SATS', KEM_s_PK(~sk_P), 
                                                         <KEM_e_PK(~sk_e), ~r_c, 
                                                          KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                         <ct_e, r_s>, 
                                                         HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                   ~coins_S)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            z),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     '0'),
                                                                         's_finished', '0'),
                                                              <
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               ct_e, r_s>)
                                                        >
                                                   ) @ #tcidpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                 'ClientAction2_part1',
                                                                 HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             z),
                                                                 <KEM_s_PK(~sk_P), 
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  ct_e, r_s>
                                                          ) ▶₁ #tcidpeer )
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                               ~coins_S)),
                                                                                                                   'derived',
                                                                                                                   '0'),
                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                        ~coins_e)),
                                                                                            'derived', '0'),
                                                                                 '0'),
                                                                     's_ap_traffic',
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      <
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>, 
                                                                      HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                ~coins_S)),
                                                                                                                                    'derived',
                                                                                                                                    '0'),
                                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                         ~coins_e)),
                                                                                                             'derived',
                                                                                                             '0'),
                                                                                                  '0'),
                                                                                      's_finished', '0'),
                                                                           <
                                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)
                                                                            >, 
                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                            ~coins_e), 
                                                                            ~r_s>)
                                                                     >)
                                                     ) @ #t )
                                                case ORevealSessionKey
                                                by contradiction /* from formulas */
                                              next
                                                case c_HKDFExpand
                                                solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                      ~coins_S)),
                                                                                                          'derived',
                                                                                                          '0'),
                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                               ~coins_e)),
                                                                                   'derived', '0'),
                                                                        '0')
                                                       ) @ #vk.11 )
                                                  case c_HKDFExtract
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                     ~coins_e)),
                                                                         'derived', '0')
                                                         ) @ #vk.13 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e))
                                                           ) @ #vk.15 )
                                                      case c_HKDFExtract
                                                      solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)),
                                                                             'derived', '0')
                                                             ) @ #vk.17 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S))
                                                               ) @ #vk.19 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                      ~coins_e)
                                                                 ) @ #vk.19 )
                                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                                            by solve( !KU( ~sk_e ) @ #vk.21 )
                                                          next
                                                            case c_KEM_e_Encaps_ss
                                                            by solve( !KU( ~coins_e ) @ #vk.21 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '5' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                          HS,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( CID( ~tid.1, '4',
                                                          <'SATS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           <ct_e, r_s>, 
                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              z),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0'),
                                                                <
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>)
                                                          >
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                'ClientAction2_part1',
                                                                HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            z),
                                                                <KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction2
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                          <MS, fk_c>,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( CID( ~tid.1, '4',
                                                          <'SATS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           <ct_e, r_s>, 
                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              z),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0'),
                                                                <
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>)
                                                          >
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                   'ClientAction2_part1',
                                                                   HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                      ~coins_S)),
                                                                                          'derived', '0'),
                                                                               z),
                                                                   <KEM_s_PK(~sk_P), 
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    ct_e, r_s>
                                                            ) ▶₁ #tcidpeer )
                                                qed
                                              next
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                          ~coins_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <
                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                         ~coins_e), 
                                                                         ~r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           ~coins_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                              ~coins_e), 
                                                                              ~r_s>)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                          ~coins_S)),
                                                                                                                              'derived',
                                                                                                                              '0'),
                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                   ~coins_e)),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            '0'),
                                                                                'c_finished', '0'),
                                                                     <
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      <
                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                       ~coins_e), 
                                                                       ~r_s>, 
                                                                      SF>)
                                                           ) @ #vk.7 )
                                                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.14 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.16 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.18 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.20 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.22 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.22 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_HMAC
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.16 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.20 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                           ~coins_S)),
                                                                                                                               'derived',
                                                                                                                               '0'),
                                                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                    ~coins_e)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             '0'),
                                                                                 'c_finished', '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.22 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.25 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.24 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.27 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.27 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                                ) ▶₁ #tacceptj )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '4', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( ~tid, '4', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                      <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( SK( ~tid, '4', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                solve( FS( ~tid, '4', j, 'fs' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '4' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( Accept( tid_peer, '4' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH',
                                                              'ClientAction2_part1', HS,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( CID( ~tid.1, '4',
                                                              <'SATS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               <ct_e, r_s>, 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>)
                                                              >
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction2_part1',
                                                                    HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                z),
                                                                    <KEM_s_PK(~sk_P), 
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₁ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( CID( ~tid.1, '4',
                                                            <'SATS', KEM_s_PK(~sk_P), 
                                                             <KEM_e_PK(~sk_e), ~r_c, 
                                                              KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                             <ct_e, r_s>, 
                                                             HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                z),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0'),
                                                                  <
                                                                   <KEM_e_PK(~sk_e), ~r_c, 
                                                                    KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                   >, 
                                                                   ct_e, r_s>)
                                                            >
                                                       ) @ #tcidpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                  solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                    case KEMTLS_KEM_s_KeyGen
                                                    by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                     'ClientAction2_part1',
                                                                     HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                        ~coins_S)),
                                                                                            'derived', '0'),
                                                                                 z),
                                                                     <KEM_s_PK(~sk_P), 
                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)
                                                                      >, 
                                                                      ct_e, r_s>
                                                              ) ▶₁ #tcidpeer )
                                                  qed
                                                next
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                   ~coins_S)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                            ~coins_e)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     '0'),
                                                                         's_ap_traffic',
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          <
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>, 
                                                                          HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                    ~coins_S)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                             ~coins_e)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      '0'),
                                                                                          's_finished', '0'),
                                                                               <
                                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)
                                                                                >, 
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>)
                                                                         >)
                                                         ) @ #t )
                                                    case ORevealSessionKey
                                                    by contradiction /* from formulas */
                                                  next
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   ~coins_e)),
                                                                                       'derived', '0'),
                                                                            '0')
                                                           ) @ #vk.11 )
                                                      case c_HKDFExtract
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.13 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.15 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.17 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.19 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.19 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.21 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.21 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '5' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH',
                                                              'ClientAction2_part1', HS,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( CID( ~tid.1, '4',
                                                              <'SATS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               <ct_e, r_s>, 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>)
                                                              >
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction2_part1',
                                                                    HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                z),
                                                                    <KEM_s_PK(~sk_P), 
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction2
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                              <MS, fk_c>,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( CID( ~tid.1, '4',
                                                              <'SATS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               <ct_e, r_s>, 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>)
                                                              >
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                       'ClientAction2_part1',
                                                                       HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   z),
                                                                       <KEM_s_PK(~sk_P), 
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>
                                                                ) ▶₁ #tcidpeer )
                                                    qed
                                                  next
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_ap_traffic',
                                                                           <
                                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)
                                                                            >, 
                                                                            <
                                                                             KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                             ~coins_e), 
                                                                             ~r_s>, 
                                                                            HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                      ~coins_S)),
                                                                                                                                          'derived',
                                                                                                                                          '0'),
                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                               ~coins_e)),
                                                                                                                   'derived',
                                                                                                                   '0'),
                                                                                                        '0'),
                                                                                            's_finished',
                                                                                            '0'),
                                                                                 <
                                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)
                                                                                  >, 
                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                  ~coins_e), 
                                                                                  ~r_s>)
                                                                           >)
                                                           ) @ #t )
                                                      case ORevealSessionKey
                                                      by contradiction /* from formulas */
                                                    next
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                            ~coins_S)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                     ~coins_e)),
                                                                                         'derived', '0'),
                                                                              '0')
                                                             ) @ #vk.12 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       ~coins_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    'c_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          <
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>, 
                                                                          SF>)
                                                               ) @ #vk.7 )
                                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.14 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e))
                                                                   ) @ #vk.16 )
                                                              case c_HKDFExtract
                                                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0')
                                                                     ) @ #vk.18 )
                                                                case c_HKDFExpand
                                                                solve( !KU( HKDFExtract('0',
                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S))
                                                                       ) @ #vk.20 )
                                                                  case c_HKDFExtract
                                                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e)
                                                                         ) @ #vk.20 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                    by solve( !KU( ~sk_e ) @ #vk.22 )
                                                                  next
                                                                    case c_KEM_e_Encaps_ss
                                                                    by solve( !KU( ~coins_e ) @ #vk.22 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        next
                                                          case c_HMAC
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.16 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                               ~coins_S)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                        ~coins_e)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 '0'),
                                                                                     'c_finished', '0')
                                                                     ) @ #vk.19 )
                                                                case c_HKDFExpand
                                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.22 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S))
                                                                         ) @ #vk.25 )
                                                                    case c_HKDFExtract
                                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)
                                                                           ) @ #vk.24 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      by solve( !KU( ~sk_e ) @ #vk.27 )
                                                                    next
                                                                      case c_KEM_e_Encaps_ss
                                                                      by solve( !KU( ~coins_e ) @ #vk.27 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                           <MS, fk_c>,
                                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                            r_s.1>
                                                    ) ▶₁ #tacceptj )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '5', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( SID( ~tid, '5', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( SK( ~tid, '5', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( FS( ~tid, '5', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '5' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                                          HS,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                              solve( CID( ~tid.1, '5',
                                                          <'CATS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           <ct_e, r_s>, 
                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              z),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0'),
                                                                <
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>), 
                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              z),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           'c_finished', '0'),
                                                                <
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 <ct_e, r_s>, 
                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                           ~coins_S)),
                                                                                                                               'derived',
                                                                                                                               '0'),
                                                                                                                    z),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             '0'),
                                                                                 's_finished', '0'),
                                                                      <
                                                                       <KEM_e_PK(~sk_e), ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >, 
                                                                       ct_e, r_s>)
                                                                >)
                                                          >
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                'ClientAction2_part1',
                                                                HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            z),
                                                                <KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                    by contradiction /* from formulas */
                                                  qed
                                                qed
                                              next
                                                case KEMTLS_PDK_SAUTH_ServerAction2
                                                solve( !Ltk( $S.2, KEM_s_PK(~sk_P), sk_S, 'KEM_s'
                                                       ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                   'ServerAction1',
                                                                   <MS, 
                                                                    HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               'c_finished', '0')
                                                                   >,
                                                                   <KEM_s_PK(~sk_P), 
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    ct_e, r_s>
                                                            ) ▶₁ #tcidpeer )
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case KEMTLS_PDK_SAUTH_ServerAction2
                                          solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                            case KEMTLS_KEM_s_KeyGen
                                            solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                          <MS, fk_c>,
                                                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                           r_s.1>
                                                   ) ▶₁ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                              solve( CID( ~tid.1, '5',
                                                          <'CATS', KEM_s_PK(~sk_P), 
                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                           <ct_e, r_s>, 
                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              z),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0'),
                                                                <
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>), 
                                                           HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              z),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           'c_finished', '0'),
                                                                <
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 <ct_e, r_s>, 
                                                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                           ~coins_S)),
                                                                                                                               'derived',
                                                                                                                               '0'),
                                                                                                                    z),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             '0'),
                                                                                 's_finished', '0'),
                                                                      <
                                                                       <KEM_e_PK(~sk_e), ~r_c, 
                                                                        KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                       >, 
                                                                       ct_e, r_s>)
                                                                >)
                                                          >
                                                     ) @ #tcidpeer )
                                                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                   'ClientAction2_part1',
                                                                   HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                      ~coins_S)),
                                                                                          'derived', '0'),
                                                                               z),
                                                                   <KEM_s_PK(~sk_P), 
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    ct_e, r_s>
                                                            ) ▶₁ #tcidpeer )
                                                qed
                                              next
                                                case KEMTLS_PDK_SAUTH_ServerAction2
                                                solve( !Ltk( $S.2, KEM_s_PK(~sk_P), sk_S, 'KEM_s'
                                                       ) ▶₀ #tcidpeer )
                                                  case KEMTLS_KEM_s_KeyGen
                                                  solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                                <MS, 
                                                                 HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                      ~coins_S)),
                                                                                                                          'derived',
                                                                                                                          '0'),
                                                                                                               z),
                                                                                                   'derived',
                                                                                                   '0'),
                                                                                        '0'),
                                                                            'c_finished', '0')
                                                                >,
                                                                <KEM_s_PK(~sk_P), 
                                                                 <KEM_e_PK(~sk_e), ~r_c, 
                                                                  KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                 >, 
                                                                 ct_e, r_s>
                                                         ) ▶₁ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           'c_ap_traffic',
                                                                           <
                                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)
                                                                            >, 
                                                                            <
                                                                             KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                             ~coins_e), 
                                                                             ~r_s>, 
                                                                            HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                      ~coins_S)),
                                                                                                                                          'derived',
                                                                                                                                          '0'),
                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                               ~coins_e)),
                                                                                                                   'derived',
                                                                                                                   '0'),
                                                                                                        '0'),
                                                                                            's_finished',
                                                                                            '0'),
                                                                                 <
                                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)
                                                                                  >, 
                                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                  ~coins_e), 
                                                                                  ~r_s>), 
                                                                            HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                      ~coins_S)),
                                                                                                                                          'derived',
                                                                                                                                          '0'),
                                                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                               ~coins_e)),
                                                                                                                   'derived',
                                                                                                                   '0'),
                                                                                                        '0'),
                                                                                            'c_finished',
                                                                                            '0'),
                                                                                 <
                                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)
                                                                                  >, 
                                                                                  <
                                                                                   KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e), 
                                                                                   ~r_s>, 
                                                                                  HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                            ~coins_S)),
                                                                                                                                                'derived',
                                                                                                                                                '0'),
                                                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                     ~coins_e)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              '0'),
                                                                                                  's_finished',
                                                                                                  '0'),
                                                                                       <
                                                                                        <KEM_e_PK(~sk_e), 
                                                                                         ~r_c, 
                                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                         ~coins_S)
                                                                                        >, 
                                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                        ~coins_e), 
                                                                                        ~r_s>)
                                                                                 >)
                                                                           >)
                                                           ) @ #t )
                                                      case ORevealSessionKey
                                                      by contradiction /* from formulas */
                                                    next
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                            ~coins_S)),
                                                                                                                'derived',
                                                                                                                '0'),
                                                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                     ~coins_e)),
                                                                                         'derived', '0'),
                                                                              '0')
                                                             ) @ #vk.13 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                  ~coins_S)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                           ~coins_e)),
                                                                               'derived', '0')
                                                               ) @ #vk.15 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                         ~coins_S)),
                                                                                             'derived', '0'),
                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                  ~coins_e))
                                                                 ) @ #vk.17 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.19 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.21 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.21 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.23 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.23 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                                ) ▶₁ #tacceptj )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                    ) ▶₁ #tsk )
                        qed
                      qed
                    qed
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                     <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                              ) ▶₁ #tsid )
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                               <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                        ) ▶₁ #tcid )
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '5', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( ~tid, '5', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                      <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( SK( ~tid, '5', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                solve( FS( ~tid, '5', j, 'fs' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '5' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( Accept( tid_peer, '5' ) @ #tacceptjpeer )
                                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH',
                                                              'ClientAction2_part1', HS,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                  solve( CID( ~tid.1, '5',
                                                              <'CATS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               <ct_e, r_s>, 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>), 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               'c_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     <ct_e, r_s>, 
                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                               ~coins_S)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        z),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 '0'),
                                                                                     's_finished', '0'),
                                                                          <
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           ct_e, r_s>)
                                                                    >)
                                                              >
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ClientAction2_part1',
                                                                    HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                z),
                                                                    <KEM_s_PK(~sk_P), 
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                                        by contradiction /* from formulas */
                                                      qed
                                                    qed
                                                  next
                                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                                    solve( !Ltk( $S.2, KEM_s_PK(~sk_P), sk_S, 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                       'ServerAction1',
                                                                       <MS, 
                                                                        HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                             ~coins_S)),
                                                                                                                                 'derived',
                                                                                                                                 '0'),
                                                                                                                      z),
                                                                                                          'derived',
                                                                                                          '0'),
                                                                                               '0'),
                                                                                   'c_finished', '0')
                                                                       >,
                                                                       <KEM_s_PK(~sk_P), 
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>
                                                                ) ▶₁ #tcidpeer )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case KEMTLS_PDK_SAUTH_ServerAction2
                                              solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptjpeer )
                                                case KEMTLS_KEM_s_KeyGen
                                                solve( State( tid_peer, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                              <MS, fk_c>,
                                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, 
                                                               ct_e.1, r_s.1>
                                                       ) ▶₁ #tacceptjpeer )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( CID( ~tid.1, '5',
                                                              <'CATS', KEM_s_PK(~sk_P), 
                                                               <KEM_e_PK(~sk_e), ~r_c, 
                                                                KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                               <ct_e, r_s>, 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>), 
                                                               HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  z),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               'c_finished', '0'),
                                                                    <
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     <ct_e, r_s>, 
                                                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                               ~coins_S)),
                                                                                                                                   'derived',
                                                                                                                                   '0'),
                                                                                                                        z),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 '0'),
                                                                                     's_finished', '0'),
                                                                          <
                                                                           <KEM_e_PK(~sk_e), ~r_c, 
                                                                            KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                            ~coins_S)
                                                                           >, 
                                                                           ct_e, r_s>)
                                                                    >)
                                                              >
                                                         ) @ #tcidpeer )
                                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                                    solve( !Pk( $S.2, KEM_s_PK(~sk_P), 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      by solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                       'ClientAction2_part1',
                                                                       HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   z),
                                                                       <KEM_s_PK(~sk_P), 
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>
                                                                ) ▶₁ #tcidpeer )
                                                    qed
                                                  next
                                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                                    solve( !Ltk( $S.2, KEM_s_PK(~sk_P), sk_S, 'KEM_s'
                                                           ) ▶₀ #tcidpeer )
                                                      case KEMTLS_KEM_s_KeyGen
                                                      solve( State( ~tid.1, 'KEMTLS_PDK_SAUTH',
                                                                    'ServerAction1',
                                                                    <MS, 
                                                                     HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                          ~coins_S)),
                                                                                                                              'derived',
                                                                                                                              '0'),
                                                                                                                   z),
                                                                                                       'derived',
                                                                                                       '0'),
                                                                                            '0'),
                                                                                'c_finished', '0')
                                                                    >,
                                                                    <KEM_s_PK(~sk_P), 
                                                                     <KEM_e_PK(~sk_e), ~r_c, 
                                                                      KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                      ~coins_S)
                                                                     >, 
                                                                     ct_e, r_s>
                                                             ) ▶₁ #tcidpeer )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               'c_ap_traffic',
                                                                               <
                                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)
                                                                                >, 
                                                                                <
                                                                                 KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                 ~coins_e), 
                                                                                 ~r_s>, 
                                                                                HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                          ~coins_S)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                   ~coins_e)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            '0'),
                                                                                                's_finished',
                                                                                                '0'),
                                                                                     <
                                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)
                                                                                      >, 
                                                                                      KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e), 
                                                                                      ~r_s>), 
                                                                                HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                          ~coins_S)),
                                                                                                                                              'derived',
                                                                                                                                              '0'),
                                                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                   ~coins_e)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            '0'),
                                                                                                'c_finished',
                                                                                                '0'),
                                                                                     <
                                                                                      <KEM_e_PK(~sk_e), ~r_c, 
                                                                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)
                                                                                      >, 
                                                                                      <
                                                                                       KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e), 
                                                                                       ~r_s>, 
                                                                                      HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                                ~coins_S)),
                                                                                                                                                    'derived',
                                                                                                                                                    '0'),
                                                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                         ~coins_e)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  '0'),
                                                                                                      's_finished',
                                                                                                      '0'),
                                                                                           <
                                                                                            <KEM_e_PK(~sk_e), 
                                                                                             ~r_c, 
                                                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)
                                                                                            >, 
                                                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                            ~coins_e), 
                                                                                            ~r_s>)
                                                                                     >)
                                                                               >)
                                                               ) @ #t )
                                                          case ORevealSessionKey
                                                          by contradiction /* from formulas */
                                                        next
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.13 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                      ~coins_S)),
                                                                                                          'derived',
                                                                                                          '0'),
                                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                               ~coins_e)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                             ~coins_S)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                      ~coins_e))
                                                                     ) @ #vk.17 )
                                                                case c_HKDFExtract
                                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.19 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S))
                                                                         ) @ #vk.21 )
                                                                    case c_HKDFExtract
                                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)
                                                                           ) @ #vk.21 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      by solve( !KU( ~sk_e ) @ #vk.23 )
                                                                    next
                                                                      case c_KEM_e_Encaps_ss
                                                                      by solve( !KU( ~coins_e ) @ #vk.23 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                           <MS, fk_c>,
                                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                            r_s.1>
                                                    ) ▶₁ #tacceptj )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case KEMTLS_PDK_SAUTH_ServerAction2
                            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                               <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                        ) ▶₁ #tsk )
                            qed
                          qed
                        qed
                      qed
                    next
                      case KEMTLS_PDK_SAUTH_ServerAction2
                      solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                         <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                  ) ▶₁ #tsid )
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction2
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                   <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                            ) ▶₁ #tcid )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_1
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '1', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '1', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '1', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '1', j, 'fs' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '2', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '2', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                               <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '2', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '2', j, 'fs' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              next
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_3
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '3', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '3', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                               <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '3', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '3', j, 'fs' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              next
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_4
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '4', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '4', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                               <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '4', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '4', j, 'fs' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              next
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tpid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( CID( ~tid, '5', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                               <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                        ) ▶₁ #tcid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                            <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( SID( ~tid, '5', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                     <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                              ) ▶₁ #tsid )
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                  <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( SK( ~tid, '5', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                    ) ▶₁ #tsk )
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( FS( ~tid, '5', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                          ) ▶₁ #tfs )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( Accept( tid_owner, i ) @ #taccept )
    case KEMTLS_PDK_SAUTH_ClientAction1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( CID( ~tid, '1', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( SID( ~tid, '1', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction1
            solve( SK( ~tid, '1', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction1
              by solve( FS( ~tid, '1', j, 'fs' ) @ #tfs )
            qed
          qed
        qed
      next
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e, r_s>
                 ) ▶₁ #tpid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( CID( ~tid, '1', cid_i ) @ #tcid )
              case KEMTLS_PDK_SAUTH_ClientAction1
              solve( SID( ~tid, '1', sid_i ) @ #tsid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SK( ~tid, '1', sk_i ) @ #tsk )
                  case KEMTLS_PDK_SAUTH_ClientAction1
                  by solve( FS( ~tid, '1', j, 'fs' ) @ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                    <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '2', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SID( ~tid, '2', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( SK( ~tid, '2', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( FS( ~tid, '2', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '4' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( splitEqs(0) )
                                          case split_case_1
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Decaps(ct_e, ~sk_e)),
                                                                 'c_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  ct_e, r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Decaps(ct_e, ~sk_e))
                                                   ) @ #vk.5 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.13 )
                                                case c_KEM_e_Decaps
                                                by solve( !KU( ~sk_e ) @ #vk.14 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                             x)),
                                                                 'c_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                   ) @ #vk.5 )
                                              case c_HKDFExtract
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.5 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0')
                                                       ) @ #vk.12 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract('0',
                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S))
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                           ) @ #vk.14 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      by solve( !KU( ~sk_e ) @ #vk.18 )
                                                    next
                                                      case c_KEM_e_Encaps_ss
                                                      by solve( !KU( ~coins_e ) @ #vk.18 )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.4 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( splitEqs(10) )
                                                    case split_case_1
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.15 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case split_case_2
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.15 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case c_KEM_e_Encaps_ct
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.16 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.24 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  x)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.15 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         x)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.20 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                   ) @ #vk.20 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                              solve( !KU( ~sk_P ) @ #vk.23 )
                                                                case OCorruptLTK
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.23 )
                                                                  case c_HKDFExpand
                                                                  by contradiction /* cyclic */
                                                                qed
                                                              qed
                                                            next
                                                              case c_KEM_s_Encaps_ss
                                                              by solve( !KU( ~coins_S ) @ #vk.24 )
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '5' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( splitEqs(0) )
                                          case split_case_1
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Decaps(ct_e, ~sk_e)),
                                                                 'c_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  ct_e, r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Decaps(ct_e, ~sk_e))
                                                   ) @ #vk.5 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.13 )
                                                case c_KEM_e_Decaps
                                                by solve( !KU( ~sk_e ) @ #vk.14 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                             x)),
                                                                 'c_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                   ) @ #vk.5 )
                                              case c_HKDFExtract
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.5 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0')
                                                       ) @ #vk.12 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract('0',
                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S))
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                           ) @ #vk.14 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      by solve( !KU( ~sk_e ) @ #vk.18 )
                                                    next
                                                      case c_KEM_e_Encaps_ss
                                                      by solve( !KU( ~coins_e ) @ #vk.18 )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.4 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( splitEqs(10) )
                                                    case split_case_1
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.15 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case split_case_2
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.15 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case c_KEM_e_Encaps_ct
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.16 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.24 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  x)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.15 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         x)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.20 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                   ) @ #vk.20 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                              solve( !KU( ~sk_P ) @ #vk.23 )
                                                                case OCorruptLTK
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.23 )
                                                                  case c_HKDFExpand
                                                                  by contradiction /* cyclic */
                                                                qed
                                                              qed
                                                            next
                                                              case c_KEM_s_Encaps_ss
                                                              by solve( !KU( ~coins_S ) @ #vk.24 )
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                                ) ▶₁ #tacceptj )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '2', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( ~tid, '2', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( SK( ~tid, '2', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( FS( ~tid, '2', j, 'fs' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '4' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( splitEqs(0) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk.3 )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Decaps(ct_e, ~sk_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.14 )
                                                      case c_KEM_e_Decaps
                                                      by solve( !KU( ~sk_e ) @ #vk.15 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.10 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.12 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.14 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.14 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.18 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.18 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   x)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                        r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.4 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(11) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.6 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                              ~coins_S)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                       x)),
                                                                                           'derived', '0'),
                                                                                '0')
                                                               ) @ #vk.16 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.14 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                     ) @ #vk.16 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.27 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.20 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.22 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.23 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.24 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '5' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( splitEqs(0) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk.3 )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Decaps(ct_e, ~sk_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.14 )
                                                      case c_KEM_e_Decaps
                                                      by solve( !KU( ~sk_e ) @ #vk.15 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.10 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.12 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.14 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.14 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.18 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.18 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   x)),
                                                                       'c_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                        r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.4 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(11) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.6 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                              ~coins_S)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                       x)),
                                                                                           'derived', '0'),
                                                                                '0')
                                                               ) @ #vk.16 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.14 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                     ) @ #vk.16 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.27 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.20 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.22 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.23 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.24 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                           <MS, fk_c>,
                                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                            r_s.1>
                                                    ) ▶₁ #tacceptj )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction1',
                    <sk_e, dES>, <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '3', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction1
                solve( SID( ~tid, '3', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                  <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction1
                      solve( SK( ~tid, '3', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                        <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( FS( ~tid, '3', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '4' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( splitEqs(0) )
                                          case split_case_1
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Decaps(ct_e, ~sk_e)),
                                                                 's_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  ct_e, r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Decaps(ct_e, ~sk_e))
                                                   ) @ #vk.5 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.13 )
                                                case c_KEM_e_Decaps
                                                by solve( !KU( ~sk_e ) @ #vk.14 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                             x)),
                                                                 's_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                   ) @ #vk.5 )
                                              case c_HKDFExtract
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.5 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0')
                                                       ) @ #vk.12 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract('0',
                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S))
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                           ) @ #vk.14 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      by solve( !KU( ~sk_e ) @ #vk.18 )
                                                    next
                                                      case c_KEM_e_Encaps_ss
                                                      by solve( !KU( ~coins_e ) @ #vk.18 )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.4 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( splitEqs(10) )
                                                    case split_case_1
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.15 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case split_case_2
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.15 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case c_KEM_e_Encaps_ct
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.16 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.24 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  x)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.15 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         x)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.20 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                   ) @ #vk.20 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                              solve( !KU( ~sk_P ) @ #vk.23 )
                                                                case OCorruptLTK
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.23 )
                                                                  case c_HKDFExpand
                                                                  by contradiction /* cyclic */
                                                                qed
                                                              qed
                                                            next
                                                              case c_KEM_s_Encaps_ss
                                                              by solve( !KU( ~coins_S ) @ #vk.24 )
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '5' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( splitEqs(0) )
                                          case split_case_1
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Decaps(ct_e, ~sk_e)),
                                                                 's_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  ct_e, r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Decaps(ct_e, ~sk_e))
                                                   ) @ #vk.5 )
                                              case c_HKDFExtract
                                              solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.13 )
                                                case c_KEM_e_Decaps
                                                by solve( !KU( ~sk_e ) @ #vk.14 )
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                             x)),
                                                                 's_hs_traffic',
                                                                 <
                                                                  <KEM_e_PK(~sk_e), ~r_c, 
                                                                   KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                                                  >, 
                                                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #t )
                                            case ORevealSessionKey
                                            by contradiction /* from formulas */
                                          next
                                            case c_HKDFExpand
                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0'),
                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                   ) @ #vk.5 )
                                              case c_HKDFExtract
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.5 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                   ~coins_S)),
                                                                       'derived', '0')
                                                       ) @ #vk.12 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract('0',
                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S))
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                           ) @ #vk.14 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      by solve( !KU( ~sk_e ) @ #vk.18 )
                                                    next
                                                      case c_KEM_e_Encaps_ss
                                                      by solve( !KU( ~coins_e ) @ #vk.18 )
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.4 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( splitEqs(10) )
                                                    case split_case_1
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.15 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case split_case_2
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.15 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case c_KEM_e_Encaps_ct
                                                  solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)),
                                                                         'derived', '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract('0',
                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                            ~coins_S))
                                                           ) @ #vk.16 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                             ) @ #vk.14 )
                                                        case KEMTLS_PDK_SAUTH_ServerAction1
                                                        by solve( !KU( ~sk_e ) @ #vk.24 )
                                                      next
                                                        case c_KEM_e_Encaps_ss
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  x)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.15 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         x)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.20 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                        ~coins_S)
                                                                   ) @ #vk.20 )
                                                              case KEMTLS_PDK_SAUTH_ClientAction1
                                                              solve( !KU( ~sk_P ) @ #vk.23 )
                                                                case OCorruptLTK
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.23 )
                                                                  case c_HKDFExpand
                                                                  by contradiction /* cyclic */
                                                                qed
                                                              qed
                                                            next
                                                              case c_KEM_s_Encaps_ss
                                                              by solve( !KU( ~coins_S ) @ #vk.24 )
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                                ) ▶₁ #tacceptj )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '3', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( ~tid, '3', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( SK( ~tid, '3', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                            <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction1
                                solve( FS( ~tid, '3', j, 'fs' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '4' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( splitEqs(0) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk.3 )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Decaps(ct_e, ~sk_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.14 )
                                                      case c_KEM_e_Decaps
                                                      by solve( !KU( ~sk_e ) @ #vk.15 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.10 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.12 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.14 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.14 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.18 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.18 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   x)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                        r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.4 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(11) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.6 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                              ~coins_S)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                       x)),
                                                                                           'derived', '0'),
                                                                                '0')
                                                               ) @ #vk.16 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.14 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                     ) @ #vk.16 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.27 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.20 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.22 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.23 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.24 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '5' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( splitEqs(0) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk.3 )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        ct_e, r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Decaps(ct_e, ~sk_e))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.14 )
                                                      case c_KEM_e_Decaps
                                                      by solve( !KU( ~sk_e ) @ #vk.15 )
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk.3 )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                        ~coins_e), 
                                                                        ~r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.10 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.12 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.14 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.14 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.18 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.18 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   x)),
                                                                       's_hs_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                        r_s>)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.4 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(11) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.6 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         ~coins_e)),
                                                                                             'derived', '0'),
                                                                                  '0')
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.15 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.17 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.26 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.6 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                              ~coins_S)),
                                                                                                                  'derived',
                                                                                                                  '0'),
                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                       x)),
                                                                                           'derived', '0'),
                                                                                '0')
                                                               ) @ #vk.16 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.14 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.20 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                     ) @ #vk.16 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.27 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                          ~coins_S)),
                                                                                                              'derived',
                                                                                                              '0'),
                                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                   x)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.20 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.22 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.23 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.24 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                           <MS, fk_c>,
                                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                            r_s.1>
                                                    ) ▶₁ #tacceptj )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '4', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( SID( ~tid, '4', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( SK( ~tid, '4', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( FS( ~tid, '4', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '4' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( splitEqs(1) )
                                          case split_case_1
                                          solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Decaps(ct_e,
                                                                                                                      ~sk_e)),
                                                                                             'derived', '0'),
                                                                                  '0'),
                                                                      's_finished', '0'),
                                                           <
                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                            ct_e, r_s>)
                                                 ) @ #vk )
                                            case c_HMAC
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Decaps(ct_e,
                                                                                                                   ~sk_e)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   's_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <ct_e, r_s>, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Decaps(ct_e,
                                                                                                                                    ~sk_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          ct_e, r_s>)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Decaps(ct_e,
                                                                                                          ~sk_e)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.13 )
                                                case c_HKDFExtract
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Decaps(ct_e,
                                                                                                                       ~sk_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_finished', '0')
                                                       ) @ #vk.8 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Decaps(ct_e,
                                                                                                  ~sk_e)),
                                                                         'derived', '0')
                                                         ) @ #vk.15 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Decaps(ct_e, ~sk_e))
                                                           ) @ #vk.18 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.21 )
                                                        case c_KEM_e_Decaps
                                                        by solve( !KU( ~sk_e ) @ #vk.22 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         x)),
                                                                                             'derived', '0'),
                                                                                  '0'),
                                                                      's_finished', '0'),
                                                           <
                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #vk )
                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   's_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <
                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                     ~coins_e), 
                                                                     ~r_s>, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       ~coins_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.11 )
                                                case c_HKDFExtract
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'derived', '0')
                                                       ) @ #vk.13 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.15 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.17 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.19 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.21 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.21 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          next
                                            case c_HMAC
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      x)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   's_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s
                                                                    >, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       x)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          x), 
                                                                          r_s>)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             x)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.13 )
                                                case c_HKDFExtract
                                                solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.6 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( splitEqs(14) )
                                                    case split_case_1
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.8 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.16 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.22 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.24 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.26 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.26 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.28 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.28 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case split_case_2
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.8 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.16 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.22 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1), x)
                                                                 ) @ #vk.21 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.24 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.26 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.26 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.28 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.28 )
                                                                qed
                                                              qed
                                                            qed
                                                          next
                                                            case c_KEM_s_Encaps_ct
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.24 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.28 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.26 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.30 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.30 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case c_KEM_e_Encaps_ct
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                   ~coins_S)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                            x)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     '0'),
                                                                         's_finished', '0')
                                                         ) @ #vk.8 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       x)),
                                                                           'derived', '0')
                                                           ) @ #vk.15 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              x))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0')
                                                               ) @ #vk.21 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S))
                                                                 ) @ #vk.23 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                   ) @ #vk.23 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              by solve( !KU( ~sk_e ) @ #vk.29 )
                                                            next
                                                              case c_KEM_e_Encaps_ss
                                                              solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                     ) @ #vk.24 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                solve( !KU( ~sk_P ) @ #vk.25 )
                                                                  case OCorruptLTK
                                                                  by contradiction /* from formulas */
                                                                qed
                                                              next
                                                                case c_KEM_s_Encaps_ss
                                                                by solve( !KU( ~coins_S ) @ #vk.26 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            next
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '5' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( splitEqs(1) )
                                          case split_case_1
                                          solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Decaps(ct_e,
                                                                                                                      ~sk_e)),
                                                                                             'derived', '0'),
                                                                                  '0'),
                                                                      's_finished', '0'),
                                                           <
                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                            ct_e, r_s>)
                                                 ) @ #vk )
                                            case c_HMAC
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Decaps(ct_e,
                                                                                                                   ~sk_e)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   's_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <ct_e, r_s>, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Decaps(ct_e,
                                                                                                                                    ~sk_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          ct_e, r_s>)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Decaps(ct_e,
                                                                                                          ~sk_e)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.13 )
                                                case c_HKDFExtract
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Decaps(ct_e,
                                                                                                                       ~sk_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_finished', '0')
                                                       ) @ #vk.8 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Decaps(ct_e,
                                                                                                  ~sk_e)),
                                                                         'derived', '0')
                                                         ) @ #vk.15 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Decaps(ct_e, ~sk_e))
                                                           ) @ #vk.18 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.21 )
                                                        case c_KEM_e_Decaps
                                                        by solve( !KU( ~sk_e ) @ #vk.22 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         x)),
                                                                                             'derived', '0'),
                                                                                  '0'),
                                                                      's_finished', '0'),
                                                           <
                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #vk )
                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   's_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <
                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                     ~coins_e), 
                                                                     ~r_s>, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       ~coins_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.11 )
                                                case c_HKDFExtract
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'derived', '0')
                                                       ) @ #vk.13 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.15 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.17 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.19 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.21 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.21 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          next
                                            case c_HMAC
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      x)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   's_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s
                                                                    >, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       x)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          x), 
                                                                          r_s>)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             x)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.13 )
                                                case c_HKDFExtract
                                                solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.6 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( splitEqs(14) )
                                                    case split_case_1
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.8 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.16 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.22 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.24 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.26 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.26 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.28 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.28 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case split_case_2
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.8 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.16 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.22 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1), x)
                                                                 ) @ #vk.21 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.24 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.26 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.26 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.28 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.28 )
                                                                qed
                                                              qed
                                                            qed
                                                          next
                                                            case c_KEM_s_Encaps_ct
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.24 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.28 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.26 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.30 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.30 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case c_KEM_e_Encaps_ct
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                   ~coins_S)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                            x)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     '0'),
                                                                         's_finished', '0')
                                                         ) @ #vk.8 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       x)),
                                                                           'derived', '0')
                                                           ) @ #vk.15 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              x))
                                                             ) @ #vk.19 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0')
                                                               ) @ #vk.21 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S))
                                                                 ) @ #vk.23 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                   ) @ #vk.23 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              by solve( !KU( ~sk_e ) @ #vk.29 )
                                                            next
                                                              case c_KEM_e_Encaps_ss
                                                              solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                     ) @ #vk.24 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                solve( !KU( ~sk_P ) @ #vk.25 )
                                                                  case OCorruptLTK
                                                                  by contradiction /* from formulas */
                                                                qed
                                                              next
                                                                case c_KEM_s_Encaps_ss
                                                                by solve( !KU( ~coins_S ) @ #vk.26 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                                ) ▶₁ #tacceptj )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '4', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( ~tid, '4', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                      <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( SK( ~tid, '4', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                solve( FS( ~tid, '4', j, 'fs' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '4' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( splitEqs(1) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Decaps(ct_e,
                                                                                                                       ~sk_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <ct_e, r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Decaps(ct_e,
                                                                                                                                        ~sk_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              ct_e, r_s>)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Decaps(ct_e,
                                                                                                              ~sk_e)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.13 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Decaps(ct_e,
                                                                                                                           ~sk_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.8 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Decaps(ct_e,
                                                                                                      ~sk_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.15 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Decaps(ct_e, ~sk_e))
                                                               ) @ #vk.18 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.21 )
                                                            case c_KEM_e_Decaps
                                                            by solve( !KU( ~sk_e ) @ #vk.22 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                          ~coins_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <
                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                         ~coins_e), 
                                                                         ~r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           ~coins_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                              ~coins_e), 
                                                                              ~r_s>)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e))
                                                             ) @ #vk.15 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0')
                                                               ) @ #vk.17 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S))
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e)
                                                                   ) @ #vk.19 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              by solve( !KU( ~sk_e ) @ #vk.21 )
                                                            next
                                                              case c_KEM_e_Encaps_ss
                                                              by solve( !KU( ~coins_e ) @ #vk.21 )
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                          x)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                         r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           x)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                              x), 
                                                                              r_s>)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 x)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.13 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.6 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(15) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.8 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.16 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e))
                                                                   ) @ #vk.22 )
                                                              case c_HKDFExtract
                                                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0')
                                                                     ) @ #vk.24 )
                                                                case c_HKDFExpand
                                                                solve( !KU( HKDFExtract('0',
                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S))
                                                                       ) @ #vk.26 )
                                                                  case c_HKDFExtract
                                                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e)
                                                                         ) @ #vk.26 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                    by solve( !KU( ~sk_e ) @ #vk.28 )
                                                                  next
                                                                    case c_KEM_e_Encaps_ss
                                                                    by solve( !KU( ~coins_e ) @ #vk.28 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.8 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.16 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e))
                                                                   ) @ #vk.22 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1),
                                                                                          x)
                                                                     ) @ #vk.21 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.24 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S))
                                                                         ) @ #vk.26 )
                                                                    case c_HKDFExtract
                                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)
                                                                           ) @ #vk.26 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      by solve( !KU( ~sk_e ) @ #vk.28 )
                                                                    next
                                                                      case c_KEM_e_Encaps_ss
                                                                      by solve( !KU( ~coins_e ) @ #vk.28 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case c_KEM_s_Encaps_ct
                                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.24 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S))
                                                                         ) @ #vk.28 )
                                                                    case c_HKDFExtract
                                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)
                                                                           ) @ #vk.26 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      by solve( !KU( ~sk_e ) @ #vk.30 )
                                                                    next
                                                                      case c_KEM_e_Encaps_ss
                                                                      by solve( !KU( ~coins_e ) @ #vk.30 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.8 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                  ~coins_S)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                           x)),
                                                                               'derived', '0')
                                                               ) @ #vk.15 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                         ~coins_S)),
                                                                                             'derived', '0'),
                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                  x))
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.21 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            x)
                                                                       ) @ #vk.23 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.29 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.24 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.25 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.26 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                next
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '5' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( splitEqs(1) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Decaps(ct_e,
                                                                                                                       ~sk_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <ct_e, r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Decaps(ct_e,
                                                                                                                                        ~sk_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              ct_e, r_s>)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Decaps(ct_e,
                                                                                                              ~sk_e)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.13 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Decaps(ct_e,
                                                                                                                           ~sk_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.8 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Decaps(ct_e,
                                                                                                      ~sk_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.15 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Decaps(ct_e, ~sk_e))
                                                               ) @ #vk.18 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.21 )
                                                            case c_KEM_e_Decaps
                                                            by solve( !KU( ~sk_e ) @ #vk.22 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                          ~coins_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <
                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                         ~coins_e), 
                                                                         ~r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           ~coins_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                              ~coins_e), 
                                                                              ~r_s>)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.11 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e)),
                                                                           'derived', '0')
                                                           ) @ #vk.13 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e))
                                                             ) @ #vk.15 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0')
                                                               ) @ #vk.17 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S))
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e)
                                                                   ) @ #vk.19 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              by solve( !KU( ~sk_e ) @ #vk.21 )
                                                            next
                                                              case c_KEM_e_Encaps_ss
                                                              by solve( !KU( ~coins_e ) @ #vk.21 )
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                          x)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                         r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           x)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                              x), 
                                                                              r_s>)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 x)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.13 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.6 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(15) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.8 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.16 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e))
                                                                   ) @ #vk.22 )
                                                              case c_HKDFExtract
                                                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0')
                                                                     ) @ #vk.24 )
                                                                case c_HKDFExpand
                                                                solve( !KU( HKDFExtract('0',
                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S))
                                                                       ) @ #vk.26 )
                                                                  case c_HKDFExtract
                                                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e)
                                                                         ) @ #vk.26 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                    by solve( !KU( ~sk_e ) @ #vk.28 )
                                                                  next
                                                                    case c_KEM_e_Encaps_ss
                                                                    by solve( !KU( ~coins_e ) @ #vk.28 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.8 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.16 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e))
                                                                   ) @ #vk.22 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1),
                                                                                          x)
                                                                     ) @ #vk.21 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.24 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S))
                                                                         ) @ #vk.26 )
                                                                    case c_HKDFExtract
                                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)
                                                                           ) @ #vk.26 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      by solve( !KU( ~sk_e ) @ #vk.28 )
                                                                    next
                                                                      case c_KEM_e_Encaps_ss
                                                                      by solve( !KU( ~coins_e ) @ #vk.28 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case c_KEM_s_Encaps_ct
                                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.24 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S))
                                                                         ) @ #vk.28 )
                                                                    case c_HKDFExtract
                                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)
                                                                           ) @ #vk.26 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      by solve( !KU( ~sk_e ) @ #vk.30 )
                                                                    next
                                                                      case c_KEM_e_Encaps_ss
                                                                      by solve( !KU( ~coins_e ) @ #vk.30 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.8 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                  ~coins_S)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                           x)),
                                                                               'derived', '0')
                                                               ) @ #vk.15 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                         ~coins_S)),
                                                                                             'derived', '0'),
                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                  x))
                                                                 ) @ #vk.19 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.21 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.23 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            x)
                                                                       ) @ #vk.23 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.29 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.24 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.25 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.26 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                           <MS, fk_c>,
                                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                            r_s.1>
                                                    ) ▶₁ #tacceptj )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction1
          solve( CID( ~tid, '5', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( SID( ~tid, '5', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( SK( ~tid, '5', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                            solve( FS( ~tid, '5', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                              <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                       ) ▶₁ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                  solve( Accept( ~tid, '5' ) @ #tacceptj )
                                    case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                    solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                    <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                             ) ▶₁ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                        solve( splitEqs(1) )
                                          case split_case_1
                                          solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Decaps(ct_e,
                                                                                                                      ~sk_e)),
                                                                                             'derived', '0'),
                                                                                  '0'),
                                                                      's_finished', '0'),
                                                           <
                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                            ct_e, r_s>)
                                                 ) @ #vk )
                                            case c_HMAC
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Decaps(ct_e,
                                                                                                                   ~sk_e)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   'c_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <ct_e, r_s>, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Decaps(ct_e,
                                                                                                                                    ~sk_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          ct_e, r_s>), 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Decaps(ct_e,
                                                                                                                                    ~sk_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    'c_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          <ct_e, r_s>, 
                                                                          HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                    ~coins_S)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                                          ~sk_e)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      '0'),
                                                                                          's_finished', '0'),
                                                                               <
                                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)
                                                                                >, 
                                                                                ct_e, r_s>)
                                                                         >)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Decaps(ct_e,
                                                                                                          ~sk_e)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.14 )
                                                case c_HKDFExtract
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Decaps(ct_e,
                                                                                                                       ~sk_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       's_finished', '0')
                                                       ) @ #vk.9 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                            ~coins_S)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     KEM_e_Decaps(ct_e,
                                                                                                  ~sk_e)),
                                                                         'derived', '0')
                                                         ) @ #vk.17 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Decaps(ct_e, ~sk_e))
                                                           ) @ #vk.20 )
                                                      case c_HKDFExtract
                                                      solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.23 )
                                                        case c_KEM_e_Decaps
                                                        by solve( !KU( ~sk_e ) @ #vk.24 )
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        next
                                          case split_case_2
                                          solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                ~coins_S)),
                                                                                                                    'derived',
                                                                                                                    '0'),
                                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                         x)),
                                                                                             'derived', '0'),
                                                                                  '0'),
                                                                      's_finished', '0'),
                                                           <
                                                            <KEM_e_PK(~sk_e), ~r_c, 
                                                             KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                            KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                 ) @ #vk )
                                            case KEMTLS_PDK_SAUTH_ServerAction1
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      ~coins_e)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   'c_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <
                                                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                     ~coins_e), 
                                                                     ~r_s>, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       ~coins_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          ~coins_e), 
                                                                          ~r_s>), 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       ~coins_e)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    'c_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          <
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           ~coins_e), 
                                                                           ~r_s>, 
                                                                          HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                    ~coins_S)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                             ~coins_e)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      '0'),
                                                                                          's_finished', '0'),
                                                                               <
                                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)
                                                                                >, 
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                ~coins_e), 
                                                                                ~r_s>)
                                                                         >)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.12 )
                                                case c_HKDFExtract
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                          ~coins_S)),
                                                                                              'derived', '0'),
                                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                   ~coins_e)),
                                                                       'derived', '0')
                                                       ) @ #vk.15 )
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e))
                                                         ) @ #vk.17 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                       ~coins_S)),
                                                                           'derived', '0')
                                                           ) @ #vk.19 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S))
                                                             ) @ #vk.21 )
                                                        case c_HKDFExtract
                                                        solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)
                                                               ) @ #vk.21 )
                                                          case KEMTLS_PDK_SAUTH_ServerAction1
                                                          by solve( !KU( ~sk_e ) @ #vk.23 )
                                                        next
                                                          case c_KEM_e_Encaps_ss
                                                          by solve( !KU( ~coins_e ) @ #vk.23 )
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          next
                                            case c_HMAC
                                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                             ~coins_S)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                      x)),
                                                                                          'derived', '0'),
                                                                               '0'),
                                                                   'c_ap_traffic',
                                                                   <
                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)
                                                                    >, 
                                                                    <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s
                                                                    >, 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       x)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    's_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                          x), 
                                                                          r_s>), 
                                                                    HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                              ~coins_S)),
                                                                                                                                  'derived',
                                                                                                                                  '0'),
                                                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                       x)),
                                                                                                           'derived',
                                                                                                           '0'),
                                                                                                '0'),
                                                                                    'c_finished', '0'),
                                                                         <
                                                                          <KEM_e_PK(~sk_e), ~r_c, 
                                                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)
                                                                          >, 
                                                                          <
                                                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                           x), 
                                                                           r_s>, 
                                                                          HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                    ~coins_S)),
                                                                                                                                        'derived',
                                                                                                                                        '0'),
                                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                             x)),
                                                                                                                 'derived',
                                                                                                                 '0'),
                                                                                                      '0'),
                                                                                          's_finished', '0'),
                                                                               <
                                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                 ~coins_S)
                                                                                >, 
                                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                x), 
                                                                                r_s>)
                                                                         >)
                                                                   >)
                                                   ) @ #t )
                                              case ORevealSessionKey
                                              by contradiction /* from formulas */
                                            next
                                              case c_HKDFExpand
                                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             x)),
                                                                                 'derived', '0'),
                                                                      '0')
                                                     ) @ #vk.14 )
                                                case c_HKDFExtract
                                                solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.7 )
                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                  solve( splitEqs(14) )
                                                    case split_case_1
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.9 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.18 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.24 )
                                                          case c_HKDFExtract
                                                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                             ~coins_S)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.26 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S))
                                                                   ) @ #vk.28 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                          ~coins_e)
                                                                     ) @ #vk.28 )
                                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                                by solve( !KU( ~sk_e ) @ #vk.30 )
                                                              next
                                                                case c_KEM_e_Encaps_ss
                                                                by solve( !KU( ~coins_e ) @ #vk.30 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case split_case_2
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                              ~coins_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.9 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                         ~coins_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.18 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e))
                                                               ) @ #vk.24 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1), x)
                                                                 ) @ #vk.23 )
                                                            case KEMTLS_PDK_SAUTH_ClientAction1
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.26 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.28 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.28 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.30 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.30 )
                                                                qed
                                                              qed
                                                            qed
                                                          next
                                                            case c_KEM_s_Encaps_ct
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.26 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.30 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            ~coins_e)
                                                                       ) @ #vk.28 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.32 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  by solve( !KU( ~coins_e ) @ #vk.32 )
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case c_KEM_e_Encaps_ct
                                                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                   ~coins_S)),
                                                                                                                       'derived',
                                                                                                                       '0'),
                                                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                            x)),
                                                                                                'derived',
                                                                                                '0'),
                                                                                     '0'),
                                                                         's_finished', '0')
                                                         ) @ #vk.9 )
                                                    case c_HKDFExpand
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       x)),
                                                                           'derived', '0')
                                                           ) @ #vk.17 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              x))
                                                             ) @ #vk.21 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0')
                                                               ) @ #vk.23 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S))
                                                                 ) @ #vk.25 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)
                                                                   ) @ #vk.25 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              by solve( !KU( ~sk_e ) @ #vk.31 )
                                                            next
                                                              case c_KEM_e_Encaps_ss
                                                              solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                          ~coins_S)
                                                                     ) @ #vk.26 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                solve( !KU( ~sk_P ) @ #vk.27 )
                                                                  case OCorruptLTK
                                                                  by contradiction /* from formulas */
                                                                qed
                                                              next
                                                                case c_KEM_s_Encaps_ss
                                                                by solve( !KU( ~coins_S ) @ #vk.28 )
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case KEMTLS_PDK_SAUTH_ServerAction2
                                    solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                      case KEMTLS_KEM_s_KeyGen
                                      by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                                       <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                                ) ▶₁ #tacceptj )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                    ) ▶₁ #tsk )
                        qed
                      qed
                    qed
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                     <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                              ) ▶₁ #tsid )
                  qed
                qed
              qed
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                               <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                        ) ▶₁ #tcid )
            qed
          qed
        next
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #tpid )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( CID( ~tid, '5', cid_i ) @ #tcid )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tcid )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( ~tid, '5', sid_i ) @ #tsid )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                      <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                               ) ▶₁ #tsid )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( SK( ~tid, '5', sk_i ) @ #tsk )
                            case KEMTLS_PDK_SAUTH_ClientAction2_part2
                            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                            <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                     ) ▶₁ #tsk )
                                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                solve( FS( ~tid, '5', j, 'fs' ) @ #tfs )
                                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                    case KEMTLS_KEM_s_KeyGen
                                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                  <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                           ) ▶₁ #tfs )
                                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                      solve( Accept( ~tid, '5' ) @ #tacceptj )
                                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1
                                                        >
                                                 ) ▶₁ #tacceptj )
                                            case KEMTLS_PDK_SAUTH_ClientAction2_part1
                                            solve( splitEqs(1) )
                                              case split_case_1
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Decaps(ct_e,
                                                                                                                          ~sk_e)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                ct_e, r_s>)
                                                     ) @ #vk )
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Decaps(ct_e,
                                                                                                                       ~sk_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       'c_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <ct_e, r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Decaps(ct_e,
                                                                                                                                        ~sk_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              ct_e, r_s>), 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Decaps(ct_e,
                                                                                                                                        ~sk_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        'c_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              <ct_e, r_s>, 
                                                                              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                        ~coins_S)),
                                                                                                                                            'derived',
                                                                                                                                            '0'),
                                                                                                                                 KEM_e_Decaps(ct_e,
                                                                                                                                              ~sk_e)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          '0'),
                                                                                              's_finished',
                                                                                              '0'),
                                                                                   <
                                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)
                                                                                    >, 
                                                                                    ct_e, r_s>)
                                                                             >)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Decaps(ct_e,
                                                                                                              ~sk_e)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                     ~coins_S)),
                                                                                                                         'derived',
                                                                                                                         '0'),
                                                                                                              KEM_e_Decaps(ct_e,
                                                                                                                           ~sk_e)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       '0'),
                                                                           's_finished', '0')
                                                           ) @ #vk.9 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                ~coins_S)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         KEM_e_Decaps(ct_e,
                                                                                                      ~sk_e)),
                                                                             'derived', '0')
                                                             ) @ #vk.17 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Decaps(ct_e, ~sk_e))
                                                               ) @ #vk.20 )
                                                          case c_HKDFExtract
                                                          solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.23 )
                                                            case c_KEM_e_Decaps
                                                            by solve( !KU( ~sk_e ) @ #vk.24 )
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            next
                                              case split_case_2
                                              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                    ~coins_S)),
                                                                                                                        'derived',
                                                                                                                        '0'),
                                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                             x)),
                                                                                                 'derived',
                                                                                                 '0'),
                                                                                      '0'),
                                                                          's_finished', '0'),
                                                               <
                                                                <KEM_e_PK(~sk_e), ~r_c, 
                                                                 KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                                                     ) @ #vk )
                                                case KEMTLS_PDK_SAUTH_ServerAction1
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                          ~coins_e)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       'c_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <
                                                                         KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                         ~coins_e), 
                                                                         ~r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           ~coins_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                              ~coins_e), 
                                                                              ~r_s>), 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           ~coins_e)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        'c_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              <
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               ~coins_e), 
                                                                               ~r_s>, 
                                                                              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                        ~coins_S)),
                                                                                                                                            'derived',
                                                                                                                                            '0'),
                                                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                 ~coins_e)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          '0'),
                                                                                              's_finished',
                                                                                              '0'),
                                                                                   <
                                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)
                                                                                    >, 
                                                                                    KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e), 
                                                                                    ~r_s>)
                                                                             >)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 ~coins_e)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.12 )
                                                    case c_HKDFExtract
                                                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                              ~coins_S)),
                                                                                                  'derived',
                                                                                                  '0'),
                                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                       ~coins_e)),
                                                                           'derived', '0')
                                                           ) @ #vk.15 )
                                                      case c_HKDFExpand
                                                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e))
                                                             ) @ #vk.17 )
                                                        case c_HKDFExtract
                                                        solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                           ~coins_S)),
                                                                               'derived', '0')
                                                               ) @ #vk.19 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S))
                                                                 ) @ #vk.21 )
                                                            case c_HKDFExtract
                                                            solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                        ~coins_e)
                                                                   ) @ #vk.21 )
                                                              case KEMTLS_PDK_SAUTH_ServerAction1
                                                              by solve( !KU( ~sk_e ) @ #vk.23 )
                                                            next
                                                              case c_KEM_e_Encaps_ss
                                                              by solve( !KU( ~coins_e ) @ #vk.23 )
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case c_HMAC
                                                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                 ~coins_S)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                          x)),
                                                                                              'derived', '0'),
                                                                                   '0'),
                                                                       'c_ap_traffic',
                                                                       <
                                                                        <KEM_e_PK(~sk_e), ~r_c, 
                                                                         KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)
                                                                        >, 
                                                                        <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), 
                                                                         r_s>, 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           x)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        's_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                              x), 
                                                                              r_s>), 
                                                                        HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                  ~coins_S)),
                                                                                                                                      'derived',
                                                                                                                                      '0'),
                                                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                           x)),
                                                                                                               'derived',
                                                                                                               '0'),
                                                                                                    '0'),
                                                                                        'c_finished', '0'),
                                                                             <
                                                                              <KEM_e_PK(~sk_e), ~r_c, 
                                                                               KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                               ~coins_S)
                                                                              >, 
                                                                              <
                                                                               KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                               x), 
                                                                               r_s>, 
                                                                              HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                                        ~coins_S)),
                                                                                                                                            'derived',
                                                                                                                                            '0'),
                                                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                                 x)),
                                                                                                                     'derived',
                                                                                                                     '0'),
                                                                                                          '0'),
                                                                                              's_finished',
                                                                                              '0'),
                                                                                   <
                                                                                    <KEM_e_PK(~sk_e), ~r_c, 
                                                                                     KEM_s_Encaps_ct(KEM_s_PK(~sk_P),
                                                                                                     ~coins_S)
                                                                                    >, 
                                                                                    KEM_e_Encaps_ct(KEM_e_PK(~sk_e),
                                                                                                    x), 
                                                                                    r_s>)
                                                                             >)
                                                                       >)
                                                       ) @ #t )
                                                  case ORevealSessionKey
                                                  by contradiction /* from formulas */
                                                next
                                                  case c_HKDFExpand
                                                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                        ~coins_S)),
                                                                                                            'derived',
                                                                                                            '0'),
                                                                                                 KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                 x)),
                                                                                     'derived', '0'),
                                                                          '0')
                                                         ) @ #vk.14 )
                                                    case c_HKDFExtract
                                                    solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x)
                                                           ) @ #vk.7 )
                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                      solve( splitEqs(15) )
                                                        case split_case_1
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.9 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.18 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e))
                                                                   ) @ #vk.24 )
                                                              case c_HKDFExtract
                                                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0')
                                                                     ) @ #vk.26 )
                                                                case c_HKDFExpand
                                                                solve( !KU( HKDFExtract('0',
                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S))
                                                                       ) @ #vk.28 )
                                                                  case c_HKDFExtract
                                                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e)
                                                                         ) @ #vk.28 )
                                                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                                                    by solve( !KU( ~sk_e ) @ #vk.30 )
                                                                  next
                                                                    case c_KEM_e_Encaps_ss
                                                                    by solve( !KU( ~coins_e ) @ #vk.30 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      next
                                                        case split_case_2
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                         ~coins_S)),
                                                                                                                             'derived',
                                                                                                                             '0'),
                                                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                  ~coins_e)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           '0'),
                                                                               's_finished', '0')
                                                               ) @ #vk.9 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                    ~coins_S)),
                                                                                                        'derived',
                                                                                                        '0'),
                                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                             ~coins_e)),
                                                                                 'derived', '0')
                                                                 ) @ #vk.18 )
                                                            case c_HKDFExpand
                                                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                    ~coins_e))
                                                                   ) @ #vk.24 )
                                                              case c_HKDFExtract
                                                              solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1),
                                                                                          x)
                                                                     ) @ #vk.23 )
                                                                case KEMTLS_PDK_SAUTH_ClientAction1
                                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.26 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S))
                                                                         ) @ #vk.28 )
                                                                    case c_HKDFExtract
                                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)
                                                                           ) @ #vk.28 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      by solve( !KU( ~sk_e ) @ #vk.30 )
                                                                    next
                                                                      case c_KEM_e_Encaps_ss
                                                                      by solve( !KU( ~coins_e ) @ #vk.30 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              next
                                                                case c_KEM_s_Encaps_ct
                                                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0')
                                                                       ) @ #vk.26 )
                                                                  case c_HKDFExpand
                                                                  solve( !KU( HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S))
                                                                         ) @ #vk.30 )
                                                                    case c_HKDFExtract
                                                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)
                                                                           ) @ #vk.28 )
                                                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                                                      by solve( !KU( ~sk_e ) @ #vk.32 )
                                                                    next
                                                                      case c_KEM_e_Encaps_ss
                                                                      by solve( !KU( ~coins_e ) @ #vk.32 )
                                                                    qed
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    next
                                                      case c_KEM_e_Encaps_ct
                                                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                                       ~coins_S)),
                                                                                                                           'derived',
                                                                                                                           '0'),
                                                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                                                x)),
                                                                                                    'derived',
                                                                                                    '0'),
                                                                                         '0'),
                                                                             's_finished', '0')
                                                             ) @ #vk.9 )
                                                        case c_HKDFExpand
                                                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                                  ~coins_S)),
                                                                                                      'derived',
                                                                                                      '0'),
                                                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                           x)),
                                                                               'derived', '0')
                                                               ) @ #vk.17 )
                                                          case c_HKDFExpand
                                                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                         ~coins_S)),
                                                                                             'derived', '0'),
                                                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                  x))
                                                                 ) @ #vk.21 )
                                                            case c_HKDFExtract
                                                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                               ~coins_S)),
                                                                                   'derived', '0')
                                                                   ) @ #vk.23 )
                                                              case c_HKDFExpand
                                                              solve( !KU( HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S))
                                                                     ) @ #vk.25 )
                                                                case c_HKDFExtract
                                                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            x)
                                                                       ) @ #vk.25 )
                                                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                                                  by solve( !KU( ~sk_e ) @ #vk.31 )
                                                                next
                                                                  case c_KEM_e_Encaps_ss
                                                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)
                                                                         ) @ #vk.26 )
                                                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                                                    solve( !KU( ~sk_P ) @ #vk.27 )
                                                                      case OCorruptLTK
                                                                      by contradiction /* from formulas */
                                                                    qed
                                                                  next
                                                                    case c_KEM_s_Encaps_ss
                                                                    by solve( !KU( ~coins_S ) @ #vk.28 )
                                                                  qed
                                                                qed
                                                              qed
                                                            qed
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case KEMTLS_PDK_SAUTH_ServerAction2
                                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tacceptj )
                                          case KEMTLS_KEM_s_KeyGen
                                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1',
                                                           <MS, fk_c>,
                                                           <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, 
                                                            r_s.1>
                                                    ) ▶₁ #tacceptj )
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case KEMTLS_PDK_SAUTH_ServerAction2
                            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                              case KEMTLS_KEM_s_KeyGen
                              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                               <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                        ) ▶₁ #tsk )
                            qed
                          qed
                        qed
                      qed
                    next
                      case KEMTLS_PDK_SAUTH_ServerAction2
                      solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                        case KEMTLS_KEM_s_KeyGen
                        by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                         <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                                  ) ▶₁ #tsid )
                      qed
                    qed
                  qed
                qed
              next
                case KEMTLS_PDK_SAUTH_ServerAction2
                solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                   <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                            ) ▶₁ #tcid )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_1
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '1', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '1', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '1', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ServerAction1
              by solve( FS( ~tid, '1', j, 'fs' ) @ #tfs )
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '2', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '2', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                               <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '2', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '2', j, 'fs' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              next
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_3
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '3', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part1
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                             <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '3', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                               <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '3', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                                 <KEM_s_PK(~sk_P.1), pk_e.1, r_c.1, ct_S.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '3', j, 'fs' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              next
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_4
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( Peer( ~tid, pid ) @ #tpid )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #tpid )
        qed
      next
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( CID( ~tid, '4', cid_i ) @ #tcid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tcid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( SID( ~tid, '4', sid_i ) @ #tsid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                               <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                        ) ▶₁ #tsid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction1
            solve( SK( ~tid, '4', sk_i ) @ #tsk )
              case KEMTLS_PDK_SAUTH_ClientAction2_part2
              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                case KEMTLS_KEM_s_KeyGen
                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                          ) ▶₁ #tsk )
              qed
            next
              case KEMTLS_PDK_SAUTH_ServerAction1
              solve( FS( ~tid, '4', j, 'fs' ) @ #tfs )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              next
                case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                  case KEMTLS_KEM_s_KeyGen
                  by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                   <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                            ) ▶₁ #tfs )
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #taccept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid_owner, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #taccept )
        case KEMTLS_PDK_SAUTH_ServerAction1
        solve( Peer( ~tid, pid ) @ #tpid )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tpid )
            case KEMTLS_KEM_s_KeyGen
            by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                             <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                      ) ▶₁ #tpid )
          qed
        next
          case KEMTLS_PDK_SAUTH_ServerAction1
          solve( CID( ~tid, '5', cid_i ) @ #tcid )
            case KEMTLS_PDK_SAUTH_ClientAction2_part2
            solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                               <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                        ) ▶₁ #tcid )
            qed
          next
            case KEMTLS_PDK_SAUTH_ServerAction2
            solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tcid )
              case KEMTLS_KEM_s_KeyGen
              solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                            <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                     ) ▶₁ #tcid )
                case KEMTLS_PDK_SAUTH_ServerAction1
                solve( SID( ~tid, '5', sid_i ) @ #tsid )
                  case KEMTLS_PDK_SAUTH_ClientAction2_part2
                  solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                     <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                              ) ▶₁ #tsid )
                  qed
                next
                  case KEMTLS_PDK_SAUTH_ServerAction2
                  solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsid )
                    case KEMTLS_KEM_s_KeyGen
                    solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                  <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                           ) ▶₁ #tsid )
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( SK( ~tid, '5', sk_i ) @ #tsk )
                        case KEMTLS_PDK_SAUTH_ClientAction2_part2
                        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                    ) ▶₁ #tsk )
                        qed
                      next
                        case KEMTLS_PDK_SAUTH_ServerAction2
                        solve( !Ltk( $S.1, pk_S, sk_S, 'KEM_s' ) ▶₀ #tsk )
                          case KEMTLS_KEM_s_KeyGen
                          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                                        <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                 ) ▶₁ #tsk )
                            case KEMTLS_PDK_SAUTH_ServerAction1
                            solve( FS( ~tid, '5', j, 'fs' ) @ #tfs )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part2
                              solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tfs )
                                case KEMTLS_KEM_s_KeyGen
                                by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                                 <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                                          ) ▶₁ #tfs )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma malicious_acceptance:
  all-traces
  "∀ tid stage_target stage_accepted #t_accept #t_auth.
    (((Accept( tid, stage_target ) @ #t_accept) ∧
      (Auth( tid, stage_target, stage_accepted ) @ #t_auth)) ∧
     (¬(∃ S keytype #tt1 #t_corrupted.
         ((Peer( tid, S ) @ #tt1) ∧ (CorruptedLTK( S, keytype ) @ #t_corrupted)) ∧
         (#t_corrupted < #t_auth)))) ⇒
    ((∃ sid tid_other #tt1 #tt2.
       ((¬(tid = tid_other)) ∧ (SID( tid, stage_target, sid ) @ #tt1)) ∧
       (SID( tid_other, stage_target, sid ) @ #tt2)) ∧
     ((∃ #ttr. Replayable( tid, stage_target ) @ #ttr) ∨
      (¬(∃ sid tid_1 tid_2 #tt0 #tt1 #tt2.
          (((((¬(tid = tid_1)) ∧ (¬(tid = tid_2))) ∧ (¬(tid_1 = tid_2))) ∧
            (SID( tid, stage_target, sid ) @ #tt0)) ∧
           (SID( tid_1, stage_target, sid ) @ #tt1)) ∧
          (SID( tid_2, stage_target, sid ) @ #tt2)))))"
/*
guarded formula characterizing all counter-examples:
"∃ tid stage_target stage_accepted #t_accept #t_auth.
  (Accept( tid, stage_target ) @ #t_accept) ∧
  (Auth( tid, stage_target, stage_accepted ) @ #t_auth)
 ∧
  (∀ S keytype #tt1 #t_corrupted.
    (Peer( tid, S ) @ #tt1) ∧ (CorruptedLTK( S, keytype ) @ #t_corrupted)
   ⇒
    ¬(#t_corrupted < #t_auth)) ∧
  (((∀ sid tid_other #tt1 #tt2.
      (SID( tid, stage_target, sid ) @ #tt1) ∧
      (SID( tid_other, stage_target, sid ) @ #tt2)
     ⇒
      tid = tid_other) ∨
    ((∀ #ttr. (Replayable( tid, stage_target ) @ #ttr) ⇒ ⊥) ∧
     (∃ sid tid_1 tid_2 #tt0 #tt1 #tt2.
       (SID( tid, stage_target, sid ) @ #tt0) ∧
       (SID( tid_1, stage_target, sid ) @ #tt1) ∧
       (SID( tid_2, stage_target, sid ) @ #tt2)
      ∧
       (¬(tid = tid_1)) ∧ (¬(tid = tid_2)) ∧ (¬(tid_1 = tid_2))))))"
*/
simplify
solve( (∀ sid tid_other #tt1 #tt2.
         (SID( tid, stage_target, sid ) @ #tt1) ∧
         (SID( tid_other, stage_target, sid ) @ #tt2)
        ⇒
         tid = tid_other)  ∥
       ((∀ #ttr. (Replayable( tid, stage_target ) @ #ttr) ⇒ ⊥) ∧
        (∃ sid tid_1 tid_2 #tt0 #tt1 #tt2.
          (SID( tid, stage_target, sid ) @ #tt0) ∧
          (SID( tid_1, stage_target, sid ) @ #tt1) ∧
          (SID( tid_2, stage_target, sid ) @ #tt2)
         ∧
          (¬(tid = tid_1)) ∧ (¬(tid = tid_2)) ∧ (¬(tid_1 = tid_2)))) )
  case case_1
  solve( Accept( tid, stage_target ) @ #t_accept )
    case KEMTLS_PDK_SAUTH_ClientAction1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( Auth( ~tid, '1', stage_accepted ) @ #t_auth )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
          case KEMTLS_KEM_s_KeyGen
          solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                        <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e, r_s>
                 ) ▶₁ #t_auth )
            case KEMTLS_PDK_SAUTH_ClientAction2_part1
            solve( splitEqs(2) )
              case split_case_1
              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Decaps(ct_e, ~sk_e)),
                                                                 'derived', '0'),
                                                      '0'),
                                          's_finished', '0'),
                               <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                ct_e, r_s>)
                     ) @ #vk )
                case c_HMAC
                solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                 ~coins_S)),
                                                                                     'derived', '0'),
                                                                          KEM_e_Decaps(ct_e, ~sk_e)),
                                                              'derived', '0'),
                                                   '0'),
                                       's_finished', '0')
                       ) @ #vk.5 )
                  case c_HKDFExpand
                  solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                        KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                        ~coins_S)),
                                                                            'derived', '0'),
                                                                 KEM_e_Decaps(ct_e, ~sk_e)),
                                                     'derived', '0'),
                                          '0')
                         ) @ #vk.11 )
                    case c_HKDFExtract
                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                              ~coins_S)),
                                                                  'derived', '0'),
                                                       KEM_e_Decaps(ct_e, ~sk_e)),
                                           'derived', '0')
                           ) @ #vk.14 )
                      case c_HKDFExpand
                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                     ~coins_S)),
                                                         'derived', '0'),
                                              KEM_e_Decaps(ct_e, ~sk_e))
                             ) @ #vk.15 )
                        case c_HKDFExtract
                        solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.18 )
                          case c_KEM_e_Decaps
                          by solve( !KU( ~sk_e ) @ #vk.19 )
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case split_case_2
              solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                    ~coins_S)),
                                                                                        'derived', '0'),
                                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                             x)),
                                                                 'derived', '0'),
                                                      '0'),
                                          's_finished', '0'),
                               <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                     ) @ #vk )
                case c_HMAC
                solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.3 )
                  case KEMTLS_PDK_SAUTH_ServerAction1
                  solve( splitEqs(4) )
                    case split_case_1
                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e)),
                                                                  'derived', '0'),
                                                       '0'),
                                           's_finished', '0')
                           ) @ #vk.5 )
                      case c_HKDFExpand
                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)),
                                                                                'derived', '0'),
                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                     ~coins_e)),
                                                         'derived', '0'),
                                              '0')
                             ) @ #vk.15 )
                        case c_HKDFExtract
                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)),
                                                                      'derived', '0'),
                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                               'derived', '0')
                               ) @ #vk.18 )
                          case c_HKDFExpand
                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)),
                                                             'derived', '0'),
                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                 ) @ #vk.19 )
                            case c_HKDFExtract
                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                   'derived', '0')
                                   ) @ #vk.21 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                     ) @ #vk.23 )
                                case c_HKDFExtract
                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.23 )
                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                  by solve( !KU( ~sk_e ) @ #vk.25 )
                                next
                                  case c_KEM_e_Encaps_ss
                                  by solve( !KU( ~coins_e ) @ #vk.25 )
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case split_case_2
                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              ~coins_e)),
                                                                  'derived', '0'),
                                                       '0'),
                                           's_finished', '0')
                           ) @ #vk.5 )
                      case c_HKDFExpand
                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)),
                                                                                'derived', '0'),
                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                     ~coins_e)),
                                                         'derived', '0'),
                                              '0')
                             ) @ #vk.15 )
                        case c_HKDFExtract
                        solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1), x) ) @ #vk.15 )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 'derived', '0')
                                 ) @ #vk.18 )
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.19 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.21 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.23 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.23 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.25 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.25 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_KEM_s_Encaps_ct
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 'derived', '0')
                                 ) @ #vk.18 )
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.21 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.23 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.25 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.25 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.27 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.27 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_KEM_e_Encaps_ct
                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                            x)),
                                                                'derived', '0'),
                                                     '0'),
                                         's_finished', '0')
                         ) @ #vk.5 )
                    case c_HKDFExpand
                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S)),
                                                                              'derived', '0'),
                                                                   KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)),
                                                       'derived', '0'),
                                            '0')
                           ) @ #vk.12 )
                      case c_HKDFExtract
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)),
                                                                    'derived', '0'),
                                                         KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)),
                                             'derived', '0')
                             ) @ #vk.15 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)),
                                                           'derived', '0'),
                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                               ) @ #vk.16 )
                          case c_HKDFExtract
                          solve( !KU( HKDFExpand(HKDFExtract('0',
                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                 'derived', '0')
                                 ) @ #vk.18 )
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                   ) @ #vk.20 )
                              case c_HKDFExtract
                              solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x) ) @ #vk.20 )
                                case KEMTLS_PDK_SAUTH_ServerAction1
                                by solve( !KU( ~sk_e ) @ #vk.26 )
                              next
                                case c_KEM_e_Encaps_ss
                                solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.21 )
                                  case KEMTLS_PDK_SAUTH_ClientAction1
                                  solve( !KU( ~sk_P ) @ #vk.22 )
                                    case OCorruptLTK
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_KEM_s_Encaps_ss
                                  by solve( !KU( ~coins_S ) @ #vk.23 )
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                    <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Auth( ~tid, '2', stage_accepted ) @ #t_auth )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #t_auth )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( splitEqs(0) )
                case split_case_1
                solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                      ~coins_S)),
                                                                                          'derived', '0'),
                                                                               KEM_e_Decaps(ct_e, ~sk_e)),
                                                                   'derived', '0'),
                                                        '0'),
                                            's_finished', '0'),
                                 <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                  ct_e, r_s>)
                       ) @ #vk.3 )
                  case c_HMAC
                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Decaps(ct_e, ~sk_e)),
                                                                'derived', '0'),
                                                     '0'),
                                         's_finished', '0')
                         ) @ #vk.5 )
                    case c_HKDFExpand
                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S)),
                                                                              'derived', '0'),
                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                       'derived', '0'),
                                            '0')
                           ) @ #vk.11 )
                      case c_HKDFExtract
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)),
                                                                    'derived', '0'),
                                                         KEM_e_Decaps(ct_e, ~sk_e)),
                                             'derived', '0')
                             ) @ #vk.14 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)),
                                                           'derived', '0'),
                                                KEM_e_Decaps(ct_e, ~sk_e))
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.18 )
                            case c_KEM_e_Decaps
                            by solve( !KU( ~sk_e ) @ #vk.19 )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case split_case_2
                solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                      ~coins_S)),
                                                                                          'derived', '0'),
                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                               x)),
                                                                   'derived', '0'),
                                                        '0'),
                                            's_finished', '0'),
                                 <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                       ) @ #vk.3 )
                  case c_HMAC
                  solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.3 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( splitEqs(4) )
                      case split_case_1
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)),
                                                                    'derived', '0'),
                                                         '0'),
                                             's_finished', '0')
                             ) @ #vk.5 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                              ~coins_S)),
                                                                                  'derived', '0'),
                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                       ~coins_e)),
                                                           'derived', '0'),
                                                '0')
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 'derived', '0')
                                 ) @ #vk.18 )
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.19 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.21 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.23 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.23 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.25 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.25 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case split_case_2
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)),
                                                                    'derived', '0'),
                                                         '0'),
                                             's_finished', '0')
                             ) @ #vk.5 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                              ~coins_S)),
                                                                                  'derived', '0'),
                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                       ~coins_e)),
                                                           'derived', '0'),
                                                '0')
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1), x) ) @ #vk.15 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)),
                                                                          'derived', '0'),
                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)),
                                                                 'derived', '0'),
                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                     ) @ #vk.19 )
                                case c_HKDFExtract
                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                   ~coins_S)),
                                                       'derived', '0')
                                       ) @ #vk.21 )
                                  case c_HKDFExpand
                                  solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                         ) @ #vk.23 )
                                    case c_HKDFExtract
                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.23 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      by solve( !KU( ~sk_e ) @ #vk.25 )
                                    next
                                      case c_KEM_e_Encaps_ss
                                      by solve( !KU( ~coins_e ) @ #vk.25 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_KEM_s_Encaps_ct
                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)),
                                                                          'derived', '0'),
                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)),
                                                                 'derived', '0'),
                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                     ) @ #vk.21 )
                                case c_HKDFExtract
                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                   ~coins_S)),
                                                       'derived', '0')
                                       ) @ #vk.23 )
                                  case c_HKDFExpand
                                  solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                         ) @ #vk.25 )
                                    case c_HKDFExtract
                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.25 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      by solve( !KU( ~sk_e ) @ #vk.27 )
                                    next
                                      case c_KEM_e_Encaps_ss
                                      by solve( !KU( ~coins_e ) @ #vk.27 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_KEM_e_Encaps_ct
                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              x)),
                                                                  'derived', '0'),
                                                       '0'),
                                           's_finished', '0')
                           ) @ #vk.5 )
                      case c_HKDFExpand
                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)),
                                                                                'derived', '0'),
                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)),
                                                         'derived', '0'),
                                              '0')
                             ) @ #vk.12 )
                        case c_HKDFExtract
                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)),
                                                                      'derived', '0'),
                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)),
                                               'derived', '0')
                               ) @ #vk.15 )
                          case c_HKDFExpand
                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)),
                                                             'derived', '0'),
                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                 ) @ #vk.16 )
                            case c_HKDFExtract
                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                     ) @ #vk.20 )
                                case c_HKDFExtract
                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x) ) @ #vk.20 )
                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                next
                                  case c_KEM_e_Encaps_ss
                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.21 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( !KU( ~sk_P ) @ #vk.22 )
                                      case OCorruptLTK
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_KEM_s_Encaps_ss
                                    by solve( !KU( ~coins_S ) @ #vk.23 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                    <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Auth( ~tid, '3', stage_accepted ) @ #t_auth )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #t_auth )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( splitEqs(0) )
                case split_case_1
                solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                      ~coins_S)),
                                                                                          'derived', '0'),
                                                                               KEM_e_Decaps(ct_e, ~sk_e)),
                                                                   'derived', '0'),
                                                        '0'),
                                            's_finished', '0'),
                                 <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                  ct_e, r_s>)
                       ) @ #vk.3 )
                  case c_HMAC
                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Decaps(ct_e, ~sk_e)),
                                                                'derived', '0'),
                                                     '0'),
                                         's_finished', '0')
                         ) @ #vk.5 )
                    case c_HKDFExpand
                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S)),
                                                                              'derived', '0'),
                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                       'derived', '0'),
                                            '0')
                           ) @ #vk.11 )
                      case c_HKDFExtract
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)),
                                                                    'derived', '0'),
                                                         KEM_e_Decaps(ct_e, ~sk_e)),
                                             'derived', '0')
                             ) @ #vk.14 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)),
                                                           'derived', '0'),
                                                KEM_e_Decaps(ct_e, ~sk_e))
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.18 )
                            case c_KEM_e_Decaps
                            by solve( !KU( ~sk_e ) @ #vk.19 )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case split_case_2
                solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                      ~coins_S)),
                                                                                          'derived', '0'),
                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                               x)),
                                                                   'derived', '0'),
                                                        '0'),
                                            's_finished', '0'),
                                 <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                       ) @ #vk.3 )
                  case c_HMAC
                  solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.3 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( splitEqs(4) )
                      case split_case_1
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)),
                                                                    'derived', '0'),
                                                         '0'),
                                             's_finished', '0')
                             ) @ #vk.5 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                              ~coins_S)),
                                                                                  'derived', '0'),
                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                       ~coins_e)),
                                                           'derived', '0'),
                                                '0')
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 'derived', '0')
                                 ) @ #vk.18 )
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.19 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.21 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.23 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.23 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.25 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.25 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case split_case_2
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)),
                                                                    'derived', '0'),
                                                         '0'),
                                             's_finished', '0')
                             ) @ #vk.5 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                              ~coins_S)),
                                                                                  'derived', '0'),
                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                       ~coins_e)),
                                                           'derived', '0'),
                                                '0')
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1), x) ) @ #vk.15 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)),
                                                                          'derived', '0'),
                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)),
                                                                 'derived', '0'),
                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                     ) @ #vk.19 )
                                case c_HKDFExtract
                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                   ~coins_S)),
                                                       'derived', '0')
                                       ) @ #vk.21 )
                                  case c_HKDFExpand
                                  solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                         ) @ #vk.23 )
                                    case c_HKDFExtract
                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.23 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      by solve( !KU( ~sk_e ) @ #vk.25 )
                                    next
                                      case c_KEM_e_Encaps_ss
                                      by solve( !KU( ~coins_e ) @ #vk.25 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_KEM_s_Encaps_ct
                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)),
                                                                          'derived', '0'),
                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)),
                                                                 'derived', '0'),
                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                     ) @ #vk.21 )
                                case c_HKDFExtract
                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                   ~coins_S)),
                                                       'derived', '0')
                                       ) @ #vk.23 )
                                  case c_HKDFExpand
                                  solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                         ) @ #vk.25 )
                                    case c_HKDFExtract
                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.25 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      by solve( !KU( ~sk_e ) @ #vk.27 )
                                    next
                                      case c_KEM_e_Encaps_ss
                                      by solve( !KU( ~coins_e ) @ #vk.27 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_KEM_e_Encaps_ct
                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              x)),
                                                                  'derived', '0'),
                                                       '0'),
                                           's_finished', '0')
                           ) @ #vk.5 )
                      case c_HKDFExpand
                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)),
                                                                                'derived', '0'),
                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)),
                                                         'derived', '0'),
                                              '0')
                             ) @ #vk.12 )
                        case c_HKDFExtract
                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)),
                                                                      'derived', '0'),
                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)),
                                               'derived', '0')
                               ) @ #vk.15 )
                          case c_HKDFExpand
                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)),
                                                             'derived', '0'),
                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                 ) @ #vk.16 )
                            case c_HKDFExtract
                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                     ) @ #vk.20 )
                                case c_HKDFExtract
                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x) ) @ #vk.20 )
                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                next
                                  case c_KEM_e_Encaps_ss
                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.21 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( !KU( ~sk_P ) @ #vk.22 )
                                      case OCorruptLTK
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_KEM_s_Encaps_ss
                                    by solve( !KU( ~coins_S ) @ #vk.23 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Auth( ~tid, '4', stage_accepted ) @ #t_auth )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #t_auth )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( splitEqs(1) )
                case split_case_1
                solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                      ~coins_S)),
                                                                                          'derived', '0'),
                                                                               KEM_e_Decaps(ct_e, ~sk_e)),
                                                                   'derived', '0'),
                                                        '0'),
                                            's_finished', '0'),
                                 <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                  ct_e, r_s>)
                       ) @ #vk )
                  case c_HMAC
                  solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                   ~coins_S)),
                                                                                       'derived', '0'),
                                                                            KEM_e_Decaps(ct_e, ~sk_e)),
                                                                'derived', '0'),
                                                     '0'),
                                         's_finished', '0')
                         ) @ #vk.5 )
                    case c_HKDFExpand
                    solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                          KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                          ~coins_S)),
                                                                              'derived', '0'),
                                                                   KEM_e_Decaps(ct_e, ~sk_e)),
                                                       'derived', '0'),
                                            '0')
                           ) @ #vk.11 )
                      case c_HKDFExtract
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                ~coins_S)),
                                                                    'derived', '0'),
                                                         KEM_e_Decaps(ct_e, ~sk_e)),
                                             'derived', '0')
                             ) @ #vk.14 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                       ~coins_S)),
                                                           'derived', '0'),
                                                KEM_e_Decaps(ct_e, ~sk_e))
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( KEM_e_Decaps(ct_e, ~sk_e) ) @ #vk.18 )
                            case c_KEM_e_Decaps
                            by solve( !KU( ~sk_e ) @ #vk.19 )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case split_case_2
                solve( !KU( HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                      ~coins_S)),
                                                                                          'derived', '0'),
                                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                               x)),
                                                                   'derived', '0'),
                                                        '0'),
                                            's_finished', '0'),
                                 <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                  KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x), r_s>)
                       ) @ #vk )
                  case c_HMAC
                  solve( !KU( KEM_e_Encaps_ct(KEM_e_PK(~sk_e), x) ) @ #vk.3 )
                    case KEMTLS_PDK_SAUTH_ServerAction1
                    solve( splitEqs(5) )
                      case split_case_1
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)),
                                                                    'derived', '0'),
                                                         '0'),
                                             's_finished', '0')
                             ) @ #vk.5 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                              ~coins_S)),
                                                                                  'derived', '0'),
                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                       ~coins_e)),
                                                           'derived', '0'),
                                                '0')
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                    KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                    ~coins_S)),
                                                                        'derived', '0'),
                                                             KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                 'derived', '0')
                                 ) @ #vk.18 )
                            case c_HKDFExpand
                            solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                           ~coins_S)),
                                                               'derived', '0'),
                                                    KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                   ) @ #vk.19 )
                              case c_HKDFExtract
                              solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                 KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                     'derived', '0')
                                     ) @ #vk.21 )
                                case c_HKDFExpand
                                solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                       ) @ #vk.23 )
                                  case c_HKDFExtract
                                  solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.23 )
                                    case KEMTLS_PDK_SAUTH_ServerAction1
                                    by solve( !KU( ~sk_e ) @ #vk.25 )
                                  next
                                    case c_KEM_e_Encaps_ss
                                    by solve( !KU( ~coins_e ) @ #vk.25 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case split_case_2
                      solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                       KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                       ~coins_S)),
                                                                                           'derived', '0'),
                                                                                KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                ~coins_e)),
                                                                    'derived', '0'),
                                                         '0'),
                                             's_finished', '0')
                             ) @ #vk.5 )
                        case c_HKDFExpand
                        solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                              KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                              ~coins_S)),
                                                                                  'derived', '0'),
                                                                       KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                       ~coins_e)),
                                                           'derived', '0'),
                                                '0')
                               ) @ #vk.15 )
                          case c_HKDFExtract
                          solve( !KU( KEM_s_Encaps_ct(KEM_s_PK(~sk_P.1), x) ) @ #vk.15 )
                            case KEMTLS_PDK_SAUTH_ClientAction1
                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)),
                                                                          'derived', '0'),
                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)),
                                                                 'derived', '0'),
                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                     ) @ #vk.19 )
                                case c_HKDFExtract
                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                   ~coins_S)),
                                                       'derived', '0')
                                       ) @ #vk.21 )
                                  case c_HKDFExpand
                                  solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                         ) @ #vk.23 )
                                    case c_HKDFExtract
                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.23 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      by solve( !KU( ~sk_e ) @ #vk.25 )
                                    next
                                      case c_KEM_e_Encaps_ss
                                      by solve( !KU( ~coins_e ) @ #vk.25 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case c_KEM_s_Encaps_ct
                            solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                      KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                      ~coins_S)),
                                                                          'derived', '0'),
                                                               KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)),
                                                                 'derived', '0'),
                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e))
                                     ) @ #vk.21 )
                                case c_HKDFExtract
                                solve( !KU( HKDFExpand(HKDFExtract('0',
                                                                   KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                   ~coins_S)),
                                                       'derived', '0')
                                       ) @ #vk.23 )
                                  case c_HKDFExpand
                                  solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                         ) @ #vk.25 )
                                    case c_HKDFExtract
                                    solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e) ) @ #vk.25 )
                                      case KEMTLS_PDK_SAUTH_ServerAction1
                                      by solve( !KU( ~sk_e ) @ #vk.27 )
                                    next
                                      case c_KEM_e_Encaps_ss
                                      by solve( !KU( ~coins_e ) @ #vk.27 )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_KEM_e_Encaps_ct
                    solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                     KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                     ~coins_S)),
                                                                                         'derived', '0'),
                                                                              KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                              x)),
                                                                  'derived', '0'),
                                                       '0'),
                                           's_finished', '0')
                           ) @ #vk.5 )
                      case c_HKDFExpand
                      solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                            KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                            ~coins_S)),
                                                                                'derived', '0'),
                                                                     KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)),
                                                         'derived', '0'),
                                              '0')
                             ) @ #vk.12 )
                        case c_HKDFExtract
                        solve( !KU( HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                  KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                  ~coins_S)),
                                                                      'derived', '0'),
                                                           KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x)),
                                               'derived', '0')
                               ) @ #vk.15 )
                          case c_HKDFExpand
                          solve( !KU( HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)),
                                                             'derived', '0'),
                                                  KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x))
                                 ) @ #vk.16 )
                            case c_HKDFExtract
                            solve( !KU( HKDFExpand(HKDFExtract('0',
                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S)),
                                                   'derived', '0')
                                   ) @ #vk.18 )
                              case c_HKDFExpand
                              solve( !KU( HKDFExtract('0', KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S))
                                     ) @ #vk.20 )
                                case c_HKDFExtract
                                solve( !KU( KEM_e_Encaps_ss(KEM_e_PK(~sk_e), x) ) @ #vk.20 )
                                  case KEMTLS_PDK_SAUTH_ServerAction1
                                  by solve( !KU( ~sk_e ) @ #vk.26 )
                                next
                                  case c_KEM_e_Encaps_ss
                                  solve( !KU( KEM_s_Encaps_ss(KEM_s_PK(~sk_P), ~coins_S) ) @ #vk.21 )
                                    case KEMTLS_PDK_SAUTH_ClientAction1
                                    solve( !KU( ~sk_P ) @ #vk.22 )
                                      case OCorruptLTK
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_KEM_s_Encaps_ss
                                    by solve( !KU( ~coins_S ) @ #vk.23 )
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        by solve( Auth( ~tid, '5', stage_accepted ) @ #t_auth )
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_1
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( Auth( ~tid, '1', stage_accepted ) @ #t_auth )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #t_auth )
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( Auth( ~tid, '2', stage_accepted ) @ #t_auth )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #t_auth )
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_3
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( Auth( ~tid, '3', stage_accepted ) @ #t_auth )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #t_auth )
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_4
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( Auth( ~tid, '4', stage_accepted ) @ #t_auth )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #t_auth )
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ServerAction1
        by solve( Auth( ~tid, '5', stage_accepted ) @ #t_auth )
      qed
    qed
  qed
next
  case case_2
  solve( Accept( tid, stage_target ) @ #t_accept )
    case KEMTLS_PDK_SAUTH_ClientAction1
    by contradiction /* from formulas */
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                    <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Auth( ~tid, '2', stage_accepted ) @ #t_auth )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #t_auth )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( SID( ~tid, '2', sid ) @ #tt0 )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tt0 )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tt0 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( tid_1, '2',
                                <'CHTS', KEM_s_PK(~sk_P), 
                                 <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                 ct_e, r_s>
                           ) @ #tt1 )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tt1 )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( tid_1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                               ) ▶₁ #tt1 )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( !Ltk( $S.1, KEM_s_PK(~sk_P), sk_S, 'KEM_s' ) ▶₁ #tt1 )
                        case KEMTLS_KEM_s_KeyGen
                        solve( SID( tid_2, '2',
                                    <'CHTS', KEM_s_PK(~sk_P), 
                                     <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>
                               ) @ #tt2 )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tt2 )
                            case KEMTLS_KEM_s_KeyGen
                            solve( State( tid_2, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                          <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                   ) ▶₁ #tt2 )
                              case KEMTLS_PDK_SAUTH_ClientAction1
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case KEMTLS_PDK_SAUTH_ServerAction1
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part1_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e, dES>,
                    <KEM_s_PK(~sk_P), pk_e, r_c, ct_S>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ClientAction1
        solve( Auth( ~tid, '3', stage_accepted ) @ #t_auth )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #t_auth )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( SID( ~tid, '3', sid ) @ #tt0 )
                case KEMTLS_PDK_SAUTH_ClientAction2_part1
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tt0 )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                <KEM_s_PK(~sk_P.1), pk_e, r_c.1, ct_S>
                         ) ▶₁ #tt0 )
                    case KEMTLS_PDK_SAUTH_ClientAction1
                    solve( SID( tid_1, '3',
                                <'SHTS', KEM_s_PK(~sk_P), 
                                 <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                 ct_e, r_s>
                           ) @ #tt1 )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part1
                      solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tt1 )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( tid_1, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                      <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                       KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                               ) ▶₁ #tt1 )
                          case KEMTLS_PDK_SAUTH_ClientAction1
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( !Ltk( $S.1, KEM_s_PK(~sk_P), sk_S, 'KEM_s' ) ▶₁ #tt1 )
                        case KEMTLS_KEM_s_KeyGen
                        solve( SID( tid_2, '3',
                                    <'SHTS', KEM_s_PK(~sk_P), 
                                     <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                     KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>
                               ) @ #tt2 )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tt2 )
                            case KEMTLS_KEM_s_KeyGen
                            solve( State( tid_2, 'KEMTLS_PDK_SAUTH', 'ClientAction1', <sk_e.1, dES>,
                                          <KEM_s_PK(~sk_P), KEM_e_PK(~sk_e), ~r_c, 
                                           KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>
                                   ) ▶₁ #tt2 )
                              case KEMTLS_PDK_SAUTH_ClientAction1
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case KEMTLS_PDK_SAUTH_ServerAction1
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_1
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        solve( Auth( ~tid, '4', stage_accepted ) @ #t_auth )
          case KEMTLS_PDK_SAUTH_ClientAction2_part2
          solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
            case KEMTLS_KEM_s_KeyGen
            solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                          <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                   ) ▶₁ #t_auth )
              case KEMTLS_PDK_SAUTH_ClientAction2_part1
              solve( SID( ~tid, '4', sid ) @ #tt0 )
                case KEMTLS_PDK_SAUTH_ClientAction2_part2
                solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #tt0 )
                  case KEMTLS_KEM_s_KeyGen
                  solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                                <KEM_s_PK(~sk_P.1), <pk_e, r_c.1, ct_S>, ct_e.1, r_s.1>
                         ) ▶₁ #tt0 )
                    case KEMTLS_PDK_SAUTH_ClientAction2_part1
                    solve( SID( tid_1, '4',
                                <'SATS', KEM_s_PK(~sk_P), 
                                 <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                 <ct_e, r_s>, 
                                 HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                           KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                           ~coins_S)),
                                                                                               'derived',
                                                                                               '0'),
                                                                                    z),
                                                                        'derived', '0'),
                                                             '0'),
                                                 's_finished', '0'),
                                      <<KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                       ct_e, r_s>)
                                >
                           ) @ #tt1 )
                      case KEMTLS_PDK_SAUTH_ClientAction2_part2
                      solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tt1 )
                        case KEMTLS_KEM_s_KeyGen
                        solve( State( tid_1, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                      HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                         KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                         ~coins_S)),
                                                             'derived', '0'),
                                                  z),
                                      <KEM_s_PK(~sk_P), 
                                       <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                       ct_e, r_s>
                               ) ▶₁ #tt1 )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part1
                          by contradiction /* from formulas */
                        qed
                      qed
                    next
                      case KEMTLS_PDK_SAUTH_ServerAction1
                      solve( !Ltk( $S.1, KEM_s_PK(~sk_P), ~sk_P, 'KEM_s' ) ▶₁ #tt1 )
                        case KEMTLS_KEM_s_KeyGen
                        solve( SID( tid_2, '4',
                                    <'SATS', KEM_s_PK(~sk_P), 
                                     <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)>, 
                                     <KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>, 
                                     HMAC(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                                                               KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                                                               ~coins_S)),
                                                                                                   'derived',
                                                                                                   '0'),
                                                                                        KEM_e_Encaps_ss(KEM_e_PK(~sk_e),
                                                                                                        ~coins_e)),
                                                                            'derived', '0'),
                                                                 '0'),
                                                     's_finished', '0'),
                                          <
                                           <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                           >, 
                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>)
                                    >
                               ) @ #tt2 )
                          case KEMTLS_PDK_SAUTH_ClientAction2_part2
                          solve( !Pk( $S.1, KEM_s_PK(~sk_P), 'KEM_s' ) ▶₀ #tt2 )
                            case KEMTLS_KEM_s_KeyGen
                            solve( State( tid_2, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1',
                                          HKDFExtract(HKDFExpand(HKDFExtract('0',
                                                                             KEM_s_Encaps_ss(KEM_s_PK(~sk_P),
                                                                                             ~coins_S)),
                                                                 'derived', '0'),
                                                      KEM_e_Encaps_ss(KEM_e_PK(~sk_e), ~coins_e)),
                                          <KEM_s_PK(~sk_P), 
                                           <KEM_e_PK(~sk_e), ~r_c, KEM_s_Encaps_ct(KEM_s_PK(~sk_P), ~coins_S)
                                           >, 
                                           KEM_e_Encaps_ct(KEM_e_PK(~sk_e), ~coins_e), ~r_s>
                                   ) ▶₁ #tt2 )
                              case KEMTLS_PDK_SAUTH_ClientAction2_part1
                              by contradiction /* from formulas */
                            qed
                          qed
                        next
                          case KEMTLS_PDK_SAUTH_ServerAction1
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ClientAction2_part2_case_2
    solve( !Pk( $S, pk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ClientAction2_part1
        by solve( Auth( ~tid, '5', stage_accepted ) @ #t_auth )
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_1
    by contradiction /* from formulas */
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( Auth( ~tid, '2', stage_accepted ) @ #t_auth )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #t_auth )
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_3
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( Auth( ~tid, '3', stage_accepted ) @ #t_auth )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #t_auth )
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction1_case_4
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₁ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( Auth( ~tid, '4', stage_accepted ) @ #t_auth )
        case KEMTLS_PDK_SAUTH_ClientAction2_part2
        solve( !Pk( $S.1, pk_S, 'KEM_s' ) ▶₀ #t_auth )
          case KEMTLS_KEM_s_KeyGen
          by solve( State( ~tid, 'KEMTLS_PDK_SAUTH', 'ClientAction2_part1', HS,
                           <KEM_s_PK(~sk_P.1), <pk_e.1, r_c.1, ct_S.1>, ct_e, r_s.1>
                    ) ▶₁ #t_auth )
        qed
      qed
    qed
  next
    case KEMTLS_PDK_SAUTH_ServerAction2
    solve( !Ltk( $S, pk_S, sk_S, 'KEM_s' ) ▶₀ #t_accept )
      case KEMTLS_KEM_s_KeyGen
      solve( State( tid, 'KEMTLS_PDK_SAUTH', 'ServerAction1', <MS, fk_c>,
                    <KEM_s_PK(~sk_P), <pk_e, r_c, ct_S>, ct_e, r_s>
             ) ▶₁ #t_accept )
        case KEMTLS_PDK_SAUTH_ServerAction1
        by solve( Auth( ~tid, '5', stage_accepted ) @ #t_auth )
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end